syntax = "proto3";

enum PlaneType {
  PlaneUnknown = 0;
  PlaneTown = 1;
  PlaneMaze = 2;
  PlaneTrain = 3;
  PlaneChallenge = 4;
  PlaneRogue = 5;
  PlaneRaid = 6;
  PlaneAetherDivide = 7;
  PlaneTrialActivity = 8;
}

enum AvatarSlotType {
	AVATAR_SLOT_1 = 0;
	AVATAR_SLOT_2 = 1;
	AVATAR_SLOT_3 = 2;
}

enum ItemType {
	ITEM_TYPE_NONE = 0;
	ITEM_AVATAR_CARD = 1;
	ITEM_EQUIPMENT = 2;
	ITEM_MATERIAL = 3;
	ITEM_AVATAR_EXP = 4;
	ITEM_RELIC = 5;
}

enum VirtualItemType {
	VIRTUAL_ITEM_NONE = 0;
	VIRTUAL_ITEM_HCOIN = 1;
	VIRTUAL_ITEM_SCOIN = 2;
	VIRTUAL_ITEM_MCOIN = 3;
	VIRTUAL_ITEM_STAMINA = 11;
	VIRTUAL_ITEM_RESERVE_STAMINA = 12;
	VIRTUAL_ITEM_AVATAR_EXP = 21;
	VIRTUAL_ITEM_EXP = 22;
	VIRTUAL_ITEM_DAILY_ACTIVE_POINT = 23;
	VIRTUAL_ITEM_MP_MAX = 24;
	VIRTUAL_ITEM_PLAYER_RETURN_POINT = 25;
	VIRTUAL_ITEM_BATTLE_COLLEGE_POINT = 26;
	VIRTUAL_ITEM_ROGUE_COIN = 31;
	VIRTUAL_ITEM_ROGUE_TALENT_COIN = 32;
	VIRTUAL_ITEM_ROGUE_REWARD_KEY = 33;
	VIRTUAL_ITEM_ACHIEVEMENT_EXP = 41;
	VIRTUAL_ITEM_BP_EXP = 51;
	VIRTUAL_ITEM_BP_REAL_EXP = 52;
	VIRTUAL_ITEM_MUSEUM_FUNDS = 53;
	VIRTUAL_TRAINPARTY_BUILDING_FUNDS = 54;
	VIRTUAL_TRAINPARTY_AREA_UNLOCK_COIN = 55;
	VIRTUAL_TRAINPARTY_MOBILITY = 56;
	VIRTUAL_ITEM_WARRIOR_EXP = 190;
	VIRTUAL_ITEM_ROGUE_EXP = 191;
	VIRTUAL_ITEM_MAGE_EXP = 192;
	VIRTUAL_ITEM_SHAMAN_EXP = 193;
	VIRTUAL_ITEM_WARLOCK_EXP = 194;
	VIRTUAL_ITEM_KNIGHT_EXP = 195;
	VIRTUAL_ITEM_PRIEST_EXP = 196;
	VIRTUAL_ITEM_PUNK_LORD_POINT = 100000;
	VIRTUAL_ITEM_GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001;
	VIRTUAL_ITEM_GAMEPLAY_COUNTER_WOLF_BRO_BULLET = 280002;
	VIRTUAL_ITEM_ALLEY_FUNDS = 281001;
	VIRTUAL_ITEM_ROGUE_PUMAN_COUPON = 281012;
	VIRTUAL_ITEM_MONTH_CARD = 300101;
	VIRTUAL_ITEM_BP_NORMAL = 300102;
	VIRTUAL_ITEM_BP_DELUXE = 300103;
	VIRTUAL_ITEM_BP_UPGRADE = 300104;
	VIRTUAL_ITEM_HELIOBUS_FANS = 281002;
	VIRTUAL_ITEM_SPACE_ZOO_HYBRID_ITEM = 281003;
	VIRTUAL_ITEM_SPACE_ZOO_EXP_POINT = 281004;
	VIRTUAL_ITEM_ROGUE_NOUS_TALENT_COIN = 281013;
	VIRTUAL_ITEM_EVOLVE_BUILD_COIN = 281019;
	VIRTUAL_ITEM_DRINK_MAKER_TIP = 281005;
	VIRTUAL_ITEM_MONOPOLY_DICE = 281014;
	VIRTUAL_ITEM_MONOPOLY_COIN = 281015;
	VIRTUAL_ITEM_MONOPOLY_CHEATDICE = 281016;
	VIRTUAL_ITEM_MONOPOLY_REROLL = 281017;
	VIRTUAL_ITEM_ROGUE_TOURN_PERMANENT_TALENT_COIN = 281018;
	VIRTUAL_ITEM_ROGUE_TOURN_EXP = 281022;
	VIRTUAL_ITEM_MATCHTHREE_COIN = 281024;
	VIRTUAL_ITEM_SWORD_TRAINING_SKILL_POINT = 281023;
	VIRTUAL_ITEM_FIGHT_FEST_COIN = 281025;
	VIRTUAL_ITEM_ROGUE_MAGIC_TALENT_COIN = 281026;
}

enum GameplayCounterType {
	GAMEPLAY_COUNTER_NONE = 0;
	GAMEPLAY_COUNTER_MONSTER_SNEAK_VISION = 280001;
}

enum BlackLimitLevel {
	BLACK_LIMIT_LEVEL_ALL = 0;
}

enum AreaType {
	AREA_NONE = 0;
	AREA_CN = 1;
	AREA_JP = 2;
	AREA_ASIA = 3;
	AREA_WEST = 4;
	AREA_KR = 5;
	AREA_OVERSEAS = 6;
}

enum EntityType {
	ENTITY_NONE = 0;
	ENTITY_AVATAR = 1;
	ENTITY_MONSTER = 2;
	ENTITY_NPC = 3;
	ENTITY_PROP = 4;
	ENTITY_TRIGGER = 5;
	ENTITY_ENV = 6;
	ENTITY_SUMMON_UNIT = 7;
}

enum LanguageType {
	LANGUAGE_NONE = 0;
	LANGUAGE_SC = 1;
	LANGUAGE_TC = 2;
	LANGUAGE_EN = 3;
	LANGUAGE_KR = 4;
	LANGUAGE_JP = 5;
	LANGUAGE_FR = 6;
	LANGUAGE_DE = 7;
	LANGUAGE_ES = 8;
	LANGUAGE_PT = 9;
	LANGUAGE_RU = 10;
	LANGUAGE_TH = 11;
	LANGUAGE_VI = 12;
	LANGUAGE_ID = 13;
}

enum PlatformType {
	EDITOR = 0;
	IOS = 1;
	ANDROID = 2;
	PC = 3;
	WEB = 4;
	WAP = 5;
	PS4 = 6;
	NINTENDO = 7;
	CLOUD_ANDROID = 8;
	CLOUD_PC = 9;
	CLOUD_IOS = 10;
	PS5 = 11;
	MAC = 12;
	CLOUD_MAC = 13;
	CLOUD_WEB_ANDROID = 20;
	CLOUD_WEB_IOS = 21;
	CLOUD_WEB_PC = 22;
	CLOUD_WEB_MAC = 23;
	CLOUD_WEB_TOUCH = 24;
	CLOUD_WEB_KEYBOARD = 25;
}

enum ReloginType {
	NO_KICK = 0;
	FORCE_KICK = 1;
	IDLE_KICK = 2;
	SILENCE = 3;
}

enum AvatarType {
	AVATAR_TYPE_NONE = 0;
	AVATAR_TRIAL_TYPE = 1;
	AVATAR_LIMIT_TYPE = 2;
	AVATAR_FORMAL_TYPE = 3;
	AVATAR_ASSIST_TYPE = 4;
	AVATAR_AETHER_DIVIDE_TYPE = 5;
	AVATAR_UPGRADE_AVAILABLE_TYPE = 6;
}

enum MultiPathAvatarType {
	MultiPathAvatarTypeNone = 0;
	Mar_7thKnightType = 1001;
	Mar_7thRogueType = 1224;
	BoyWarriorType = 8001;
	GirlWarriorType = 8002;
	BoyKnightType = 8003;
	GirlKnightType = 8004;
	BoyShamanType = 8005;
	GirlShamanType = 8006;
	BoyMemoryType = 8007;
	GirlMemoryType = 8008;
}

enum Gender {
	GenderNone = 0;
	GenderMan = 1;
	GenderWoman = 2;
}

enum ProductType {
	PRODUCT_NONE = 0;
	PRODUCT_NORMAL = 1;
	PRODUCT_LIMIT = 2;
	PRODUCT_LIMIT_NO_PAY = 3;
	PRODUCT_NO_PROCESS_ORDER = 4;
}

enum ProductGiftType {
	PRODUCT_GIFT_NONE = 0;
	PRODUCT_GIFT_COIN = 1;
	PRODUCT_GIFT_MONTH_CARD = 2;
	PRODUCT_GIFT_BP_68 = 3;
	PRODUCT_GIFT_BP_128 = 4;
	PRODUCT_GIFT_BP68_UPGRADE_128 = 5;
	PRODUCT_GIFT_POINT_CARD = 6;
	PRODUCT_GIFT_PS_PRE_ORDER_1 = 7;
	PRODUCT_GIFT_PS_PRE_ORDER_2 = 8;
	PRODUCT_GIFT_GOOGLE_POINTS_100 = 9;
	PRODUCT_GIFT_GOOGLE_POINTS_150 = 10;
	PRODUCT_GIFT_PS_POINT_CARD_030 = 11;
	PRODUCT_GIFT_PS_POINT_CARD_050 = 12;
	PRODUCT_GIFT_PS_POINT_CARD_100 = 13;
}

enum FeatureSwitchType {
	FEATURE_SWITCH_NONE = 0;
	FEATURE_SWITCH_SHOP = 1;
	FEATURE_SWITCH_LINEUP_NAME = 2;
	FEATURE_SWITCH_RECHARGE_SHOP = 3;
	FEATURE_SWITCH_NICKNAME = 4;
	FEATURE_SWITCH_SIGNATURE = 5;
	FEATURE_SWITCH_BATTLEPASS = 6;
	FEATURE_SWITCH_PUNK_LORD = 7;
	FEATURE_SWITCH_MONTHCARD_DAILY = 8;
	FEATURE_SWITCH_PICTURE_SHARE = 9;
	FEATURE_SWITCH_ROGUE = 10;
	FEATURE_SWITCH_CHALLENGE = 11;
	FEATURE_SWITCH_COCOON = 12;
	FEATURE_SWITCH_RAID = 13;
	FEATURE_SWITCH_MAZE_PLANE_EVENT = 14;
	FEATURE_SWITCH_ACTIVITY_PANEL = 15;
	FEATURE_SWITCH_MAILBOX = 16;
	FEATURE_SWITCH_QUEST = 17;
	FEATURE_SWITCH_GACHA = 18;
	FEATURE_SWITCH_CHAT = 19;
	FEATURE_SWITCH_MODIFY_FRIEND_ALIAS = 20;
	FEATURE_SWITCH_USE_ITEM = 21;
	FEATURE_SWITCH_ACTIVITY_SCHEDULE = 22;
	FEATURE_SWITCH_FARM_ELEMENT = 23;
	FEATURE_SWITCH_ACHIEVEMENT_LEVEL = 24;
	FEATURE_SWITCH_DAILY_ACTIVE_LEVEL = 25;
	FEATURE_SWITCH_PLAYER_RETURN = 26;
	FEATURE_SWITCH_FIRST_SET_NICKNAME = 27;
	FEATURE_SWITCH_MAIN_MISSION_REWARD = 28;
	FEATURE_SWITCH_SUB_MISSION_REWARD = 29;
	FEATURE_SWITCH_PAM_MISSION = 30;
	FEATURE_SWITCH_DESTROY_ITEM = 32;
	FEATURE_SWITCH_CONSUME_ITEM_TURN = 33;
	FEATURE_SWITCH_ROGUE_MODIFIER = 34;
	FEATURE_SWITCH_CHESS_ROGUE = 35;
	FEATURE_SWITCH_CHESS_ROGUE_BOARD = 36;
	FEATURE_SWITCH_ROLL_SHOP = 37;
	FEATURE_SWITCH_H5_RETURN = 38;
	FEATURE_SWITCH_OFFERING = 39;
	FEATURE_SWITCH_SERVER_RED_POINT = 40;
	FEATURE_SWITCH_MONOPOLY_OPTION_RATIO = 41;
	FEATURE_SWITCH_MONOPOLY_GET_RAFFLE_TICKET = 42;
	FEATURE_SWITCH_MONOPOLY_TAKE_RAFFLE_REWARD = 43;
	FEATURE_SWITCH_CHALLENGE_RECOMMEND_LINEUP = 44;
	FEATURE_SWITCH_PSN_MEMBER_SHIP_CHECK = 45;
	FEATURE_SWITCH_PLAYER_BOARD_DEVELOPMENT = 46;
	FEATURE_SWITCH_PVP = 47;
	FEATURE_SWITCH_ROGUE_MODE = 48;
	FEATURE_SWITCH_ROGUE_TOURN_UGC = 49;
	FEATURE_SWITCH_RELIC_FILTER_PLAN_NAME = 50;
	FEATURE_SWITCH_MAZE_ITEM_USE_BUFF_DROP = 51;
	FEATURE_SWITCH_RED_DOT = 52;
	FEATURE_SWITCH_GAME_STATE_SERVICE = 53;
}

enum SecretKeyType {
	SECRET_KEY_NONE = 0;
	SECRET_KEY_SERVER_CHECK = 1;
	SECRET_KEY_VIDEO = 2;
	SECRET_KEY_BATTLE_TIME = 3;
}

enum ReplayType {
	REPLAY_TYPE_NONE = 0;
	REPLAY_TYPE_PUNK_LORD = 1;
}

enum PunkLordShareType {
	PUNK_LORD_SHARE_TYPE_NONE = 0;
	PUNK_LORD_SHARE_TYPE_FRIEND = 1;
	PUNK_LORD_SHARE_TYPE_ALL = 2;
}

enum PunkLordAttackerStatus {
	PUNK_LORD_ATTACKER_STATUS_NONE = 0;
	PUNK_LORD_ATTACKER_STATUS_ATTACKED = 1;
	PUNK_LORD_ATTACKER_STATUS_ATTACKING = 2;
	PUNK_LORD_ATTACKER_STATUS_ATTACKED_AND_ATTACKING = 3;
}

enum PunkLordMonsterInfoNotifyReason {
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_NONE = 0;
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_ENTER_RAID = 1;
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_BATTLE_END = 2;
	PUNK_LORD_MONSTER_INFO_NOTIFY_REASON_LEAVE_RAID = 3;
}

enum ChatType {
	CHAT_TYPE_NONE = 0;
	CHAT_TYPE_PRIVATE = 1;
	CHAT_TYPE_GROUP = 2;
}

enum MsgType {
	MSG_TYPE_NONE = 0;
	MSG_TYPE_CUSTOM_TEXT = 1;
	MSG_TYPE_EMOJI = 2;
	MSG_TYPE_INVITE = 3;
}

enum ShieldType {
	SHIELD_TYPE_NONE = 0;
	SHIELD_TYPE_REPLACE = 1;
	SHIELD_TYPE_SHIED = 2;
}

enum FuncUnlockIdType {
	FUNC_UNLOCK_ID_NONE = 0;
	FUNC_UNLOCK_ID_RELIC = 403;
	FUNC_UNLOCK_ID_RELIC_NUM = 404;
	FUNC_UNLOCK_ID_EQUIPMENT = 401;
	FUNC_UNLOCK_ID_SKILLTREE = 402;
	FUNC_UNLOCK_ID_GACHA = 2300;
	FUNC_UNLOCK_ID_EXPEDITION = 3100;
	FUNC_UNLOCK_ID_COMPOSE = 4100;
	FUNC_UNLOCK_ID_FIGHTACTIVITY = 3700;
}

enum AssistAvatarType {
	ASSIST_AVATAR_UNKNOW = 0;
	ASSIST_AVATAR_LEVEL = 1;
	ASSIST_AVATAR_RANK = 2;
}

enum DevelopmentType {
	DEVELOPMENT_NONE = 0;
	DEVELOPMENT_ROGUE_COSMOS = 1;
	DEVELOPMENT_ROGUE_CHESS = 2;
	DEVELOPMENT_ROGUE_CHESS_NOUS = 3;
	DEVELOPMENT_MEMORY_CHALLENGE = 4;
	DEVELOPMENT_STORY_CHALLENGE = 5;
	DEVELOPMENT_UNLOCK_AVATAR = 6;
	DEVELOPMENT_UNLOCK_EQUIPMENT = 7;
	DEVELOPMENT_ACTIVITY_START = 8;
	DEVELOPMENT_ACTIVITY_END = 9;
	DEVELOPMENT_BOSS_CHALLENGE = 10;
	DEVELOPMENT_ROGUE_TOURN = 11;
	DEVELOPMENT_ROGUE_TOURN_WEEK = 12;
	DEVELOPMENT_ROGUE_MAGIC = 13;
}

enum PlayingState {
	PLAYING_STATE_NONE = 0;
	PLAYING_ROGUE_COSMOS = 1;
	PLAYING_ROGUE_CHESS = 2;
	PLAYING_ROGUE_CHESS_NOUS = 3;
	PLAYING_CHALLENGE_MEMORY = 4;
	PLAYING_CHALLENGE_STORY = 5;
	PLAYING_CHALLENGE_BOSS = 6;
	PLAYING_ROGUE_TOURN = 7;
	PLAYING_ROGUE_MAGIC = 8;
}

enum MatchRoomCharacterType {
	MatchRoomCharacter_None = 0;
	MatchRoomCharacter_Leader = 1;
	MatchRoomCharacter_Member = 2;
	MatchRoomCharacter_Watcher = 3;
}

enum MatchRoomCharacterStatus {
	MatchRoomCharacterStatus_None = 0;
	MatchRoomCharacterStatus_Idle = 1;
	MatchRoomCharacterStatus_Operating = 2;
	MatchRoomCharacterStatus_Ready = 3;
	MatchRoomCharacterStatus_Fighting = 4;
	MatchRoomCharacterStatus_Watching = 5;
}

message PlayerBasicInfo {
	string nickname = 1;
	uint32 level = 2;
	uint32 exp = 3;
	uint32 stamina = 4;
	uint32 mcoin = 5;
	uint32 hcoin = 6;
	uint32 scoin = 7;
	uint32 world_level = 8;
}

message AmountInfo {
	uint32 cur_amount = 1;
	uint32 max_amount = 2;
}

message BlackInfo {
	int64 begin_time = 1;
	int64 end_time = 2;
	uint32 limit_level = 3;
	uint32 ban_type = 4;
}

message FeverTimeAvatar {
	AvatarType avatar_type = 1;
	uint32 id = 2;
}

message VersionCount {
	uint32 version = 1;
	uint32 count = 2;
}

message ClientDownloadData {
	uint32 version = 1;
	int64 time = 2;
	bytes data = 3;
	//uint32 ghkpbpdfijh = 4;
}

message ClientObjDownloadData {
	bytes iiecaooijbn = 1;
	ClientDownloadData client_obj_download_data = 2;
	repeated ClientDownloadData eloefhgkdfg = 3;
}

message ClientUploadData {
	string tag = 1;
	string value = 2;
}

message FeatureSwitchParam {
	repeated uint32 switch_list = 1;
}

message FeatureSwitchInfo {
	FeatureSwitchType Type = 1;
	repeated FeatureSwitchParam SwitchList = 2;
	bool IsAllClosed = 3;
}

message ExtraDeviceInfo {
	string mmfbanghmhl = 1;
	string mdomlikdlih = 2;
	string jbocchafhlh = 3;
	string oeomjechnbi = 4;
	string meiegkjddcb = 5;
	string bhndmmdkfee = 6;
	string mac = 7;
}

message ReplayInfo {
	uint64 mnojpieebco = 1;
	ReplayType replay_type = 2;
	uint32 stage_id = 3;
	uint32 uid = 4;
	string nickname = 5;
	uint32 head_icon = 6;
	string replay_name = 7;
	uint64 create_time = 8;
	uint32 inepcgkdobl = 9;
	uint32 acocbgccece = 10;
}

message PunkLordBattleAvatar {
	uint32 AvatarId = 1;
	uint32 AvatarLevel = 2;
}

message PunkLordBattleRecord {
	uint32 Uid = 1;
	uint32 DamageHp = 2;
	bool IsFinalHit = 3;
	uint32 OverKillDamageHp = 4;
	string BattleReplayKey = 5;
	repeated PunkLordBattleAvatar AvatarList = 6;
	uint32 AssistScore = 7;
	uint32 DamageScore = 8;
	uint32 FinalHitScore = 9;
}

message PunkLordBattleRecordList {
	repeated PunkLordBattleRecord battle_record_list = 1;
}

message PunkLordMonsterKey {
	uint32 uid = 1;
	uint32 monster_id = 2;
}

message PunkLordMonsterBasicInfo {
	uint32 uid = 1;
	uint32 monster_id = 2;
	uint32 config_id = 3;
	uint32 world_level = 4;
	int64 create_time = 5;
	uint32 left_hp = 6;
	uint32 lppoobipgmk = 7;
	PunkLordShareType gagnibbldff = 8;
	bool jcnedegkkja = 9;
}

message PunkLordBattleReplay {
	string BattleReplayKey = 1;
	ReplayInfo ReplayInfo = 2;
}

message FJLHHGACNGD {
	uint64 bgefjacaeka = 1;
	uint32 mggmpkighbm = 2;
	uint32 dbgddenjcia = 3;
}

message CDGPKIJBFDK {
	oneof HCCHFOBGGFD {
		FJLHHGACNGD jbeoeflhdpm = 101;
	}
}

message ServerData {
	string name = 1;
	string title = 2;
	string dispatch_url = 3;
	string env_type = 4;
	string display_name = 5;
	string msg = 6;
}

message GlobalDispatchData {
	uint32 retcode = 1;
	string msg = 2;
	string top_sever_region_name = 3;
	repeated ServerData server_list = 4;
	string stop_desc = 5;
}

message RelicFilterPlanSettings {
	uint32 RarityBitset = 1;
	repeated uint32 RelicSetList = 2;
	repeated uint32 BodyMainPropertyList = 3;
	repeated uint32 FootMainPropertyList = 4;
	repeated uint32 SphereMainPropertyList = 5;
	repeated uint32 RopeMainPropertyList = 6;
	bool IsIncludeFilterSubProperty = 7;
	uint32 SubPropertyNum = 8;
	repeated uint32 SubPropertyList = 9;
	repeated uint32 HeadMainPropertyList = 10;
	repeated uint32 HandMainPropertyList = 11;
}

enum BattleCheckStrategyType {
	BATTLE_CHECK_STRATEGY_IDENTICAL = 0;
	BATTLE_CHECK_STRATEGY_SERVER = 1;
	BATTLE_CHECK_STRATEGY_CLIENT = 2;
}

enum BattleCheckResultType {
	BATTLE_CHECK_RESULT_SUCC = 0;
	BATTLE_CHECK_RESULT_FAIL = 1;
	BATTLE_CHECK_RESULT_PASS = 2;
}

enum BattleModuleType {
	BATTLE_MODULE_MAZE = 0;
	BATTLE_MODULE_CHALLENGE = 1;
	BATTLE_MODULE_COCOON = 2;
	BATTLE_MODULE_ROGUE = 3;
	BATTLE_MODULE_CHALLENGE_ACTIVITY = 4;
	BATTLE_MODULE_TRIAL_LEVEL = 5;
	BATTLE_MODULE_AETHER_DIVIDE = 6;
}

enum AetherdivideSpiritLineupType {
	AETHERDIVIDE_SPIRIT_LINEUP_NONE = 0;
	AETHERDIVIDE_SPIRIT_LINEUP_NORMAL = 1;
	AETHERDIVIDE_SPIRIT_LINEUP_TRIAL = 2;
}

enum BattleTargetType {
	BATTLE_TARGET_TYPE_NONE = 0;
	BATTLE_TARGET_TYPE_SCORE = 1;
	BATTLE_TARGET_TYPE_ACHIEVEMENT = 2;
	BATTLE_TARGET_TYPE_RAID = 3;
	BATTLE_TARGET_TYPE_CHALLENGE_SCORE = 4;
	BATTLE_TARGET_TYPE_COMMON = 5;
	BATTLE_TARGET_TYPE_CLIENT_ACHIEVEMENT = 6;
}

enum DeathSource {
	UNKNOWN = 0;
	KILLED_BY_OTHERS = 1;
	KILLED_BY_SELF = 2;
	ESCAPE = 3;
}

enum BattleTag {
	TAG_NONE = 0;
	TAG_HIDE_NPC_MONSTER = 1;
}

enum DEGGBDOGEGG {
	NORMAL_CREATE = 0;
	FORM_CHANGE = 1;
}

enum BattleEndReason {
	BATTLE_END_REASON_NONE = 0;
	BATTLE_END_REASON_ALL_DIE = 1;
	BATTLE_END_REASON_TURN_LIMIT = 2;
}

enum BattleStaticticEventType {
	BATTLE_STATICTIC_EVENT_NONE = 0;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_ADD_EXPLORE = 1;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_OPEN_GRID = 2;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_PICKUP_ITEM = 3;
	BATTLE_STATICTIC_EVENT_TREASURE_DUNGEON_USE_BUFF = 4;
	BATTLE_STATICTIC_EVENT_TELEVISION_ACTIVITY_UPDATE_MAZE_BUFF_LAYER = 5;
}

enum EANJMAKDNME {
	kNone = 0;
	kkillEliteMonsterNum = 1;
	kkillMonsterNum = 2;
}

enum BattleEndStatus {
	BATTLE_END_NONE = 0;
	BATTLE_END_WIN = 1;
	BATTLE_END_LOSE = 2;
	BATTLE_END_QUIT = 3;
}

message BattleOp {
	uint32 turn_counter = 1;
	uint32 state = 2;
	uint32 action_entity_id = 3;
	uint32 target_entity_id = 4;
	uint32 op_type = 5;
	uint32 skill_index = 6;
	uint32 operation_counter = 7;
	string ckkopnhbfom = 8;
}

message BattleEquipment {
	uint32 id = 1;
	uint32 level = 2;
	uint32 promotion = 3;
	uint32 rank = 4;
}

message BattleRelic {
	uint32 id = 1;
	uint32 level = 2;
	uint32 main_affix_id = 3;
	repeated RelicAffix sub_affix_list = 4;
	uint32 unique_id = 5;
	uint32 set_id = 6;
	uint32 type = 7;
	uint32 rarity = 8;
}

message AvatarSkillTree {
	uint32 point_id = 1;
	uint32 level = 2;
}

message RelicAffix {
	uint32 affix_id = 1;
	uint32 cnt = 2;
	uint32 step = 3;
}

message EPHIOEIMEPB {
	bool apjgenoipnb = 1;
	repeated uint32 hbcpoddmcpo = 2;
	uint32 ojkjhgejlek = 3;
	uint32 lejnkcjgbec = 4;
}

message BattleAvatar {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 level = 3;
	uint32 rank = 4;
	uint32 index = 5;
	repeated AvatarSkillTree skilltree_list = 6;
	repeated BattleEquipment equipment_list = 7;
	uint32 hp = 8;
	uint32 promotion = 10;
	repeated BattleRelic relic_list = 11;
	uint32 world_level = 12;
	uint32 assist_uid = 13;
	EPHIOEIMEPB nlcjclfgmin = 15;
	AmountInfo sp= 16;
	uint32 pgijnibedfo = 17;
}

message BattleMonsterParam {
	uint32 hard_level_group = 1;
	uint32 level = 2;
	uint32 elite_group = 3;
	uint32 cbiaoplipkj = 4;
}

message BattleMonster {
	uint32 monster_id = 1;
	uint32 cur_hp = 2;
	uint32 max_hp = 3;
}

message BattleMonsterWave {
	repeated BattleMonster monster_list = 1;
	BattleMonsterParam wave_param = 2;
	uint32 battle_stage_id = 3;
	uint32 battle_wave_id = 4;
}

message BattleBuff {
	uint32 id = 1;
	uint32 level = 2;
	uint32 owner_index = 3;
	uint32 wave_flag = 4;
	repeated uint32 target_index_list = 5;
	map<string, float> dynamic_values = 6;
}

message BPBCFAENCGA {
	uint32 id = 1;
	uint32 bmjckoiomgp = 2;
	uint32 ljmgfglaiji = 3;
}

message NMKAECDMHOP {
	uint32 pamdjgmndma = 1;
}

message FBFONBJFEDE {
	uint32 id = 1;
	uint32 bmjckoiomgp = 2;
}

message GHGEPNBHMNE {
	uint32 id = 1;
	uint32 progress = 2;
}

message BattleTarget {
	uint32 Id = 1;
	uint32 progress = 2;
	uint32 TotalProgress = 3;
}

message BattleTargetList {
	repeated BattleTarget battle_target_list = 1;
}

message BattleLineup {
	repeated BattleAvatar avatar_list = 1;
	repeated BattleMonsterWave monster_wave_list = 2;
	repeated BattleBuff buff_list = 3;
	uint32 world_level = 7;
	map<uint32, BattleTargetList> battle_target_info = 9;
	NMKAECDMHOP igpipnaaebj = 10;
	repeated BattleAvatar pkkdlclifac = 11;
	EvolveBuildBattleInfo adafaohflma = 12;
	OLGKJDLMEIO gddalcgoobg = 13;
	BattleRogueMagicInfo battle_rogue_magic_info = 14;
}

message OLGKJDLMEIO {
	map<uint32, uint32> fmohpibgbka = 1;
	uint32 dkhgchahomk = 2;
	uint32 ldlkicepblb = 3;
	uint32 kkhmdcjoimb = 4;
}

message AetherAvatarInfo {
	uint32 id = 1;
	uint32 index = 2;
	uint32 promotion = 3;
	repeated uint32 passive_skill = 4;
	AetherdivideSpiritLineupType spirit_lineup_type = 5;
	AmountInfo sp_bar = 6;
}

message JPNEEBPMHID {
	repeated AetherAvatarInfo avatar_list = 1;
	repeated BattleMonsterWave monster_wave_list = 2;
	repeated BattleBuff buff_list = 3;
}

message ClientTurnSnapshot {
	uint32 turn_counter = 1;
	uint32 random_counter = 2;
	uint32 anim_event_counter = 3;
	repeated CharacterSnapshot snapshot_list = 4;
	repeated AnimEventSnapshot anim_event_list = 5;
	uint32 accfcdcfgnl = 6;
}

message GamecoreConfig {
	bool is_skip_verify = 1;
	uint32 max_turn_cnt = 2;
	bool is_auto_fight = 3;
	string csv_path = 4;
	bool cpghfddhdah = 5;
	bool bplaapfgnbi = 6;
	uint32 deefbboiclj = 7;
}

message BattleBuffMsg {
	repeated uint32 buff_id_list = 1;
	repeated uint32 buff_index_list = 2;
	repeated uint32 buff_level_list = 3;
	repeated uint32 buff_flag_list = 4;
}

message LDCPMBINOEO {
	uint32 mnjceidpaal = 1;
	uint32 abphopmgnlh = 2;
}

message HAPEOBJJPAF {
	bool afepjbiopdl = 1;
	map<string, LDCPMBINOEO> kmibbnglipc = 2;
	bytes dfemmlkbabk = 3;
}

message GNKEPMFPBAJ {
	repeated ClientTurnSnapshot jglkgmmieee = 1;
	string chehljekonk = 2;
	string debug_extra_info = 3;
	repeated BattleReplayStringHash fpblkiemanp = 4;
	uint32 plane_id = 5;
	uint32 floor_id = 6;
	uint32 fbklolcjipk = 7;
	uint32 leegnifhgdh = 8;
	HAPEOBJJPAF ibojjfgbmak = 9;
}

message BattleReplay {
	uint32 version = 1;
	uint32 logic_random_seed = 2;
	uint32 stage_id = 3;
	BattleLineup lineup = 4;
	repeated BattleOp op_list = 5;
	bytes turn_snapshot_hash = 6;
	uint32 maze_plane_id = 7;
	repeated uint32 extra_ability_list = 8;
	bool is_ai_consider_ultra_skill = 9;
	BattleCheckStrategyType check_strategy = 10;
	BattleModuleType battle_module_type = 11;
	repeated BattleEventBattleInfo battle_event = 12;
	uint32 cycle_count = 14;
	GamecoreConfig config = 15;
	bytes game_core_log_encode = 16;
	uint32 client_version = 17;
	uint32 makigfemknm = 18;
	JPNEEBPMHID ofcbeehliil = 19;
	GNKEPMFPBAJ maeipfdfdco = 100;
}

message BattleReplayStringHash {
	int32 hash = 1;
	string value = 2;
}

message AvatarProperty {
	double max_hp = 1;
	double attack = 2;
	double defence = 3;
	double speed = 4;
	double left_hp = 5;
	double left_sp = 6;
	double max_amount = 7;
}

message EquipmentProperty {
	uint32 id = 1;
	uint32 rank = 2;
	uint32 promotion = 3;
	uint32 level = 4;
}

message AttackDamageProperty {
	string attack_type = 1;
	double damage = 2;
}

message SkillUseProperty {
	uint32 skill_id = 1;
	string skill_type = 2;
	uint32 skill_level = 3;
	uint32 skill_use_count = 4;
	uint32 hnikocpbkai = 5;
	uint32 gbcbaoleckp = 6;
	uint32 ehknagaoghb = 7;
	uint32 njmamcpgeik = 8;
	uint32 dmphgmkhlng = 9;
}

message PJHNHAKOHMJ {
	uint32 skill_id = 1;
	double ekapbeehomb = 2;
	repeated uint32 battle_target_list = 3;
	double damage = 4;
}

message SpAddSource {
	string source = 1;
	uint32 sp_add = 2;
}

message AbilityUseStt {
	string ndiefpcnbdh = 1;
	uint32 count = 2;
	double total_damage = 3;
}

message AvatarBattleInfo {
	AvatarType avatar_type = 1;
	uint32 id = 2;
	uint32 avatar_level = 3;
	uint32 avatar_rank = 4;
	uint32 avatar_promotion = 5;
	AvatarProperty avatar_status = 6;
	repeated AvatarSkillTree avatar_skill = 7;
	repeated EquipmentProperty avatar_equipment = 8;
	uint32 total_turns = 9;
	double total_damage = 10;
	double total_heal = 11;
	double total_damage_taken = 12;
	double total_hp_recover = 13;
	double total_sp_cost = 14;
	uint32 stage_id = 15;
	uint32 stage_type = 16;
	double total_break_damage = 17;
	repeated AttackDamageProperty attack_type_damage = 18;
	repeated AttackDamageProperty attack_type_break_damage = 19;
	repeated AttackDamageProperty attack_type_max_damage = 20;
	repeated SkillUseProperty skill_times = 21;
	double delay_cumulate = 22;
	uint32 total_sp_add = 23;
	repeated SpAddSource sp_add_source = 24;
	uint32 total_bp_cost = 25;
	uint32 die_times = 26;
	uint32 revive_times = 27;
	uint32 break_times = 28;
	uint32 extra_turns = 29;
	double total_shield = 30;
	double total_shield_taken = 31;
	double total_shield_damage = 32;
	AvatarProperty initial_status = 33;
	repeated BattleRelic relics = 34;
	uint32 assist_uid = 35;
	repeated AttackDamageProperty jeabmcjmhkg = 36;
	double lnapaonggii = 37;
	double dagbcmappeb = 38;
	double lamjenicfpi = 39;
	double fbpnbccjacl = 40;
	repeated AbilityUseStt hciihbfjife = 41;
	uint32 joobdaimbje = 42;
	uint32 oajackjjcgp = 43;
	double jkehimgbdaf = 44;
	double hhcmonkjlkc = 45;
	double okdnaipleaj = 46;
	double mjdbamikpmm = 47;
	double bfddmnhacdo = 48;
	uint32 nkeemlhkool = 49;
	uint32 cklndlilipl = 50;
	uint32 ajfdedllakn = 51;
	double gbmebhpdicg = 52;
	uint32 jheahkhkcgj = 53;
	uint32 ijnjffhonai = 54;
}

message MonsterProperty {
	double max_hp = 1;
	double attack = 2;
	double defence = 3;
	double shield = 4;
	double speed = 5;
	double left_hp = 6;
	double enter_battle_hp = 7;
}

message MonsterPhaseStt {
	uint32 jdhaibldfih = 1;
	double djkjcbcjiol = 2;
	uint32 jdooapbehjh = 3;
	uint32 break_times = 4;
}

message MonsterBattleInfo {
	uint32 entity_id = 1;
	uint32 monster_id = 2;
	uint32 gnjipbnhphn = 3;
	uint32 bkogbkgnggg = 4;
	MonsterProperty gmihiipecpa = 5;
	uint32 total_turns = 6;
	double total_damage = 7;
	double total_heal = 8;
	double total_damage_taken = 9;
	double pjnenikmpoi = 10;
	double total_hp_recover = 11;
	uint32 stage_id = 12;
	uint32 battle_id = 13;
	uint32 ncpmbjneofh = 14;
	repeated AttackDamageProperty attack_type_damage = 15;
	repeated SkillUseProperty skill_times = 16;
	uint32 stage_type = 17;
	double febhblfmiod = 18;
	double delay_cumulate = 19;
	DeathSource chpcdcnfjbf = 20;
	uint32 wave = 21;
	int32 gkibdakhboe = 22;
	uint32 phase = 23;
	uint32 blgkiogoeid = 24;
	BattleTag nniioemfhcd = 25;
	repeated PJHNHAKOHMJ skill_info = 26;
	uint32 hliojkmadlm = 27;
	repeated MonsterPhaseStt jojcimncgmp = 28;
	uint32 djjnpchoklc = 29;
	uint32 gbflihnnped = 30;
	DEGGBDOGEGG lkpoclabgee = 31;
}

message BattleEventProperty {
	AmountInfo sp_bar = 2;
}

message BattleEventBattleInfo {
	uint32 battle_event_id = 1;
	BattleEventProperty status = 2;
	repeated PJHNHAKOHMJ skill_info = 3;
}

message ScoreInfo {
	uint32 ikhioiiojha = 1;
	uint32 score_id = 2;
}

message BKNHOHPNCLG {
	uint32 avatar_id = 1;
	repeated uint32 hocibkaedll = 2;
	uint32 source = 3;
	double damage = 4;
	repeated uint32 ehjhncjnmdo = 5;
	int32 fonpdaelofa = 6;
	double jhofclmchjm = 7;
	uint32 gdhmpkiaego = 8;
	uint32 wave = 9;
}

message CKLKPNBJBGN {
	uint32 avatar_id = 1;
	int32 oielnbaaifi = 2;
}

message KHKLCKLEDAL {
	uint32 bkbenaeiadb = 1;
	uint32 jbanbpbcjpi = 2;
	uint32 entity_id = 3;
}

message ONCGADJDPNO {
	uint32 jdhaibldfih = 1;
	uint32 monster_id = 2;
	repeated CKLKPNBJBGN okkdbkagoao = 3;
	uint32 ekapbeehomb = 4;
	repeated KHKLCKLEDAL nfelfacjogf = 5;
}

message CAJBBBDBCAP {
	BattleStaticticEventType type = 1;
	uint32 ljknddlajji = 2;
	uint32 cgnkhekhiml = 3;
}

message DHOOCHKMPBP {
	uint32 boajepbgkll = 1;
	uint32 gapnmboffoh = 2;
}

message BAFDPJPGGOG {
	uint32 kifljlfnkpl = 1;
	bool khknacfljnf = 2;
	DHOOCHKMPBP oedndgjfkhb = 3;
}

message AKPEJLAIBLA {
	uint32 card_id = 1;
}

message EvolveBuildGearDamageInfo {
	uint32 GearId = 1;
	double Damage = 2;
	double HpDamage = 3;
}

message ANDFBODMGFK {
	repeated uint32 ddmkjocdcgi = 1;
}

message CIFENMDKACO {
	uint32 wave = 1;
	uint32 score_id = 2;
	uint32 oknnblmcjaa = 3;
	repeated DHOOCHKMPBP kihlfoepamm = 4;
	float ekapbeehomb = 5;
}

message OJGEIANDJOE {
	uint32 miieidjdddo = 1;
	repeated CIFENMDKACO peeliikfgfk = 2;
}

message EvolveBuildBattleInfo {
	uint32 CurLevelId = 1;
	uint32 CurPeriod = 2;
	uint32 CurCoin = 3;
	repeated BAFDPJPGGOG WeaponSlotList = 4;
	repeated BAFDPJPGGOG AccessorySlotList = 5;
	repeated uint32 BanGearList = 6;
	ANDFBODMGFK Collection = 7;
	repeated uint32 AllowedGearList = 8;
	uint32 CurExp = 9;
	uint32 CurReroll = 10;
	uint32 CurTreasureMissCnt = 11;
	repeated uint32 PeriodIdList = 12;
	uint32 CurGearLostCnt = 13;
	uint32 CurWave = 14;
	bool IsUnlockGearReroll = 15;
	bool IsUnlockGearBan = 16;
	repeated AKPEJLAIBLA CardList = 17;
	repeated EvolveBuildGearDamageInfo GearDamageList = 18;
	repeated uint32 StatParams = 19;
	bool IsGiveup = 20;
	uint32 CurUnusedRoundCnt = 21;
	OJGEIANDJOE StatLogInfo = 22;
	uint32 PeriodFirstRandomSeed = 23;
}

message CLNOHAGLFKH {
	string phase = 1;
	float khobmbjafoa = 2;
	float jjlcepcnngb = 3;
	uint32 ihegahmpfcd = 4;
	uint32 ndgkfgaoggg = 5;
	uint32 heifhkkaeoe = 6;
	uint32 ildhmnelfej = 7;
	uint32 nbjaapeafbh = 8;
	repeated uint32 mlkpobolkjm = 9;
	repeated uint32 ifmfbegfndg = 10;
}

message MAOCCAPKJNE {
	uint32 gjipkccieml = 1;
	uint32 iaoeomfhleb = 2;
	uint32 decaemjponm = 3;
	uint32 nmjofbddlal = 4;
	uint32 lecbngdigbd = 5;
	uint32 cmnfkidhnge = 6;
	repeated uint32 boss_info = 7;
	repeated CLNOHAGLFKH gecpcopjpna = 8;
}

message EKCJEBJLGCG {
	uint32 wave = 1;
	double nemeghneclf = 2;
	double fcpljiekgbk = 3;
	uint32 epnhgojgagg = 4;
	uint32 jlmojbkdolj = 5;
}

message PGJELADPNCM {
	string key = 1;
	double value = 2;
}

message BattleRogueMagicModifierInfo {
	uint32 rogue_magic_battle_const = 1;
}

message BattleRogueMagicRoundCount {
	uint32 battle_standard_round_limit = 1;
	uint32 battle_extra_round_limit = 2;
}

message BattleRogueMagicUnit {
	uint32 magic_unit_id = 1;
	uint32 level = 2;
	bool khknacfljnf = 3;
	uint32 dice_slot_id = 4;
	map<uint32, uint32> hgklofgmlmn = 5;
}

message BattleRogueMagicScepter {
	uint32 scepter_id = 1;
	repeated BattleRogueMagicUnit rogue_magic_unit_info_list = 2;
	uint32 level = 3;
	map<uint32, uint32> trench_count = 4;
}

message BattleRogueMagicItemInfo {
	BattleRogueMagicRoundCount battle_round_count = 1;
	repeated BattleRogueMagicScepter battle_scepter_list = 2;
}

message BattleRogueMagicDetailInfo {
	oneof content_case {
		BattleRogueMagicItemInfo battle_magic_item_info = 1;
	}
}

message BattleRogueMagicInfo {
	BattleRogueMagicModifierInfo bgfhgkmpfnh = 1;
	BattleRogueMagicDetailInfo detail_info = 2;
}

message BJGNHPIECEE {
	uint32 scepter_id = 1;
	uint32 level = 2;
	double total_damage = 3;
}

message CFEJIDGFFHO {
	uint32 khjbiabkjop = 1;
	uint32 mobnijkecna = 2;
	repeated BJGNHPIECEE pndnphbpmfi = 3;
}

message JHPLJAMDBKL {
	CFEJIDGFFHO apbpepohdao = 1;
}

message GHFEPNCENOD {
	uint32 monster_id = 1;
	uint32 dlkcblhgbpf = 2;
	uint32 epnhgojgagg = 3;
	uint32 jlmojbkdolj = 4;
}

message BBJKALNLPDM {
	uint32 dglanfamddd = 1;
	double gjapjlchmfd = 2;
	double iimimhiibll = 3;
	uint32 wave = 4;
	uint32 dlkcblhgbpf = 5;
	double bkgmfmojecf = 6;
	double mpkifckfhde = 7;
}

message LBFLBBOKHMK {
	uint32 ibadnmdajod = 1;
	uint32 hddlnlfpbgk = 2;
	double pbjjogcdmgn = 3;
	uint32 wave = 4;
	uint32 dlkcblhgbpf = 5;
}

message KCBOKOIPBBC {
	repeated GHFEPNCENOD nfengaigebk = 1;
	repeated BBJKALNLPDM cjjdnnojlkn = 2;
	repeated LBFLBBOKHMK apcbdieeghn = 3;
}

message EKJMGDMBJJC {
	KCBOKOIPBBC jalmgplehbn = 1;
}

message IKEHMOMIJDG {
	uint32 pjgleccanhi = 1;
	double gjapjlchmfd = 2;
	double iimimhiibll = 3;
	uint32 pmblbojgaij = 4;
	uint32 oangdlmmfmh = 5;
	uint32 jegmjplkolm = 6;
	uint32 acdddkcgfjd = 7;
	double bkgmfmojecf = 8;
	uint32 ajkolloglce = 9;
	uint32 necjfbelkhj = 10;
	double mpkifckfhde = 11;
	uint32 decaemjponm = 12;
	uint32 lecbngdigbd = 13;
}

message NHOFBAKNEOF {
	uint32 decaemjponm = 1;
	uint32 lecbngdigbd = 2;
	uint32 albaofljple = 3;
	repeated IKEHMOMIJDG cjjdnnojlkn = 4;
}

message EBJPELAONKH {
	uint32 avatar_id = 1;
	uint32 bkbenaeiadb = 2;
	uint32 total_turns = 3;
	double pihkhgjeplc = 4;
	repeated SkillUseProperty skill_times = 5;
	double total_damage = 6;
	double total_break_damage = 7;
	repeated AttackDamageProperty attack_type_damage = 8;
	repeated AttackDamageProperty attack_type_break_damage = 9;
	repeated AttackDamageProperty attack_type_max_damage = 10;
	double total_damage_taken = 11;
	double total_heal = 12;
	double total_hp_recover = 13;
	double total_shield = 14;
	double total_shield_taken = 15;
	double total_shield_damage = 16;
	uint32 break_times = 17;
	uint32 bccmhajkiof = 18;
	uint32 joobdaimbje = 19;
	uint32 oajackjjcgp = 20;
	double jkehimgbdaf = 21;
	uint32 entity_id = 22;
}

message PKEJPPIEKKE {
	repeated EBJPELAONKH pelpfkpfleb = 1;
	uint32 egdjnchdhhm = 2;
	uint32 dnefenpiikm = 3;
}

message BattleStatistics {
	uint32 total_battle_turns = 1;
	uint32 total_auto_turns = 2;
	repeated uint32 avatar_id_list = 3;
	uint32 ultra_cnt = 4;
	double total_delay_cumulate = 5;
	double cost_time = 6;
	repeated AvatarBattleInfo battle_avatar_list = 7;
	repeated MonsterBattleInfo monster_list = 8;
	uint32 round_cnt = 9;
	uint32 cocoon_dead_wave = 10;
	uint32 avatar_battle_turns = 11;
	uint32 monster_battle_turns = 12;
	map<string, float> custom_values = 13;
	uint32 challenge_score = 14;
	repeated BattleEventBattleInfo dolglijaigd = 16;
	BattleEndReason end_reason = 19;
	repeated BKNHOHPNCLG pcilcjilfph = 21;
	repeated int32 endmhkffphm = 22;
	repeated ONCGADJDPNO ehgbiogifba = 23;
	repeated CAJBBBDBCAP bdmgnlokbmk = 26;
	repeated IKLJPHJLPFG mebhhfjlpaf = 27;
	map<uint32, BattleTargetList> battle_target_info = 28;
	repeated OEIIHFPFKJJ ggbdodlghlm = 29;
	EvolveBuildBattleInfo adafaohflma = 30;
	MAOCCAPKJNE ojjnmpmjcon = 31;
	bool jhfcbeekkfe = 32;
	repeated EKCJEBJLGCG peeliikfgfk = 33;
	repeated PGJELADPNCM cpjonndmmfb = 34;
	uint32 hjabngmolmh = 35;
	JHPLJAMDBKL kpjlijcmmmk = 36;
	EKJMGDMBJJC mkpngjekgjl = 37;
	NHOFBAKNEOF aehakhdcccc = 38;
	PKEJPPIEKKE aiabhjniale = 39;
}

message OEIIHFPFKJJ {
	uint32 kmnjimmoakp = 1;
	uint32 akeklkgonno = 2;
}

message IKLJPHJLPFG {
	AetherdivideSpiritLineupType type = 1;
	uint32 id = 2;
	AmountInfo sp_bar = 3;
}

message MultiPath {
	uint32 multi_path_type = 1;
	uint32 level = 2;
	uint32 exp = 3;
}

message ABCLMMJAGCD {
	BattleCheckResultType retcode = 1;
	BattleEndStatus end_status = 2;
	BattleStatistics stt = 3;
	bytes game_core_log_encode = 4;
	map<string, uint32> mjpepgcieeh = 5;
	uint32 mismatch_turn_count = 6;
	uint32 gfomjfkicba = 7;
}

message CharacterSnapshot {
	uint32 runtime_id = 1;
	repeated uint64 properties = 2;
}

message AnimEventSnapshot {
	string event_name = 1;
	uint32 count = 2;
}

enum FightGameMode {
	FIGHT_GAME_MODE_NONE = 0;
	FIGHT_GAME_MODE_MATCH3 = 1;
}

enum FightKickoutType {
	FIGHT_KICKOUT_UNKNOWN = 0;
	FIGHT_KICKOUT_BLACK = 1;
	FIGHT_KICKOUT_BY_GM = 2;
	FIGHT_KICKOUT_TIMEOUT = 3;
	FIGHT_KICKOUT_SESSION_RESET = 4;
}

enum LobbyCharacterType {
	LobbyCharacter_None = 0;
	LobbyCharacter_Leader = 1;
	LobbyCharacter_Member = 2;
	LobbyCharacter_Watcher = 3;
}

enum LobbyCharacterStatus {
	LobbyCharacterStatus_None = 0;
	LobbyCharacterStatus_Idle = 1;
	LobbyCharacterStatus_Operating = 2;
	LobbyCharacterStatus_Ready = 3;
	LobbyCharacterStatus_Fighting = 4;
	LobbyCharacterStatus_Watching = 5;
	LobbyCharacterStatus_Matching = 6;
}

enum LobbyModifyType {
	LobbyModifyType_None = 0;
	LobbyModifyType_Idle = 1;
	LobbyModifyType_Ready = 2;
	LobbyModifyType_Operating = 3;
	LobbyModifyType_CancelMatch = 4;
	LobbyModifyType_Match = 5;
	LobbyModifyType_QuitLobby = 6;
	LobbyModifyType_KickOut = 7;
	LobbyModifyType_TimeOut = 8;
	LobbyModifyType_JoinLobby = 9;
	LobbyModifyType_LobbyDismiss = 10;
	LobbyModifyType_MatchTimeOut = 11;
	LobbyModifyType_FightStart = 12;
	LobbyModifyType_Logout = 13;
	LobbyModifyType_FightEnd = 14;
	LobbyModifyType_FightRoomDestroyInInit = 15;
}

enum FightRoomDestroyReason {
	FIGHT_ROOM_DESTROY_REASON_NONE = 0;
	FIGHT_ROOM_DESTROY_REASON_SVR_STOP = 1;
	FIGHT_ROOM_DESTROY_REASON_GAME_END = 2;
}

enum Match3FinishReason {
	MATCH3_FINISH_REASON_DEFAULT = 0;
	MATCH3_FINISH_REASON_LEAVE = 1;
	MATCH3_FINISH_REASON_DIE = 2;
	MATCH3_FINISH_REASON_GAMEEND = 3;
	MATCH3_FINISH_REASON_KICKOUT = 4;
}

enum MatchUnitType {
	MATCH_UNIT_TYPE_NONE = 0;
	MATCH_UNIT_TYPE_NORMAL = 1;
	MATCH_UNIT_TYPE_ROBOT = 2;
	MATCH_UNIT_TYPE_GM = 3;
}

message FOMDHPEHADF {
	uint32 uid = 1;
	uint32 level = 2;
	string nickname = 3;
	uint32 ialngpaikch = 4;
	PlatformType platform = 5;
	string pdciladmjij = 6;
	string iheomnbpmkm = 7;
	uint64 version = 8;
}

message LJKJPMHCCIH {
	LobbyCharacterType fjaelbdggph = 1;
	LobbyCharacterStatus status = 2;
}

message IAFALEBLMID {
	uint32 egjbcbeiiii = 1;
	bool pmnbeficdeg = 2;
	uint32 inhpgafkfmf = 3;
	uint32 pmmmlgjgpan = 4;
}

message EMPBNBJLDNI {
	oneof AFNPLJLBFFF {
		IAFALEBLMID aijhfogjihl = 1001;
	}
	repeated string PEGMNMCDABO = 1;
	bool CCLGBFCHKDO = 2;
}

message GDOHNMGABGE {
	FOMDHPEHADF basic_info = 1;
	LJKJPMHCCIH bgpkjnfadef = 2;
	EMPBNBJLDNI ext_info = 3;
}

message COKMEFOLDDH {
	uint32 obepjidjdcn = 1;
	uint32 dgkcnkgfdfh = 2;
	uint32 aoamagdfgpd = 3;
	uint32 gekmlhbeaon = 4;
	uint32 hgacejkhjlk = 5;
	uint32 bmemahbffim = 6;
	uint32 oamkcddngcg = 7;
	uint32 mifpooajfam = 8;
	uint32 hpackbolbnl = 9;
	uint32 pmehdeklgia = 10;
}

message GCIBOEOBJJH {
	uint64 pmfflmdckeb = 1;
	FightGameMode cckiobhjfbi = 2;
}

message GOOEAHPAEAE {
	uint64 id = 1;
	FightGameMode pcooolkcjod = 2;
	repeated GDOHNMGABGE ilcadhlkkhh = 3;
	MatchUnitType type = 4;
	uint64 bgefjacaeka = 5;
	uint64 jddkpcechem = 6;
	uint32 dfhdbejmkke = 7;
}

enum retcode {
	RET_SUCC = 0;
	RET_FAIL = 1;
	RET_SERVER_INTERNAL_ERROR = 2;
	RET_TIMEOUT = 3;
	RET_REPEATED_REQ = 4;
	RET_REQ_PARA_INVALID = 5;
	RET_PLAYER_DATA_ERROR = 6;
	RET_PLAYER_CLIENT_PAUSED = 7;
	RET_FUNC_CHECK_FAILED = 8;
	RET_FEATURE_SWITCH_CLOSED = 9;
	RET_FREQ_OVER_LIMIT = 10;
	RET_SYSTEM_BUSY = 11;
	RET_PLAYER_NOT_ONLINE = 12;
	RET_OPERATION_IN_CD = 13;
	RET_REPEATE_LOGIN = 1000;
	RET_RETRY_LOGIN = 1001;
	RET_WAIT_LOGIN = 1002;
	RET_NOT_IN_WHITE_LIST = 1003;
	RET_IN_BLACK_LIST = 1004;
	RET_ACCOUNT_VERIFY_ERROR = 1005;
	RET_ACCOUNT_PARA_ERROR = 1006;
	RET_ANTI_ADDICT_LOGIN = 1007;
	RET_CHECK_SUM_ERROR = 1008;
	RET_REACH_MAX_PLAYER_NUM = 1009;
	RET_ALREADY_REGISTERED = 1010;
	RET_GENDER_ERROR = 1011;
	SET_NICKNAME_RET_CALLBACK_PROCESSING = 1012;
	RET_IN_GM_BIND_ACCESS = 1013;
	RET_QUEST_REWARD_ALREADY_TAKEN = 1100;
	RET_QUEST_NOT_ACCEPT = 1101;
	RET_QUEST_NOT_FINISH = 1102;
	RET_QUEST_STATUS_ERROR = 1103;
	RET_ACHIEVEMENT_LEVEL_NOT_REACH = 1104;
	RET_ACHIEVEMENT_LEVEL_ALREADY_TAKEN = 1105;
	RET_AVATAR_NOT_EXIST = 1200;
	RET_AVATAR_RES_EXP_NOT_ENOUGH = 1201;
	RET_AVATAR_EXP_REACH_PROMOTION_LIMIT = 1202;
	RET_AVATAR_REACH_MAX_PROMOTION = 1203;
	RET_SKILLTREE_CONFIG_NOT_EXIST = 1204;
	RET_SKILLTREE_ALREADY_UNLOCK = 1205;
	RET_SKILLTREE_PRE_LOCKED = 1206;
	RET_SKILLTREE_LEVEL_NOT_MEET = 1207;
	RET_SKILLTREE_RANK_NOT_MEET = 1208;
	RET_AVATAR_DRESS_NO_EQUIPMENT = 1209;
	RET_AVATAR_EXP_ITEM_NOT_EXIST = 1210;
	RET_SKILLTREE_POINT_LOCKED = 1211;
	RET_SKILLTREE_POINT_LEVEL_UPGRADE_NOT_MATCH = 1212;
	RET_SKILLTREE_POINT_LEVEL_REACH_MAX = 1213;
	RET_WORLD_LEVEL_NOT_MEET = 1214;
	RET_PLAYER_LEVEL_NOT_MEET = 1215;
	RET_AVATAR_RANK_NOT_MATCH = 1216;
	RET_AVATAR_RANK_REACH_MAX = 1217;
	RET_HERO_BASIC_TYPE_NOT_MATCH = 1218;
	RET_AVATAR_PROMOTION_NOT_MEET = 1219;
	RET_PROMOTION_REWARD_CONFIG_NOT_EXIST = 1220;
	RET_PROMOTION_REWARD_ALREADY_TAKEN = 1221;
	RET_AVATAR_SKIN_ITEM_NOT_EXIST = 1222;
	RET_AVATAR_SKIN_ALREADY_DRESSED = 1223;
	RET_AVATAR_NOT_DRESS_SKIN = 1224;
	RET_AVATAR_SKIN_NOT_MATCH_AVATAR = 1225;
	RET_AVATAR_PATH_NOT_MATCH = 1226;
	RET_ITEM_NOT_EXIST = 1300;
	RET_ITEM_COST_NOT_ENOUGH = 1301;
	RET_ITEM_COST_TOO_MUCH = 1302;
	RET_ITEM_NO_COST = 1303;
	RET_ITEM_NOT_ENOUGH = 1304;
	RET_ITEM_INVALID = 1305;
	RET_ITEM_CONFIG_NOT_EXIST = 1306;
	RET_SCOIN_NOT_ENOUGH = 1307;
	RET_ITEM_REWARD_EXCEED_LIMIT = 1308;
	RET_ITEM_INVALID_USE = 1309;
	RET_ITEM_USE_CONFIG_NOT_EXIST = 1310;
	RET_REWARD_CONFIG_NOT_EXIST = 1311;
	RET_ITEM_EXCEED_LIMIT = 1312;
	RET_ITEM_COUNT_INVALID = 1313;
	RET_ITEM_USE_TARGET_TYPE_INVALID = 1314;
	RET_ITEM_USE_SATIETY_FULL = 1315;
	RET_ITEM_COMPOSE_NOT_EXIST = 1316;
	RET_RELIC_COMPOSE_NOT_EXIST = 1317;
	RET_ITEM_CAN_NOT_SELL = 1318;
	RET_ITEM_SELL_EXCEDD_LIMIT = 1319;
	RET_ITEM_NOT_IN_COST_LIST = 1320;
	RET_ITEM_SPECIAL_COST_NOT_ENOUGH = 1321;
	RET_ITEM_SPECIAL_COST_TOO_MUCH = 1322;
	RET_ITEM_FORMULA_NOT_EXIST = 1323;
	RET_ITEM_AUTO_GIFT_OPTIONAL_NOT_EXIST = 1324;
	RET_RELIC_COMPOSE_RELIC_INVALID = 1325;
	RET_RELIC_COMPOSE_MAIN_AFFIX_ID_INVALID = 1326;
	RET_RELIC_COMPOSE_WRONG_FORMULA_TYPE = 1327;
	RET_RELIC_COMPOSE_RELIC_NOT_EXIST = 1328;
	RET_RELIC_COMPOSE_BLACK_GOLD_COUNT_INVALID = 1329;
	RET_RELIC_COMPOSE_BLACK_GOLD_NOT_NEED = 1330;
	RET_MONTH_CARD_CANNOT_USE = 1331;
	RET_ITEM_REWARD_EXCEED_DISAPPEAR = 1332;
	RET_ITEM_NEED_RECYCLE = 1333;
	RET_ITEM_COMPOSE_EXCEED_LIMIT = 1334;
	RET_ITEM_CAN_NOT_DESTROY = 1335;
	RET_ITEM_ALREADY_MARK = 1336;
	RET_ITEM_MARK_EXCEED_LIMIT = 1337;
	RET_ITEM_NOT_MARK = 1338;
	RET_ITEN_TURN_FOOD_NOT_SET = 1339;
	RET_ITEM_TURN_FOOD_ALREADY_SET = 1340;
	RET_ITEM_TURN_FOOD_CONSUME_TYPE_ERROR = 1341;
	RET_ITEM_TURN_FOOD_SWITCH_ALREADY_OPEN = 1342;
	RET_ITEM_TURN_FOOD_SWITCH_ALREADY_CLOSE = 1343;
	RET_HCOIN_EXCHANGE_TOO_MUCH = 1344;
	RET_ITEM_TURN_FOOD_SCENE_TYPE_ERROR = 1345;
	RET_EQUIPMENT_ALREADY_DRESSED = 1350;
	RET_EQUIPMENT_NOT_EXIST = 1351;
	RET_EQUIPMENT_REACH_LEVEL_LIMIT = 1352;
	RET_EQUIPMENT_CONSUME_SELF = 1353;
	RET_EQUIPMENT_ALREADY_LOCKED = 1354;
	RET_EQUIPMENT_ALREADY_UNLOCKED = 1355;
	RET_EQUIPMENT_LOCKED = 1356;
	RET_EQUIPMENT_SELECT_NUM_OVER_LIMIT = 1357;
	RET_EQUIPMENT_RANK_UP_MUST_CONSUME_SAME_TID = 1358;
	RET_EQUIPMENT_PROMOTION_REACH_MAX = 1359;
	RET_EQUIPMENT_RANK_UP_REACH_MAX = 1360;
	RET_EQUIPMENT_LEVEL_REACH_MAX = 1361;
	RET_EQUIPMENT_EXCEED_LIMIT = 1362;
	RET_RELIC_NOT_EXIST = 1363;
	RET_RELIC_REACH_LEVEL_LIMIT = 1364;
	RET_RELIC_CONSUME_SELF = 1365;
	RET_RELIC_ALREADY_DRESSED = 1366;
	RET_RELIC_LOCKED = 1367;
	RET_RELIC_ALREADY_LOCKED = 1368;
	RET_RELIC_ALREADY_UNLOCKED = 1369;
	RET_RELIC_LEVEL_IS_NOT_ZERO = 1370;
	RET_UNIQUE_ID_REPEATED = 1371;
	RET_EQUIPMENT_LEVEL_NOT_MEET = 1372;
	RET_EQUIPMENT_ITEM_NOT_IN_COST_LIST = 1373;
	RET_EQUIPMENT_LEVEL_GREATER_THAN_ONE = 1374;
	RET_EQUIPMENT_ALREADY_RANKED = 1375;
	RET_RELIC_EXCEED_LIMIT = 1376;
	RET_RELIC_ALREADY_DISCARDED = 1377;
	RET_RELIC_ALREADY_UNDISCARDED = 1378;
	RET_EQUIPMENT_BATCH_LOCK_TOO_FAST = 1379;
	RET_RELIC_FILTER_PLAN_SLOT_EMPTY = 1380;
	RET_RELIC_FILTER_PLAN_NUM_EXCEED_LIMIT = 1381;
	RET_RELIC_FILTER_PLAN_NAME_UTF8_ERROR = 1382;
	RET_RELIC_FILTER_PLAN_NAME_FORMAT_ERROR = 1383;
	RET_RELIC_FILTER_PLAN_NO_CHANGE = 1384;
	RET_RELIC_REFORGE_NOT_CONFIRMED = 1385;
	RET_LINEUP_INVALID_INDEX = 1400;
	RET_LINEUP_INVALID_MEMBER_POS = 1401;
	RET_LINEUP_SWAP_NOT_EXIST = 1402;
	RET_LINEUP_AVATAR_ALREADY_IN = 1403;
	RET_LINEUP_CREATE_AVATAR_ERROR = 1404;
	RET_LINEUP_AVATAR_INIT_ERROR = 1405;
	RET_LINEUP_NOT_EXIST = 1406;
	RET_LINEUP_ONLY_ONE_MEMBER = 1407;
	RET_LINEUP_SAME_LEADER_SLOT = 1408;
	RET_LINEUP_NO_LEADER_SELECT = 1409;
	RET_LINEUP_SWAP_SAME_SLOT = 1410;
	RET_LINEUP_AVATAR_NOT_EXIST = 1411;
	RET_LINEUP_TRIAL_AVATAR_CAN_NOT_QUIT = 1412;
	RET_LINEUP_VIRTUAL_LINEUP_PLANE_NOT_MATCH = 1413;
	RET_LINEUP_NOT_VALID_LEADER = 1414;
	RET_LINEUP_SAME_INDEX = 1415;
	RET_LINEUP_IS_EMPTY = 1416;
	RET_LINEUP_NAME_FORMAT_ERROR = 1417;
	RET_LINEUP_TYPE_NOT_MATCH = 1418;
	RET_LINEUP_REPLACE_ALL_FAILED = 1419;
	RET_LINEUP_NOT_ALLOW_EDIT = 1420;
	RET_LINEUP_AVATAR_IS_ALIVE = 1421;
	RET_LINEUP_ASSIST_HAS_ONLY_MEMBER = 1422;
	RET_LINEUP_ASSIST_CANNOT_SWITCH = 1423;
	RET_LINEUP_AVATAR_TYPE_INVALID = 1424;
	RET_LINEUP_NAME_UTF8_ERROR = 1425;
	RET_LINEUP_LEADER_LOCK = 1426;
	RET_LINEUP_STORY_LINE_NOT_MATCH = 1427;
	RET_LINEUP_AVATAR_LOCK = 1428;
	RET_LINEUP_AVATAR_INVALID = 1429;
	RET_LINEUP_AVATAR_ALREADY_INIT = 1430;
	RET_LINEUP_LIMITED = 1431;
	RET_MAIL_NOT_EXIST = 1700;
	RET_MAIL_RANGE_INVALID = 1701;
	RET_MAIL_MAIL_ID_INVALID = 1702;
	RET_MAIL_NO_MAIL_TAKE_ATTACHMENT = 1703;
	RET_MAIL_NO_MAIL_TO_DEL = 1704;
	RET_MAIL_TYPE_INVALID = 1705;
	RET_MAIL_PARA_INVALID = 1706;
	RET_MAIL_ATTACHEMENT_INVALID = 1707;
	RET_MAIL_TICKET_INVALID = 1708;
	RET_MAIL_TICKET_REPEATED = 1709;
	RET_STAGE_SETTLE_ERROR = 1800;
	RET_STAGE_CONFIG_NOT_EXIST = 1801;
	RET_STAGE_NOT_FOUND = 1802;
	RET_STAGE_COCOON_PROP_NOT_VALID = 1804;
	RET_STAGE_COCOON_WAVE_NOT_VALID = 1805;
	RET_STAGE_PROP_ID_NOT_EQUAL = 1806;
	RET_STAGE_COCOON_WAVE_OVER = 1807;
	RET_STAGE_WEEK_COCOON_OVER_CNT = 1808;
	RET_STAGE_COCOON_NOT_OPEN = 1809;
	RET_STAGE_TRIAL_NOT_OPEN = 1810;
	RET_STAGE_FARM_NOT_OPEN = 1811;
	RET_STAGE_FARM_TYPE_ERROR = 1812;
	RET_CHAPTER_LOCK = 1900;
	RET_CHAPTER_CHALLENGE_NUM_NOT_ENOUGH = 1901;
	RET_CHAPTER_REWARD_ID_NOT_EXIST = 1902;
	RET_CHAPTER_REWARD_ALREADY_TAKEN = 1903;
	RET_BATTLE_STAGE_NOT_MATCH = 2000;
	RET_IN_BATTLE_NOW = 2001;
	RET_BATTLE_CHEAT = 2002;
	RET_BATTLE_FAIL = 2003;
	RET_BATTLE_NO_LINEUP = 2004;
	RET_BATTLE_LINEUP_EMPTY = 2005;
	RET_BATTLE_VERSION_NOT_MATCH = 2006;
	RET_BATTLE_QUIT_BY_SERVER = 2007;
	RET_IN_BATTLE_CHECK = 2008;
	RET_BATTLE_CHECK_NEED_RETRY = 2009;
	RET_BATTLE_COST_TIME_CHECK_FAIL = 2010;
	RET_LACK_EXCHANGE_STAMINA_TIMES = 2100;
	RET_LACK_STAMINA = 2101;
	RET_STAMINA_FULL = 2102;
	RET_AUTHKEY_SIGN_TYPE_ERROR = 2103;
	RET_AUTHKEY_SIGN_VER_ERROR = 2104;
	RET_NICKNAME_FORMAT_ERROR = 2105;
	RET_SENSITIVE_WORDS = 2106;
	RET_LEVEL_REWARD_HAS_TAKEN = 2107;
	RET_LEVEL_REWARD_LEVEL_ERROR = 2108;
	RET_LANGUAGE_INVALID = 2109;
	RET_NICKNAME_IN_CD = 2110;
	RET_GAMEPLAY_BIRTHDAY_INVALID = 2111;
	RET_GAMEPLAY_BIRTHDAY_ALREADY_SET = 2112;
	RET_NICKNAME_UTF8_ERROR = 2113;
	RET_NICKNAME_DIGIT_LIMIT_ERROR = 2114;
	RET_SENSITIVE_WORDS_PLATFORM_ERROR = 2115;
	RET_PLAYER_SETTING_TYPE_INVALID = 2116;
	RET_MAZE_LACK_TICKET = 2201;
	RET_MAZE_NOT_UNLOCK = 2202;
	RET_MAZE_NO_ABILITY = 2204;
	RET_MAZE_NO_PLANE = 2205;
	RET_MAZE_MAP_NOT_EXIST = 2207;
	RET_MAZE_MP_NOT_ENOUGH = 2213;
	RET_SPRING_NOT_ENABLE = 2214;
	RET_SPRING_TOO_FAR = 2216;
	RET_NOT_IN_MAZE = 2218;
	RET_MAZE_TIME_OF_DAY_TYPE_ERROR = 2223;
	RET_SCENE_TRANSFER_LOCKED_BY_TASK = 2224;
	RET_PLOT_NOT_UNLOCK = 2300;
	RET_MISSION_NOT_EXIST = 2400;
	RET_MISSION_ALREADY_DONE = 2401;
	RET_DAILY_TASK_NOT_FINISH = 2402;
	RET_DAILY_TASK_REWARD_HAS_TAKEN = 2403;
	RET_MISSION_NOT_FINISH = 2404;
	RET_MISSION_NOT_DOING = 2405;
	RET_MISSION_FINISH_WAY_NOT_MATCH = 2406;
	RET_MISSION_SCENE_NOT_MATCH = 2407;
	RET_MISSION_CUSTOM_VALUE_NOT_VALID = 2408;
	RET_MISSION_SUB_MISSION_NOT_MATCH = 2409;
	RET_ADVENTURE_MAP_NOT_EXIST = 2500;
	RET_SCENE_ENTITY_NOT_EXIST = 2600;
	RET_NOT_IN_SCENE = 2601;
	RET_SCENE_MONSTER_NOT_EXIST = 2602;
	RET_INTERACT_CONFIG_NOT_EXIST = 2603;
	RET_UNSUPPORTED_PROP_STATE = 2604;
	RET_SCENE_ENTRY_ID_NOT_MATCH = 2605;
	RET_SCENE_ENTITY_MOVE_CHECK_FAILED = 2606;
	RET_ASSIST_MONSTER_COUNT_LIMIT = 2607;
	RET_SCENE_USE_SKILL_FAIL = 2608;
	RET_PROP_IS_HIDDEN = 2609;
	RET_LOADING_SUCC_ALREADY = 2610;
	RET_SCENE_ENTITY_TYPE_INVALID = 2611;
	RET_INTERACT_TYPE_INVALID = 2612;
	RET_INTERACT_NOT_IN_REGION = 2613;
	RET_INTERACT_SUB_TYPE_INVALID = 2614;
	RET_NOT_LEADER_ENTITY = 2615;
	RET_MONSTER_IS_NOT_FARM_ELEMENT = 2616;
	RET_MONSTER_CONFIG_NOT_EXIST = 2617;
	RET_AVATAR_HP_ALREADY_FULL = 2618;
	RET_CUR_INTERACT_ENTITY_NOT_MATCH = 2619;
	RET_PLANE_TYPE_NOT_ALLOW = 2620;
	RET_GROUP_NOT_EXIST = 2621;
	RET_GROUP_SAVE_DATA_IN_CD = 2622;
	RET_GROUP_SAVE_LENGH_REACH_MAX = 2623;
	RET_RECENT_ELEMENT_NOT_EXIST = 2624;
	RET_RECENT_ELEMENT_STAGE_NOT_MATCH = 2625;
	RET_SCENE_POSITION_VERSION_NOT_MATCH = 2626;
	RET_GAMEPLAY_COUNTER_NOT_EXIST = 2627;
	RET_GAMEPLAY_COUNTER_NOT_ENOUGH = 2628;
	RET_GROUP_STATE_NOT_MATCH = 2629;
	RET_SCENE_ENTITY_POS_NOT_MATCH = 2630;
	RET_GROUP_STATE_CUSTOM_SAVE_DATA_OFF = 2631;
	RET_SCENE_NOT_MATCH = 2632;
	RET_PROP_TYPE_INVALID = 2633;
	RET_BUY_TIMES_LIMIT = 2700;
	RET_BUY_LIMIT_TYPE = 2701;
	RET_SHOP_NOT_OPEN = 2702;
	RET_GOODS_NOT_OPEN = 2703;
	RET_CITY_LEVEL_REWARD_TAKEN = 2704;
	RET_CITY_LEVEL_NOT_MEET = 2705;
	RET_SINGLE_BUY_LIMIT = 2706;
	RET_TUTORIAL_NOT_UNLOCK = 2751;
	RET_TUTORIAL_UNLOCK_ALREADY = 2752;
	RET_TUTORIAL_FINISH_ALREADY = 2753;
	RET_TUTORIAL_PRE_NOT_UNLOCK = 2754;
	RET_TUTORIAL_PLAYER_LEVEL_NOT_MATCH = 2755;
	RET_TUTORIAL_TUTORIAL_NOT_FOUND = 2756;
	RET_CHALLENGE_NOT_EXIST = 2801;
	RET_CHALLENGE_NOT_UNLOCK = 2802;
	RET_CHALLENGE_ALREADY = 2803;
	RET_CHALLENGE_LINEUP_EDIT_FORBIDDEN = 2804;
	RET_CHALLENGE_LINEUP_EMPTY = 2805;
	RET_CHALLENGE_NOT_DOING = 2806;
	RET_CHALLENGE_NOT_FINISH = 2807;
	RET_CHALLENGE_TARGET_NOT_FINISH = 2808;
	RET_CHALLENGE_TARGET_REWARD_TAKEN = 2809;
	RET_CHALLENGE_TIME_NOT_VALID = 2810;
	RET_CHALLENGE_STARS_COUNT_NOT_MEET = 2811;
	RET_CHALLENGE_STARS_REWARD_TAKEN = 2812;
	RET_CHALLENGE_STARS_NOT_EXIST = 2813;
	RET_CHALLENGE_CUR_SCENE_NOT_ENTRY_FLOOR = 2814;
	RET_CHALLENGE_NO_TEAM_ARCHIVE = 2815;
	RET_CHALLENGE_LINEUP_AVATAR_TYPE_INVALID = 2816;
	RET_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 2817;
	RET_BASIC_TYPE_ALREADY = 2850;
	RET_NO_BASIC_TYPE = 2851;
	RET_NOT_CHOOSE_BASIC_TYPE = 2852;
	RET_NOT_FUNC_CLOSE = 2853;
	RET_NOT_CHOOSE_GENDER = 2854;
	RET_NOT_REQ_UNLOCK_BASIC_TYPE = 2855;
	RET_AVATAR_PATH_LOCKED = 2856;
	RET_ROGUE_STATUS_NOT_MATCH = 2901;
	RET_ROGUE_SELECT_BUFF_NOT_EXIST = 2902;
	RET_ROGUE_COIN_NOT_ENOUGH = 2903;
	RET_ROGUE_STAMINA_NOT_ENOUGH = 2904;
	RET_ROGUE_APPRAISAL_COUNT_NOT_ENOUGH = 2905;
	RET_ROGUE_PROP_ALREADY_USED = 2906;
	RET_ROGUE_RECORD_ALREADY_SAVED = 2907;
	RET_ROGUE_ROLL_BUFF_MAX_COUNT = 2908;
	RET_ROGUE_PICK_AVATAR_INVALID = 2909;
	RET_ROGUE_QUEST_EXPIRE = 2910;
	RET_ROGUE_QUEST_REWARD_ALREADY = 2911;
	RET_ROGUE_REVIVE_COUNT_NOT_ENOUGH = 2912;
	RET_ROGUE_AREA_INVALID = 2913;
	RET_ROGUE_SCORE_REWARD_POOL_INVALID = 2914;
	RET_ROGUE_SCORE_REWARD_ROW_INVALID = 2915;
	RET_ROGUE_AEON_LEVEL_NOT_MEET = 2916;
	RET_ROGUE_AEON_LEVEL_REWARD_ALREADY_TAKEN = 2917;
	RET_ROGUE_AEON_CONFIG_NOT_EXIST = 2918;
	RET_ROGUE_TRIAL_AVATAR_INVALID = 2919;
	RET_ROGUE_HANDBOOK_REWARD_ALREADY_TAKEN = 2920;
	RET_ROGUE_ROOM_TYPE_NOT_MATCH = 2921;
	RET_ROGUE_SHOP_GOOD_NOT_FOUND = 2922;
	RET_ROGUE_SHOP_GOOD_ALREADY_BOUGHT = 2923;
	RET_ROGUE_SHOP_GOOD_ALREADY_OWN = 2924;
	RET_ROGUE_SHOP_MIRACLE_NOT_EXIST = 2925;
	RET_ROGUE_SHOP_NOT_EXIST = 2926;
	RET_ROGUE_SHOP_CANNOT_REFRESH = 2927;
	RET_ROGUE_SELECT_BUFF_CERTAIN_MISMATCH = 2928;
	RET_MISSION_EVENT_CONFIG_NOT_EXIST = 2951;
	RET_MISSION_EVENT_NOT_CLIENT = 2952;
	RET_MISSION_EVENT_FINISHED = 2953;
	RET_MISSION_EVENT_DOING = 2954;
	RET_HAS_CHALLENGE_MISSION_EVENT = 2955;
	RET_NOT_CHALLENGE_MISSION_EVENT = 2956;
	RET_GACHA_ID_NOT_EXIST = 3001;
	RET_GACHA_NUM_INVALID = 3002;
	RET_GACHA_FIRST_GACHA_MUST_ONE = 3003;
	RET_GACHA_REQ_DUPLICATED = 3004;
	RET_GACHA_NOT_IN_SCHEDULE = 3005;
	RET_GACHA_NEWBIE_CLOSE = 3006;
	RET_GACHA_TODAY_LIMITED = 3007;
	RET_GACHA_NOT_SUPPORT = 3008;
	RET_GACHA_CEILING_NOT_ENOUGH = 3009;
	RET_GACHA_CEILING_CLOSE = 3010;
	RET_NOT_IN_RAID = 3101;
	RET_RAID_DOING = 3102;
	RET_NOT_PROP = 3103;
	RET_RAID_ID_NOT_MATCH = 3104;
	RET_RAID_RESTART_NOT_MATCH = 3105;
	RET_RAID_LIMIT = 3106;
	RET_RAID_AVATAR_LIST_EMPTY = 3107;
	RET_RAID_AVATAR_NOT_EXIST = 3108;
	RET_CHALLENGE_RAID_REWARD_ALREADY = 3109;
	RET_CHALLENGE_RAID_SCORE_NOT_REACH = 3110;
	RET_CHALLENGE_RAID_NOT_OPEN = 3111;
	RET_RAID_FINISHED = 3112;
	RET_RAID_WORLD_LEVEL_NOT_LOCK = 3113;
	RET_RAID_CANNOT_USE_ASSIST = 3114;
	RET_RAID_AVATAR_NOT_MATCH = 3115;
	RET_RAID_CAN_NOT_SAVE = 3116;
	RET_RAID_NO_SAVE = 3117;
	RET_ACTIVITY_RAID_NOT_OPEN = 3118;
	RET_RAID_AVATAR_CAPTAIN_NOT_EXIST = 3119;
	RET_RAID_STORY_LINE_NOT_MATCH = 3120;
	RET_TALK_EVENT_ALREADY_TAKEN = 3151;
	RET_NPC_ALREADY_MEET = 3152;
	RET_NPC_NOT_IN_CONFIG = 3153;
	RET_DIALOGUE_GROUP_DISMATCH = 3154;
	RET_DIALOGUE_EVENT_INVALID = 3155;
	RET_TALK_EVENT_TAKE_PROTO_NOT_MATCH = 3156;
	RET_TALK_EVENT_NOT_VALID = 3157;
	RET_EXPEDITION_CONFIG_NOT_EXIST = 3201;
	RET_EXPEDITION_REWARD_CONFIG_NOT_EXIST = 3202;
	RET_EXPEDITION_NOT_UNLOCKED = 3203;
	RET_EXPEDITION_ALREADY_ACCEPTED = 3204;
	RET_EXPEDITION_REPEATED_AVATAR = 3205;
	RET_AVATAR_ALREADY_DISPATCHED = 3206;
	RET_EXPEDITION_NOT_ACCEPTED = 3207;
	RET_EXPEDITION_NOT_FINISH = 3208;
	RET_EXPEDITION_ALREADY_FINISH = 3209;
	RET_EXPEDITION_TEAM_COUNT_LIMIT = 3210;
	RET_EXPEDITION_AVATAR_NUM_NOT_MATCH = 3211;
	RET_EXPEDITION_NOT_OPEN = 3212;
	RET_EXPEDITION_FRIEND_AVATAR_NOT_VALID = 3213;
	RET_EXPEDITION_NOT_PUBLISHED = 3214;
	RET_LOGIN_ACTIVITY_HAS_TAKEN = 3301;
	RET_LOGIN_ACTIVITY_DAYS_LACK = 3302;
	RET_TRIAL_ACTIVITY_REWARD_ALREADY_TAKE = 3303;
	RET_TRIAL_ACTIVITY_STAGE_NOT_FINISH = 3304;
	RET_MATERIAL_SUBMIT_ACTIVITY_HAS_TAKEN = 3305;
	RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_NOT_SUBMITTED = 3306;
	RET_MATERIAL_SUBMIT_ACTIVITY_MATERIAL_ALREADY_SUBMITTED = 3307;
	RET_FANTASTIC_STORY_ACTIVITY_STORY_ERROR = 3308;
	RET_FANTASTIC_STORY_ACTIVITY_STORY_NOT_OPEN = 3309;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_ERROR = 3310;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_NOT_OPEN = 3311;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_AVATAR_ERROR = 3312;
	RET_FANTASTIC_STORY_ACTIVITY_BATTLE_BUFF_ERROR = 3313;
	RET_FANTASTIC_STORY_ACTIVITY_PRE_BATTLE_SCORE_NOT_ENOUGH = 3314;
	RET_TRIAL_ACTIVITY_ALREADY_IN_TRIAL_ACTIVITY = 3315;
	RET_COMMON_ACTIVITY_NOT_OPEN = 3316;
	RET_MESSAGE_CONFIG_NOT_EXIST = 3501;
	RET_MESSAGE_SECTION_NOT_TAKE = 3502;
	RET_MESSAGE_GROUP_NOT_TAKE = 3503;
	RET_MESSAGE_SECTION_ID_NOT_MATCH = 3504;
	RET_MESSAGE_SECTION_CAN_NOT_FINISH = 3505;
	RET_MESSAGE_ITEM_CAN_NOT_FINISH = 3506;
	RET_MESSAGE_ITEM_RAID_CAN_NOT_FINISH = 3507;
	RET_FRIEND_ALREADY_IS_FRIEND = 3601;
	RET_FRIEND_IS_NOT_FRIEND = 3602;
	RET_FRIEND_APPLY_EXPIRE = 3603;
	RET_FRIEND_IN_BLACKLIST = 3604;
	RET_FRIEND_NOT_IN_BLACKLIST = 3605;
	RET_FRIEND_NUMBER_LIMIT = 3606;
	RET_FRIEND_BLACKLIST_NUMBER_LIMIT = 3607;
	RET_FRIEND_DAILY_APPLY_LIMIT = 3608;
	RET_FRIEND_IN_HANDLE_LIMIT = 3609;
	RET_FRIEND_APPLY_IN_CD = 3610;
	RET_FRIEND_REMARK_NAME_FORMAT_ERROR = 3611;
	RET_FRIEND_PLAYER_NOT_FOUND = 3612;
	RET_FRIEND_IN_TARGET_BLACKLIST = 3613;
	RET_FRIEND_TARGET_NUMBER_LIMIT = 3614;
	RET_ASSIST_QUERY_TOO_FAST = 3615;
	RET_ASSIST_NOT_EXIST = 3616;
	RET_ASSIST_USED_ALREADY = 3617;
	RET_FRIEND_REPORT_REASON_FORMAT_ERROR = 3618;
	RET_FRIEND_REPORT_SENSITIVE_WORDS = 3619;
	RET_ASSIST_USED_TIMES_OVER = 3620;
	RET_ASSIST_QUIT_ALREADY = 3621;
	RET_ASSIST_AVATAR_IN_LINEUP = 3622;
	RET_ASSIST_NO_REWARD = 3623;
	RET_FRIEND_SEARCH_NUM_LIMIT = 3624;
	RET_FRIEND_SEARCH_IN_CD = 3625;
	RET_FRIEND_REMARK_NAME_UTF8_ERROR = 3626;
	RET_FRIEND_REPORT_REASON_UTF8_ERROR = 3627;
	RET_ASSIST_SET_ALREADY = 3628;
	RET_FRIEND_TARGET_FORBID_OTHER_APPLY = 3629;
	RET_FRIEND_MARKED_CNT_MAX = 3630;
	RET_FRIEND_MARKED_ALREADY = 3631;
	RET_FRIEND_NOT_MARKED = 3632;
	RET_FRIEND_CHALLENGE_LINEUP_RECOMMEND_IN_CD = 3633;
	RET_VIEW_PLAYER_CARD_IN_CD = 3634;
	RET_VIEW_PLAYER_BATTLE_RECORD_IN_CD = 3635;
	RET_PLAYER_BOARD_HEAD_ICON_NOT_EXIST = 3701;
	RET_PLAYER_BOARD_HEAD_ICON_LOCKED = 3702;
	RET_PLAYER_BOARD_HEAD_ICON_ALREADY_UNLOCKED = 3703;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_NOT_EXIST = 3704;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_EXCEED_LIMIT = 3705;
	RET_PLAYER_BOARD_DISPLAY_REPEATED_AVATAR = 3706;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_SAME_POS = 3707;
	RET_PLAYER_BOARD_DISPLAY_AVATAR_LOCKED = 3708;
	RET_SIGNATURE_LENGTH_EXCEED_LIMIT = 3709;
	RET_SIGNATURE_SENSITIVE_WORDS = 3710;
	RET_PLAYER_BOARD_ASSIST_AVATAR_NOT_EXIST = 3712;
	RET_PLAYER_BOARD_ASSIST_AVATAR_LOCKED = 3713;
	RET_SIGNATURE_UTF8_ERROR = 3714;
	RET_PLAYER_BOARD_ASSIST_AVATAR_CNT_ERROR = 3715;
	RET_BATTLE_PASS_TIER_NOT_VALID = 3801;
	RET_BATTLE_PASS_LEVEL_NOT_MEET = 3802;
	RET_BATTLE_PASS_REWARD_TAKE_ALREADY = 3803;
	RET_BATTLE_PASS_NOT_PREMIUM = 3804;
	RET_BATTLE_PASS_NOT_DOING = 3805;
	RET_BATTLE_PASS_LEVEL_INVALID = 3806;
	RET_BATTLE_PASS_NOT_UNLOCK = 3807;
	RET_BATTLE_PASS_NO_REWARD = 3808;
	RET_BATTLE_PASS_QUEST_NOT_VALID = 3809;
	RET_BATTLE_PASS_NOT_CHOOSE_OPTIONAL = 3810;
	RET_BATTLE_PASS_NOT_TAKE_REWARD = 3811;
	RET_BATTLE_PASS_OPTIONAL_NOT_VALID = 3812;
	RET_BATTLE_PASS_BUY_ALREADY = 3813;
	RET_BATTLE_PASS_NEAR_END = 3814;
	RET_MUSIC_LOCKED = 3901;
	RET_MUSIC_NOT_EXIST = 3902;
	RET_MUSIC_UNLOCK_FAILED = 3903;
	RET_PUNK_LORD_LACK_SUMMON_TIMES = 4001;
	RET_PUNK_LORD_ATTACKING_MONSTER_LIMIT = 4002;
	RET_PUNK_LORD_MONSTER_NOT_EXIST = 4003;
	RET_PUNK_LORD_MONSTER_ALREADY_SHARED = 4004;
	RET_PUNK_LORD_MONSTER_EXPIRED = 4005;
	RET_PUNK_LORD_SELF_MONSTER_ATTACK_LIMIT = 4006;
	RET_PUNK_LORD_LACK_SUPPORT_TIMES = 4007;
	RET_PUNK_LORD_MONSTER_ALREADY_KILLED = 4008;
	RET_PUNK_LORD_MONSTER_ATTACKER_LIMIT = 4009;
	RET_PUNK_LORD_WORLD_LEVLE_NOT_VALID = 4010;
	RET_PUNK_LORD_REWARD_LEVLE_NOT_EXIST = 4011;
	RET_PUNK_LORD_POINT_NOT_MEET = 4012;
	RET_PUNK_LORD_IN_ATTACKING = 4013;
	RET_PUNK_LORD_OPERATION_IN_CD = 4014;
	RET_PUNK_LORD_REWARD_ALREADY_TAKEN = 4015;
	RET_PUNK_LORD_OVER_BONUS_REWARD_LIMIT = 4016;
	RET_PUNK_LORD_NOT_IN_SCHEDULE = 4017;
	RET_PUNK_LORD_MONSTER_NOT_ATTACKED = 4018;
	RET_PUNK_LORD_MONSTER_NOT_KILLED = 4019;
	RET_PUNK_LORD_MONSTER_KILLED_SCORE_ALREADY_TAKE = 4020;
	RET_PUNK_LORD_REWARD_LEVLE_ALREADY_TAKE = 4021;
	RET_DAILY_ACTIVE_LEVEL_INVALID = 4101;
	RET_DAILY_ACTIVE_LEVEL_REWARD_ALREADY_TAKEN = 4102;
	RET_DAILY_ACTIVE_LEVEL_AP_NOT_ENOUGH = 4103;
	RET_DAILY_MEET_PAM = 4201;
	RET_REPLAY_ID_NOT_MATCH = 4251;
	RET_REPLAY_REQ_NOT_VALID = 4252;
	RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_NOT_PASSED = 4301;
	RET_FIGHT_ACTIVITY_DIFFICULTY_LEVEL_REWARD_ALREADY_TAKE = 4302;
	RET_FIGHT_ACTIVITY_STAGE_NOT_OPEN = 4303;
	RET_FIGHT_ACTIVITY_LEVEL_NOT_UNLOCK = 4304;
	RET_TRAIN_VISITOR_VISITOR_NOT_EXIST = 4351;
	RET_TRAIN_VISITOR_BEHAVIOR_NOT_EXIST = 4352;
	RET_TRAIN_VISITOR_BEHAVIOR_FINISHED = 4353;
	RET_TRAIN_VISITOR_ALL_BEHAVIOR_REWARD_TAKEN = 4354;
	RET_TRAIN_VISITOR_GET_ON_MISSION_NOT_FINISH = 4355;
	RET_TRAIN_VISITOR_NOT_GET_OFF_OR_BE_TRAIN_MEMBER = 4356;
	RET_TEXT_JOIN_UNKNOW_IS_OVERRIDE = 4401;
	RET_TEXT_JOIN_ID_NOT_EXIST = 4402;
	RET_TEXT_JOIN_CAN_NOT_OVERRIDE = 4403;
	RET_TEXT_JOIN_ITEM_ID_ERROR = 4404;
	RET_TEXT_JOIN_SENSITIVE_CHECK_ERROR = 4405;
	RET_TEXT_JOIN_MUST_OVERRIDE = 4406;
	RET_TEXT_JOIN_TEXT_EMPTY = 4407;
	RET_TEXT_JOIN_TEXT_FORMAT_ERROR = 4408;
	RET_TEXT_JOIN_TEXT_UTF8_ERROR = 4409;
	RET_TEXT_JOIN_BATCH_REQ_ID_REPEAT = 4410;
	RET_TEXT_JOIN_TYPE_NOT_SUPPORT_BATCH_REQ = 4411;
	RET_TEXT_JOIN_AVATAR_ID_NOT_EXIST = 4412;
	RET_TEXT_JOIN_UNKNOW_TYPE = 4413;
	RET_PAM_MISSION_MISSION_ID_ERROR = 4451;
	RET_PAM_MISSION_MISSION_EXPIRE = 4452;
	RET_CHAT_TYPE_NOT_EXIST = 4501;
	RET_MSG_TYPE_NOT_EXIST = 4502;
	RET_CHAT_NO_TARGET_UID = 4503;
	RET_CHAT_MSG_EMPTY = 4504;
	RET_CHAT_MSG_EXCEED_LIMIT = 4505;
	RET_CHAT_MSG_SENSITIVE_CHECK_ERROR = 4506;
	RET_CHAT_MSG_UTF8_ERROR = 4507;
	RET_CHAT_FORBID_SWITCH_OPEN = 4508;
	RET_CHAT_FORBID = 4509;
	RET_CHAT_MSG_INCLUDE_SPECIAL_STR = 4510;
	RET_CHAT_MSG_EMOJI_NOT_EXIST = 4511;
	RET_CHAT_MSG_EMOJI_GENDER_NOT_MATCH = 4512;
	RET_CHAT_MSG_EMOJI_NOT_MARKED = 4513;
	RET_CHAT_MSG_EMOJI_ALREADY_MARKED = 4514;
	RET_CHAT_MSG_EMOJI_MARKED_MAX_LIMIT = 4515;
	RET_BOXING_CLUB_CHALLENGE_NOT_OPEN = 4601;
	RET_MUSEUM_NOT_OPEN = 4651;
	RET_MUSEUM_TURN_CNT_NOT_MATCH = 4652;
	RET_MUSEUM_PHASE_NOT_REACH = 4653;
	RET_MUSEUM_UNKNOW_STUFF = 4654;
	RET_MUSEUM_UNKNOW_AREA = 4655;
	RET_MUSEUM_UNKNOW_POS = 4656;
	RET_MUSEUM_STUFF_ALREADY_IN_AREA = 4657;
	RET_MUSEUM_STUFF_NOT_IN_AREA = 4658;
	RET_MUSEUM_GET_NPC_REPEAT = 4659;
	RET_MUSEUM_GET_NPC_UNLOCK = 4660;
	RET_MUSEUM_GET_NPC_NOT_ENOUGH = 4661;
	RET_MUSEUM_CHANGE_STUFF_AREA_ERROR = 4662;
	RET_MUSEUM_NOT_INIT = 4663;
	RET_MUSEUM_EVENT_ERROR = 4664;
	RET_MUSEUM_UNKNOW_CHOOSE_EVENT_ID = 4665;
	RET_MUSEUM_EVENT_ORDER_NOT_MATCH = 4666;
	RET_MUSEUM_EVENT_PHASE_NOT_UNLOCK = 4667;
	RET_MUSEUM_EVENT_MISSION_NOT_FOUND = 4668;
	RET_MUSEUM_AREA_LEVEL_UP_ALREADY = 4669;
	RET_MUSEUM_STUFF_ALREADY_USED = 4670;
	RET_MUSEUM_EVENT_ROUND_NOT_UNLOCK = 4671;
	RET_MUSEUM_STUFF_IN_AREA = 4672;
	RET_MUSEUM_STUFF_DISPATCH = 4673;
	RET_MUSEUM_IS_END = 4674;
	RET_MUSEUM_STUFF_LEAVING = 4675;
	RET_MUSEUM_EVENT_MISSION_NOT_FINISH = 4678;
	RET_MUSEUM_COLLECT_REWARD_NOT_EXIST = 4679;
	RET_MUSEUM_COLLECT_REWARD_ALREADY_TAKEN = 4680;
	RET_MUSEUM_ACCEPT_MISSION_MAX_LIMIT = 4681;
	RET_ROGUE_CHALLENGE_NOT_OPEN = 4701;
	RET_ROGUE_CHALLENGE_ASSIS_REFRESH_LIMIT = 4702;
	RET_ALLEY_NOT_INIT = 4721;
	RET_ALLEY_NOT_OPEN = 4722;
	RET_ALLEY_MAP_NOT_EXIST = 4724;
	RET_ALLEY_EMPTY_POS_LIST = 4725;
	RET_ALLEY_LINE_POS_INVALID = 4726;
	RET_ALLEY_SHOP_NOT_UNLOCK = 4727;
	RET_ALLEY_DEPOT_FULL = 4728;
	RET_ALLEY_SHOP_NOT_INCLUDE = 4729;
	RET_ALLEY_EVENT_NOT_UNLOCK = 4730;
	RET_ALLEY_EVENT_NOT_REFRESH = 4731;
	RET_ALLEY_EVENT_STATE_DOING = 4732;
	RET_ALLEY_EVENT_STATE_FINISH = 4733;
	RET_ALLEY_EVENT_ERROR = 4734;
	RET_ALLEY_REWARD_LEVEL_ERROR = 4735;
	RET_ALLEY_REWARD_PRESTIGE_NOT_ENOUGH = 4736;
	RET_ALLEY_SHIP_EMPTY = 4737;
	RET_ALLEY_SHIP_ID_DISMATCH = 4738;
	RET_ALLEY_SHIP_NOT_EXIST = 4739;
	RET_ALLEY_SHIP_NOT_UNLOCK = 4740;
	RET_ALLEY_GOODS_NOT_EXIST = 4741;
	RET_ALLEY_GOODS_NOT_UNLOCK = 4742;
	RET_ALLEY_PROFIT_NOT_POSITIVE = 4743;
	RET_ALLEY_SPECIAL_ORDER_DISMATCH = 4744;
	RET_ALLEY_ORDER_GOODS_OVER_LIMIT = 4745;
	RET_ALLEY_SPECIAL_ORDER_CONDITION_NOT_MEET = 4746;
	RET_ALLEY_DEPOT_SIZE_OVER_LIMIT = 4747;
	RET_ALLEY_GOODS_NOT_ENOUGH = 4748;
	RET_ALLEY_ORDER_INDEX_INVALID = 4749;
	RET_ALLEY_REWARD_ALREADY_TAKE = 4750;
	RET_ALLEY_REWARD_NOT_EXIST = 4751;
	RET_ALLEY_MAIN_MISSION_NOT_DOING = 4752;
	RET_ALLEY_CRITICAL_EVENT_NOT_FINISH = 4753;
	RET_ALLEY_SHOP_GOODS_NOT_VALID = 4754;
	RET_ALLEY_SLASH_NOT_OPEN = 4755;
	RET_ALLEY_PLACING_ANCHOR_INVALID = 4756;
	RET_ALLEY_PLACING_GOODS_INDEX_INVALID = 4757;
	RET_ALLEY_SAVE_MAP_TOO_QUICK = 4758;
	RET_ALLEY_MAP_NOT_LINK = 4759;
	RET_ALLEY_FUNDS_NOT_LOWER_BASE = 4760;
	RET_ALLEY_EVENT_NOT_FINISH = 4761;
	RET_ALLEY_NORMAL_ORDER_NOT_MEET = 4762;
	RET_PLAYER_RETURN_NOT_OPEN = 4801;
	RET_PLAYER_RETURN_IS_SIGNED = 4802;
	RET_PLAYER_RETURN_POINT_NOT_ENOUGH = 4803;
	RET_PLAYER_RETURN_CONDITION_INVALID = 4804;
	RET_PLAYER_RETURN_HAS_SIGNED = 4805;
	RET_PLAYER_RETURN_REWARD_TAKEN = 4806;
	RET_AETHER_DIVIDE_NO_LINEUP = 4851;
	RET_AETHER_DIVIDE_LINEUP_INVALID = 4852;
	RET_CHAT_BUBBLE_ID_ERROR = 4901;
	RET_CHAT_BUBBLE_ID_NOT_UNLOCK = 4902;
	RET_PHONE_THEME_ID_ERROR = 4903;
	RET_PHONE_THEME_ID_NOT_UNLOCK = 4904;
	RET_CHAT_BUBBLE_SELECT_IS_CURRENT = 4905;
	RET_PHONE_THEME_SELECT_IS_CURRENT = 4906;
	RET_CHESS_ROGUE_CONFIG_NOT_FOUND = 4951;
	RET_CHESS_ROGUE_CONFIG_INVALID = 4952;
	RET_CHESS_ROGUE_NO_VALID_ROOM = 4963;
	RET_CHESS_ROGUE_NO_CELL_INFO = 4964;
	RET_CHESS_ROGUE_CELL_NOT_FINISH = 4965;
	RET_CHESS_ROGUE_CELL_IS_LOCKED = 4966;
	RET_CHESS_ROGUE_SCHEDULE_NOT_MATCH = 4967;
	RET_CHESS_ROGUE_STATUS_FAIL = 4968;
	RET_CHESS_ROGUE_AREA_NOT_EXIST = 4969;
	RET_CHESS_ROGUE_LINEUP_FAIL = 4970;
	RET_CHESS_ROGUE_AEON_FAIL = 4980;
	RET_CHESS_ROGUE_ENTER_CELL_FAIL = 4981;
	RET_CHESS_ROGUE_ROLL_DICE_FAIL = 4982;
	RET_CHESS_ROGUE_DICE_STATUS_FAIL = 4983;
	RET_CHESS_ROGUE_DICE_CNT_NOT_FULL = 4984;
	RET_CHESS_ROGUE_UNLOCK = 4985;
	RET_CHESS_ROGUE_PICK_AVATAR_FAIL = 4986;
	RET_CHESS_ROGUE_AVATAR_INVALID = 4987;
	RET_CHESS_ROGUE_CELL_CAN_NOT_SELECT = 4988;
	RET_CHESS_ROGUE_DICE_CONFIRMED = 4989;
	RET_CHESS_ROGUE_NOUS_DICE_NOT_MATCH = 4990;
	RET_CHESS_ROGUE_NOUS_DICE_RARITY_FAIL = 4991;
	RET_CHESS_ROGUE_NOUS_DICE_SURFACE_DUPLICATE = 4992;
	RET_CHESS_ROGUE_NOT_IN_ROGUE = 4993;
	RET_CHESS_ROGUE_NOUS_DICE_BRANCH_LIMIT = 4994;
	RET_HELIOBUS_NOT_OPEN = 5101;
	RET_HELIOBUS_SNS_POST_NOT_UNLOCK = 5102;
	RET_HELIOBUS_SNS_ALREADY_READ = 5103;
	RET_HELIOBUS_SNS_ALREADY_LIKED = 5104;
	RET_HELIOBUS_SNS_ALREADY_COMMENTED = 5105;
	RET_HELIOBUS_SNS_IN_MISSION = 5106;
	RET_HELIOBUS_SNS_ALREADY_POSTED = 5107;
	RET_HELIOBUS_SNS_NOT_DOING_MISSION = 5108;
	RET_HELIOBUS_REWARD_LEVEL_MAX = 5109;
	RET_HELIOBUS_INCOME_NOT_ENOUGH = 5110;
	RET_HELIOBUS_SNS_COMMENT_NOT_UNLOCK = 5111;
	RET_HELIOBUS_CHALLENGE_NOT_UNLOCK = 5112;
	RET_HELIOBUS_CHALLENGE_ID_ERROR = 5113;
	RET_HELIOBUS_SKILL_NOT_UNLOCK = 5114;
	RET_HELIOBUS_ACCEPT_POST_MISSION_FAIL = 5115;
	RET_HELIOBUS_SKILL_NOT_SELECTED = 5116;
	RET_HELIOBUS_PLANE_TYPE_INVALID = 5117;
	RET_REDDOT_PARAM_INVALID = 5151;
	RET_REDDOT_ACTIVITY_NOT_OPEN = 5152;
	RET_ROGUE_ENDLESS_ACTIVITY_CONFIG_ERROR = 5201;
	RET_ROGUE_ENDLESS_ACTIVITY_NOT_OPEN = 5202;
	RET_ROGUE_ENDLESS_ACTIVITY_OVER_BONUS_REWARD_LIMIT = 5203;
	RET_ROGUE_ENDLESS_ACTIVITY_SCORE_NOT_MEET = 5204;
	RET_ROGUE_ENDLESS_ACTIVITY_REWARD_LEVLE_ALREADY_TAKE = 5205;
	RET_HEART_DIAL_SCRIPT_NOT_FOUND = 5251;
	RET_HEART_DIAL_SCRIPT_EMOTION_THE_SAME = 5252;
	RET_HEART_DIAL_SCRIPT_STEP_NOT_NORMAL = 5253;
	RET_HEART_DIAL_SCRIPT_CONDITION_NOT_MATCH = 5254;
	RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_NUM_NOT_MATCH = 5255;
	RET_HEART_DIAL_SCRIPT_SUBMIT_ITEM_ID_NOT_MATCH = 5256;
	RET_HEART_DIAL_DIALOGUE_NOT_FOUND = 5257;
	RET_HEART_DIAL_DIALOGUE_ALREADY_PERFORMED = 5258;
	RET_HEART_DIAL_NPC_NOT_FOUND = 5259;
	RET_HEART_DIAL_TRACE_CONFIG_NOT_FOUND = 5260;
	RET_HEART_DIAL_FLOOR_TRACE_EXIST = 5261;
	RET_HEART_DIAL_TRACE_FLOOR_NOT_MATCH = 5262;
	RET_TRAVEL_BROCHURE_CONFIG_ERROR = 5301;
	RET_TRAVEL_BROCHURE_PARAM_INVALID = 5302;
	RET_TRAVEL_BROCHURE_LOCKED = 5303;
	RET_TRAVEL_BROCHURE_CANNOT_OPERATE = 5304;
	RET_TRAVEL_BROCHURE_WORLD_ID_NOT_MATCH = 5305;
	RET_TRAVEL_BROCHURE_HAS_NO_WORLD_BOOK = 5306;
	RET_TRAVEL_BROCHURE_PAGE_FULL = 5307;
	RET_MAP_ROTATION_NOT_IN_REGION = 5351;
	RET_MAP_ROTATION_ROTATER_ALREADY_DEPLOYED = 5352;
	RET_MAP_ROTATION_ENERGY_NOT_ENOUGH = 5353;
	RET_MAP_ROTATION_ENTITY_NOT_ON_CUR_POSE = 5354;
	RET_MAP_ROTATION_ROTATER_NOT_DEPLOYED = 5355;
	RET_MAP_ROTATION_POSE_ROTATER_MISMATCH = 5356;
	RET_MAP_ROTATION_ROTATER_NOT_REMOVABLE = 5357;
	RET_MAP_ROTATION_ROTATER_DISPOSABLE = 5358;
	RET_SPACE_ZOO_ACTIVITY_CAT_NOT_FOUND = 5401;
	RET_SPACE_ZOO_ACTIVITY_CAT_PARAM_INVALID = 5402;
	RET_SPACE_ZOO_ACTIVITY_CAT_ITEM_NOT_ENOUGH = 5403;
	RET_SPACE_ZOO_ACTIVITY_CAT_BAG_FULL = 5404;
	RET_SPACE_ZOO_ACTIVITY_CAT_NOT_TO_MUTATE = 5405;
	RET_SPACE_ZOO_ACTIVITY_CAT_STATE_ERROR = 5406;
	RET_SPACE_ZOO_ACTIVITY_CAT_CATTERY_LOCKED = 5407;
	RET_SPACE_ZOO_ACTIVITY_CAT_OUT_NOW = 5408;
	RET_SPACE_ZOO_ACTIVITY_CAT_CONFIG_NOT_FOUND = 5409;
	RET_SPACE_ZOO_ACTIVITY_CAT_FEATURE_NOT_FOUND = 5410;
	RET_SPACE_ZOO_ACTIVITY_CAT_ADD_CAT_ERROR = 5411;
	RET_SPACE_ZOO_ACTIVITY_CAT_MONEY_NOT_ENOUGH = 5412;
	RET_SPACE_ZOO_ACTIVITY_CAT_COND_NOT_MATCH = 5413;
	RET_STRONG_CHALLENGE_ACTIVITY_STAGE_CFG_MISS = 5501;
	RET_STRONG_CHALLENGE_ACTIVITY_STAGE_NOT_OPEN = 5502;
	RET_STRONG_CHALLENGE_ACTIVITY_BUFF_ERROR = 5503;
	RET_ROLL_SHOP_NOT_FOUND = 5551;
	RET_ROLL_SHOP_GROUP_EMPTY = 5552;
	RET_ROLL_SHOP_EMPTY = 5553;
	RET_ROLL_SHOP_GACHA_REQ_DUPLICATED = 5554;
	RET_ROLL_SHOP_RANDOM_ERROR = 5555;
	RET_ROLL_SHOP_GROUP_TYPE_NOT_FOUND = 5556;
	RET_ROLL_SHOP_HAS_STORED_REWARD_ALREADY = 5557;
	RET_ROLL_SHOP_NO_STORED_REWARD = 5558;
	RET_ROLL_SHOP_NOT_IN_VALID_SCENE = 5559;
	RET_ROLL_SHOP_INVALID_ROLL_SHOP_TYPE = 5560;
	RET_ACTIVITY_RAID_COLLECTION_PREV_NOT_FINISH = 5601;
	RET_ACTIVITY_RAID_COLLECTION_GROUP_ENTER_NEXT_UNAVAILABLE = 5602;
	RET_ACTIVITY_RAID_COLLECTION_IS_LAST = 5603;
	RET_ACTIVITY_RAID_COLLECTION_IS_NOT_NEXT = 5604;
	RET_OFFERING_NOT_UNLOCK = 5651;
	RET_OFFERING_LEVEL_NOT_UNLOCK = 5652;
	RET_OFFERING_REACH_MAX_LEVEL = 5653;
	RET_OFFERING_ITEM_NOT_ENOUGH = 5654;
	RET_OFFERING_LONGTAIL_NOT_OPEN = 5655;
	RET_OFFERING_REWARD_CONDITION = 5656;
	RET_DRINK_MAKER_CHAT_INVALID = 5701;
	RET_DRINK_MAKER_PARAM_INVALID = 5702;
	RET_DRINK_MAKER_PARAM_NOT_UNLOCK = 5703;
	RET_DRINK_MAKER_CONFIG_NOT_FOUND = 5704;
	RET_DRINK_MAKER_NOT_LAST_CHAT = 5705;
	RET_DRINK_MAKER_DAY_AND_FREE_PHASE_NOT_OPEN = 5706;
	RET_MONOPOLY_NOT_OPEN = 5751;
	RET_MONOPOLY_CONFIG_ERROR = 5752;
	RET_MONOPOLY_DICE_NOT_ENOUGH = 5753;
	RET_MONOPOLY_CUR_CELL_NOT_FINISH = 5754;
	RET_MONOPOLY_COIN_NOT_ENOUGH = 5755;
	RET_MONOPOLY_CELL_WAIT_PENDING = 5756;
	RET_MONOPOLY_CELL_STATE_ERROR = 5757;
	RET_MONOPOLY_CELL_CONTENT_ERROR = 5758;
	RET_MONOPOLY_ITEM_NOT_ENOUGH = 5759;
	RET_MONOPOLY_CELL_CONTENT_CANNOT_GIVEUP = 5760;
	RET_MONOPOLY_ASSET_LEVEL_INVALID = 5761;
	RET_MONOPOLY_TURN_NOT_FINISH = 5762;
	RET_MONOPOLY_GUIDE_NOT_FINISH = 5763;
	RET_MONOPOLY_RAFFLE_REWARD_REISSUED = 5764;
	RET_MONOPOLY_NO_GAME_ACTIVE = 5771;
	RET_MONOPOLY_GAME_RATIO_NOT_INCREASABLE = 5772;
	RET_MONOPOLY_GAME_RATIO_MAX = 5773;
	RET_MONOPOLY_GAME_TARGET_RATIO_INVALID = 5774;
	RET_MONOPOLY_GAME_BINGO_FLIP_POS_INVALID = 5775;
	RET_MONOPOLY_GAME_GUESS_ALREADY_CHOOSE = 5776;
	RET_MONOPOLY_GAME_GUESS_CHOOSE_INVALID = 5777;
	RET_MONOPOLY_GAME_GUESS_INFORMATION_ALREADY_BOUGHT = 5778;
	RET_MONOPOLY_GAME_RAISE_RATIO_NOT_UNLOCK = 5779;
	RET_MONOPOLY_FRIEND_NOT_SYNCED = 5785;
	RET_MONOPOLY_GET_FRIEND_RANKING_LIST_IN_CD = 5786;
	RET_MONOPOLY_LIKE_TARGET_NOT_FRIEND = 5787;
	RET_MONOPOLY_DAILY_ALREADY_LIKED = 5788;
	RET_MONOPOLY_SOCIAL_EVENT_STATUS_NOT_MATCH = 5789;
	RET_MONOPOLY_SOCIAL_EVENT_SERVER_CACHE_NOT_EXIST = 5790;
	RET_MONOPOLY_ACTIVITY_ID_NOT_MATCH = 5791;
	RET_MONOPOLY_RAFFLE_POOL_NOT_EXIST = 5792;
	RET_MONOPOLY_RAFFLE_POOL_TIME_NOT_MATCH = 5793;
	RET_MONOPOLY_RAFFLE_POOL_PHASE_NOT_MEET = 5794;
	RET_MONOPOLY_RAFFLE_POOL_SHOW_TIME_NOT_MEET = 5795;
	RET_MONOPOLY_RAFFLE_TICKET_NOT_FOUND = 5796;
	RET_MONOPOLY_RAFFLE_TICKET_TIME_NOT_MEET = 5797;
	RET_MONOPOLY_RAFFLE_TICKET_REWARD_ALREADY_TAKEN = 5798;
	RET_MONOPOLY_RAFFLE_POOL_NOT_IN_RAFFLE_TIME = 5799;
	RET_MONOPOLY_MBTI_REPORT_REWARD_ALREADY_TAKEN = 5800;
	RET_EVOLVE_BUILD_LEVEL_GAMING = 5801;
	RET_EVEOLVE_BUILD_LEVEL_BAN_RANDOM = 5802;
	RET_EVOLVE_BUILD_FIRST_REWARD_ALREADY_TAKEN = 5803;
	RET_EVOLVE_BUILD_LEVEL_UNFINISH = 5804;
	RET_EVOLVE_BUILD_SHOP_ABILITY_MAX_LEVEL = 5805;
	RET_EVOLVE_BUILD_SHOP_ABILITY_MIN_LEVEL = 5806;
	RET_EVOLVE_BUILD_SHOP_ABILITY_NOT_GET = 5807;
	RET_EVOLVE_BUILD_LEVEL_LOCK = 5808;
	RET_EVOLVE_BUILD_EXP_NOT_ENOUGH = 5809;
	RET_EVOLVE_BUILD_SHOP_ABILITY_LEVEL_ERROR = 5810;
	RET_EVOLVE_BUILD_ACTIVITY_NOT_OPEN = 5811;
	RET_EVOLVE_BUILD_SHOP_ABILITY_EMPTY = 5812;
	RET_EVOLVE_BUILD_LEVEL_NOT_START = 5813;
	RET_EVOLVE_BUILD_SHOP_LOCK = 5814;
	RET_EVOLVE_BUILD_REWARD_LOCK = 5815;
	RET_EVOLVE_BUILD_REWARD_LEVEL_MAX = 5816;
	RET_EVOLVE_BUILD_REWARD_ALREADY_ALL_TAKEN = 5717;
	RET_CLOCK_PARK_CONFIG_ERROR = 5851;
	RET_CLOCK_PARK_EFFECT_ERROR = 5852;
	RET_CLOCK_PARK_SCRIPT_ALREADY_UNLOCK = 5853;
	RET_CLOCK_PARK_SCRIPT_UNLOCK_CONDITION_NOT_MEET = 5854;
	RET_CLOCK_PARK_TALENT_ALREADY_UNLOCK = 5855;
	RET_CLOCK_PARK_SCRIPT_LOCKED = 5856;
	RET_CLOCK_PARK_HAS_ONGOING_SCRIPT = 5857;
	RET_CLOCK_PARK_NO_ONGOING_SCRIPT = 5858;
	RET_CLOCK_PARK_DICE_PLACEMENT_ERROR = 5859;
	RET_CLOCK_PARK_MISMATCH_STATUS = 5860;
	RET_CLOCK_PARK_NO_BUFF = 5861;
	RET_CLOCK_PARK_SLOT_MACHINE_GACHA_REQ_DUPLICATED = 5862;
	RET_CLOCK_PARK_SLOT_MACHINE_COST_NOT_ENOUGH = 5863;
	RET_CLOCK_PARK_SLOT_MACHINE_GACHA_CNT_EXCEED_LIMIT = 5864;
	RET_CLOCK_PARK_NOT_OPEN = 5865;
	RET_TOURN_ROGUE_STATUS_MISMATCH = 5901;
	RET_MAGIC_ROGUE_STATUS_MISMATCH = 5902;
	RET_AUTO_MOUNT_MAGIC_UNIT_NO_MATCHED_MAGIC_SCEPTER = 5903;
	RET_MAGIC_UNIT_WORKBENCH_REFORGE_GEN_FAIL = 5904;
	RET_MATCH_ALREADY_IN_MATCH = 6201;
	RET_MATCH_NOT_IN_MATCH = 6202;
	RET_MATCH_PLAY_NOT_OPEN = 6203;
	RET_CROSS_STATE_ERROR = 6204;
	RET_MATCH_VERSION_NOT_EQUAL = 6205;
	RET_MATCH_PLAYER_NOT_IN_LOBBY_ROOM = 6206;
	RET_LOBBY_STATE_NOT_MATCH = 6207;
	RET_LOBBY_ROOM_NOT_EXIST = 6208;
	RET_LOBBY_ROOM_PALYER_FULL = 6209;
	RET_LOBBY_ROOM_PALYER_NOT_READY = 6210;
	RET_LOBBY_ROOM_PALYER_FIGHTING = 6211;
	RET_FIGHT_ROOM_NOT_EXIST = 6250;
	RET_FIGHT_MATCH3_PLAYER_STATE_ERR = 6251;
	RET_FIGHT_MATCH3_ROOM_STATE_ERR = 6252;
	RET_CROSS_STATE_TIME_OUT = 6253;
	RET_SWORD_TRAINING_NO_ACTIVE_GAME = 6301;
	RET_SWORD_TRAINING_NO_PENDING_ACTION_MATCH = 6302;
	RET_SWORD_TRAINING_PARTNER_ABILITY_INVALID = 6303;
	RET_SWORD_TRAINING_SKILL_ALREADY_LEARNED = 6304;
	RET_SWORD_TRAINING_CONDITION_NOT_MEET = 6305;
	RET_SWORD_TRAINING_PARENT_SKILL_NOT_LEARNED = 6306;
	RET_SWORD_TRAINING_SKILL_TYPE_NOT_UNLOCK = 6307;
	RET_SWORD_TRAINING_GAME_ALREADY_EXIST = 6308;
	RET_SWORD_TRAINING_ENDING_HINT_NOT_MATCH = 6309;
	RET_SWORD_TRAINING_STORYLINE_CONFIG_NOT_FOUND = 6310;
	RET_SWORD_TRAINING_STORY_CONFIG_NOT_FOUND = 6311;
	RET_SWORD_TRAINING_UNLOCK_NOT_FINISH = 6312;
	RET_SWORD_TRAINING_OPTION_MISMATCH = 6313;
	RET_SWORD_TRAINING_RESTORE_WITHOUT_EXAM_FAILED = 6314;
	RET_SWORD_TRAINING_NO_RESTORE_GAME_AVAILABLE = 6315;
	RET_SWORD_TRAINING_ENDING_STORY_NOT_MATCH = 6316;
	RET_SWORD_TRAINING_ENDING_NOT_FINISH = 6317;
	RET_SWORD_TRAINING_ENDING_REWARD_TAKEN = 6318;
	RET_SWORD_TRAINING_COMBAT_RANK_NOT_CHANGE = 6319;
	RET_SWORD_TRAINING_DIRECT_BATTLE_DISABLE = 6320;
	RET_FIGHT_FEST_PHASE_NOT_MATCH = 6351;
	RET_FIGHT_FEST_SCORE_RACE_ALREADY_FINISH = 6352;
	RET_FIGHT_FEST_CHALLENGE_LOCKED = 6353;
	RET_FIGHT_FEST_COACH_SKILL_LOCKED = 6354;
	RET_FIGHT_FEST_COACH_SKILL_EQUIP_TYPE_EXISTED = 6355;
	RET_FIGHT_FEST_SCORE_RACE_MISSION_DOIND = 6356;
	RET_FIGHT_FEST_COACH_SKILL_NO_EQUIP = 6357;
	RET_PET_NOT_EXIST = 6401;
	RET_PET_ALREADY_SUMMONED = 6402;
	RET_PET_NOT_SUMMONED = 6403;
	RET_MUSIC_RHYTHM_LEVEL_TIME_TOO_SHORT = 6451;
	RET_MUSIC_RHYTHM_NOT_IN_LEVEL = 6452;
	RET_MUSIC_RHYTHM_PRE_DIFFICULTY_NOT_PASS = 6453;
	RET_MUSIC_RHYTHM_SONG_LIMITED = 6454;
	RET_MUSIC_RHYTHM_SONG_LOCKED = 6455;
	RET_MUSIC_RHYTHM_TRACK_LOCKED = 6456;
	RET_MUSIC_RHYTHM_LEVEL_NOT_UNLOCK = 6457;
	RET_MUSIC_RHYTHM_SONG_SFX_LOCKED = 6458;
	RET_TRAIN_PARTY_COIN_NOT_ENOUGH = 6501;
	RET_TRAIN_PARTY_DIY_TAG_NOT_MATCH = 6502;
	RET_TRAIN_PARTY_USE_CARD_MOBILITY_NOT_ENOUGH = 6503;
	RET_TRAIN_PARTY_AREA_UNLOCK_COIN_NOT_ENOUGH = 6504;
	RET_TAROT_BOOK_ENERGY_NOT_ENOUGH = 6601;
	RET_TAROT_BOOK_PACK_NOT_AVAILABLE = 6602;
	RET_TAROT_BOOK_STORY_ALREADY_UNLOCK = 6603;
	RET_TAROT_BOOK_CARD_NOT_ENOUGH = 6604;
	RET_TAROT_BOOK_CLUE_NOT_ENOUGH = 6605;
	RET_TAROT_BOOK_UNLOCK_STORY_CARD_NOT_SAME = 6606;
	RET_TAROT_BOOK_STORY_NOT_UNLOCK = 6607;
	RET_TAROT_BOOK_STORY_ALREADY_FINISH = 6608;
	RET_TAROT_BOOK_INTERACTION_ALREADY_FINISH = 6609;
}

// OOCDHGFCJBK
enum CmdActivityType {
	CmdActivityTypeNone = 0;
	CmdTakeLoginActivityRewardScRsp = 2627;
	CmdGetMaterialSubmitActivityDataCsReq = 2675;
	CmdTakeLoginActivityRewardCsReq = 2684;
	CmdTakeMaterialSubmitActivityRewardCsReq = 2653;
	CmdTakeTrialActivityRewardScRsp = 2699;
	CmdTakeTrialActivityRewardCsReq = 2672;
	CmdSubmitMaterialSubmitActivityMaterialScRsp = 2607;
	CmdTakeMaterialSubmitActivityRewardScRsp = 2690;
	CmdStartTrialActivityCsReq = 2603;
	CmdEnterTrialActivityStageCsReq = 2645;
	CmdEnterTrialActivityStageScRsp = 2664;
	CmdLeaveTrialActivityCsReq = 2661;
	CmdGetLoginActivityCsReq = 2636;
	CmdSubmitMaterialSubmitActivityMaterialCsReq = 2626;
	CmdCurTrialActivityScNotify = 2633;
	CmdStartTrialActivityScRsp = 2640;
	CmdLeaveTrialActivityScRsp = 2630;
	CmdGetActivityScheduleConfigCsReq = 2667;
	CmdGetTrialActivityDataScRsp = 2692;
	CmdGetTrialActivityDataCsReq = 2694;
	CmdGetLoginActivityScRsp = 2695;
	CmdGetActivityScheduleConfigScRsp = 2628;
	CmdTrialActivityDataChangeScNotify = 2660;
	CmdGetMaterialSubmitActivityDataScRsp = 2619;
}

enum TrialActivityStatus {
	TRIAL_ACTIVITY_STATUS_NONE = 0;
	TRIAL_ACTIVITY_STATUS_FINISH = 1;
}

message LoginActivityData {
	uint32 login_days = 11;
	repeated uint32 obeamnonhmk = 7;
	uint32 panel_id = 8;
	uint32 id = 5;
}

message GetLoginActivityCsReq {
}

// FFGFBPBCIAM (2695)
message GetLoginActivityScRsp {
	repeated LoginActivityData login_activity_list = 4;
	uint32 retcode = 11;
}

// LMCMJBJKEJO (2684)
message TakeLoginActivityRewardCsReq {
	uint32 id = 11;
	uint32 take_days = 7;
}

// FBGFCAGCDCJ (2627)
message TakeLoginActivityRewardScRsp {
	ItemList reward = 15;
	uint32 take_days = 1;
	uint32 id = 9;
	uint32 panel_id = 4;
	uint32 retcode = 8;
}

message ActivityScheduleData {
	uint32 activity_id = 10;
	int64 begin_time = 3;
	int64 end_time = 9;
	uint32 panel_id = 8;
}

// GKDJMNBEGHC (2667)
message GetActivityScheduleConfigCsReq {
}

// PIAACGNEGNF (2628)
message GetActivityScheduleConfigScRsp {
	uint32 retcode = 3;
	repeated ActivityScheduleData schedule_data = 14;
}

message TrialActivityInfo {
	bool taken_reward = 11;
	uint32 stage_id = 3;
}

// FDPBAIDBMHO (2694)
message GetTrialActivityDataCsReq {
}

// BMPMEDHEHJE (2692)
message GetTrialActivityDataScRsp {
	uint32 retcode = 8;
	uint32 activity_stage_id = 5;
	repeated TrialActivityInfo trial_activity_info_list = 13;
}

// KBPJMAKDBGM (2660)
message TrialActivityDataChangeScNotify {
	TrialActivityInfo trial_activity_info = 12;
}

// CDMMLBFCMOC (2645)
message EnterTrialActivityStageCsReq {
	uint32 stage_id = 1;
}

// KPBPGNEFIKB (2664)
message EnterTrialActivityStageScRsp {
	SceneBattleInfo battle_info = 12;
	uint32 retcode = 1;
}

// IKPECCFDNNM (2672)
message TakeTrialActivityRewardCsReq {
	uint32 stage_id = 6;
}

// IKHAMOJIKGF (2699)
message TakeTrialActivityRewardScRsp {
	uint32 retcode = 12;
	ItemList reward = 1;
	uint32 stage_id = 13;
}

// AKJOLMJKIBL (2603)
message StartTrialActivityCsReq {
	uint32 stage_id = 10;
}

// LHHLLGLLKKF (2640)
message StartTrialActivityScRsp {
	uint32 retcode = 9;
	uint32 stage_id = 5;
}

// FICABMHOOEO (2661)
message LeaveTrialActivityCsReq {
	uint32 stage_id = 9;
}

// KDNOIIGODKA (2630)
message LeaveTrialActivityScRsp {
	uint32 stage_id = 14;
	uint32 retcode = 11;
}

// IJLGMGBDOAF (2633)
message CurTrialActivityScNotify {
	TrialActivityStatus status = 3;
	uint32 activity_stage_id = 4;
}

message JCOFDIPBJME {
	uint32 panel_id = 6;
	bool ajimomgleco = 12;
	bool is_taken_reward = 14;
	uint32 chhlbiofbef = 2;
}

// CONPKEGKENO (2675)
message GetMaterialSubmitActivityDataCsReq {
}

// HHGHLKPKNIF (2619)
message GetMaterialSubmitActivityDataScRsp {
	repeated JCOFDIPBJME lpajkdbhjai = 3;
	uint32 retcode = 11;
}

// IGEHLOJHLCP (2626)
message SubmitMaterialSubmitActivityMaterialCsReq {
	uint32 chhlbiofbef = 5;
}

// HGBLDCADMGM (2607)
message SubmitMaterialSubmitActivityMaterialScRsp {
	uint32 retcode = 8;
	JCOFDIPBJME cfdepejiggg = 9;
}

// JEHMAMCKLPP (2653)
message TakeMaterialSubmitActivityRewardCsReq {
	uint32 chhlbiofbef = 8;
}

// FIEIGCONDNJ (2690)
message TakeMaterialSubmitActivityRewardScRsp {
	uint32 retcode = 12;
	uint32 chhlbiofbef = 5;
	ItemList reward = 10;
}

// OICBCLEPNHC
enum CmdAdventureType {
	CmdAdventureTypeNone = 0;
	CmdEnterAdventureCsReq = 1336;
	CmdGetFarmStageGachaInfoCsReq = 1384;
	CmdQuickStartCocoonStageScRsp = 1328;
	CmdQuickStartFarmElementCsReq = 1352;
	CmdQuickStartCocoonStageCsReq = 1367;
	CmdGetFarmStageGachaInfoScRsp = 1327;
	CmdQuickStartFarmElementScRsp = 1374;
	CmdEnterAdventureScRsp = 1395;
}

// EDKIDMOOMPJ (1336)
message EnterAdventureCsReq {
	uint32 map_id = 2;
}

// NPKHHEPCLNE (1395)
message EnterAdventureScRsp {
	SceneInfo scene = 3;
	uint32 retcode = 10;
}

message FarmStageGachaInfo {
	int64 end_time = 15;
	uint32 gacha_id = 3;
	int64 begin_time = 9;
}

// CDNMHFOMNIG (1384)
message GetFarmStageGachaInfoCsReq {
	repeated uint32 farm_stage_gacha_id_list = 2;
}

// BGCFOIEIKLA (1327)
message GetFarmStageGachaInfoScRsp {
	repeated FarmStageGachaInfo farm_stage_gacha_info_list = 1;
	uint32 retcode = 3;
}

// IEJOOPKJOOF (1367)
message QuickStartCocoonStageCsReq {
	uint32 dfpaikajkal = 11;
	uint32 wave = 13;
	uint32 world_level = 2;
}

// OGGILCEKBIE (1328)
message QuickStartCocoonStageScRsp {
	uint32 dfpaikajkal = 1;
	SceneBattleInfo battle_info = 15;
	uint32 wave = 10;
	uint32 retcode = 7;
}

// IHEPLDPPMFA (1352)
message QuickStartFarmElementCsReq {
	uint32 kidmdefnaak = 9;
	uint32 world_level = 4;
}

// PKICEIJHCGN (1374)
message QuickStartFarmElementScRsp {
	uint32 retcode = 12;
	SceneBattleInfo battle_info = 8;
	uint32 world_level = 15;
	uint32 kidmdefnaak = 1;
}

// NBIBIGCACMG
// 2.7.51
// enum CmdAetherDivideType {
// 	CmdAetherDivideTypeNone = 0;
// 	CmdAetherDivideSpiritExpUpCsReq = 4859;
// 	CmdSwitchAetherDivideLineUpSlotCsReq = 4826;
// 	CmdGetAetherDivideInfoCsReq = 4834;
// 	CmdGetAetherDivideChallengeInfoCsReq = 4829;
// 	CmdEnterAetherDivideSceneScRsp = 4895;
// 	CmdSetAetherDivideLineUpCsReq = 4846;
// 	CmdAetherDivideSpiritExpUpScRsp = 4812;
// 	CmdAetherDivideSkillItemScNotify = 4858;
// 	CmdLeaveAetherDivideSceneScRsp = 4827;
// 	CmdAetherDivideRefreshEndlessCsReq = 4835;
// 	CmdAetherDivideSpiritInfoScNotify = 4878;
// 	CmdEquipAetherDividePassiveSkillCsReq = 4896;
// 	CmdStartAetherDivideChallengeBattleCsReq = 4852;
// 	CmdStartAetherDivideStageBattleCsReq = 4853;
// 	CmdGetAetherDivideChallengeInfoScRsp = 4850;
// 	CmdAetherDivideRefreshEndlessScNotify = 4817;
// 	CmdClearAetherDividePassiveSkillCsReq = 4875;
// 	CmdStartAetherDivideSceneBattleScRsp = 4828;
// 	CmdAetherDivideTainerInfoScNotify = 4888;
// 	CmdAetherDivideFinishChallengeScNotify = 4848;
// 	CmdClearAetherDividePassiveSkillScRsp = 4819;
// 	CmdAetherDivideRefreshEndlessScRsp = 4873;
// 	CmdAetherDivideTakeChallengeRewardCsReq = 4813;
// 	CmdAetherDivideLineupScNotify = 4876;
// 	CmdStartAetherDivideSceneBattleCsReq = 4867;
// 	CmdStartAetherDivideChallengeBattleScRsp = 4874;
// 	CmdLeaveAetherDivideSceneCsReq = 4884;
// 	CmdSetAetherDivideLineUpScRsp = 4825;
// 	CmdAetherDivideTakeChallengeRewardScRsp = 4821;
// 	CmdSwitchAetherDivideLineUpSlotScRsp = 4807;
// 	CmdGetAetherDivideInfoScRsp = 4843;
// 	CmdEquipAetherDividePassiveSkillScRsp = 4805;
// 	CmdStartAetherDivideStageBattleScRsp = 4890;
// 	CmdEnterAetherDivideSceneCsReq = 4836;
// }

enum CmdAetherDivideType {
	CmdAetherDivideTypeNone = 0;
	CmdAetherDivideSpiritExpUpCsReq = 4822;
	CmdSwitchAetherDivideLineUpSlotCsReq = 4811;
	CmdGetAetherDivideInfoCsReq = 4845;
	CmdGetAetherDivideChallengeInfoCsReq = 4805;
	CmdEnterAetherDivideSceneScRsp = 4850;
	CmdSetAetherDivideLineUpCsReq = 4810;
	CmdAetherDivideSpiritExpUpScRsp = 4814;
	CmdAetherDivideSkillItemScNotify = 4825;
	CmdLeaveAetherDivideSceneScRsp = 4823;
	CmdAetherDivideRefreshEndlessCsReq = 4834;
	CmdAetherDivideSpiritInfoScNotify = 4842;
	CmdEquipAetherDividePassiveSkillCsReq = 4813;
	CmdStartAetherDivideChallengeBattleCsReq = 4809;
	CmdStartAetherDivideStageBattleCsReq = 4835;
	CmdGetAetherDivideChallengeInfoScRsp = 4824;
	CmdAetherDivideRefreshEndlessScNotify = 4837;
	CmdClearAetherDividePassiveSkillCsReq = 4804;
	CmdStartAetherDivideSceneBattleScRsp = 4849;
	CmdAetherDivideTainerInfoScNotify = 4829;
	CmdAetherDivideFinishChallengeScNotify = 4820;
	CmdClearAetherDividePassiveSkillScRsp = 4840;
	CmdAetherDivideRefreshEndlessScRsp = 4819;
	CmdAetherDivideTakeChallengeRewardCsReq = 4838;
	CmdAetherDivideLineupScNotify = 4844;
	CmdStartAetherDivideSceneBattleCsReq = 4815;
	CmdStartAetherDivideChallengeBattleScRsp = 4843;
	CmdLeaveAetherDivideSceneCsReq = 4830;
	CmdSetAetherDivideLineUpScRsp = 4848;
	CmdAetherDivideTakeChallengeRewardScRsp = 4833;
	CmdSwitchAetherDivideLineUpSlotScRsp = 4806;
	CmdGetAetherDivideInfoScRsp = 4828;
	CmdEquipAetherDividePassiveSkillScRsp = 4817;
	CmdStartAetherDivideStageBattleScRsp = 4818;
	CmdEnterAetherDivideSceneCsReq = 4812;
}

// MBMNOJOGOHJ (4836)
message EnterAetherDivideSceneCsReq {
	uint32 ibccplkogfd = 9;
}

// GKFNNFOPNNE (4895)
message EnterAetherDivideSceneScRsp {
	uint32 retcode = 7;
	uint32 ibccplkogfd = 10;
}

// JKHBPMBEDAI (4884)
message LeaveAetherDivideSceneCsReq {
}

// DAGLKJDEDJI (4827)
message LeaveAetherDivideSceneScRsp {
	uint32 retcode = 5;
}

// PGLJDBNINOP (4867)
message StartAetherDivideSceneBattleCsReq {
	uint32 caster_id = 11;
	uint32 attacked_group_id = 5;
	uint32 skill_index = 2;
	repeated uint32 assist_monster_entity_id_list = 7;
	repeated AssistMonsterEntityInfo assist_monster_entity_info = 8;
}

// INAKMGPOPMN (4828)
message StartAetherDivideSceneBattleScRsp {
	AetherDivideBattleInfo battle_info = 6;
	uint32 retcode = 13;
	uint32 attacked_group_id = 10;
}

// MBCFOCGILJJ (4852)
message StartAetherDivideChallengeBattleCsReq {
	uint32 challenge_id = 11;
	uint32 lineup_index = 13;
}

// ABDOLOFFKBF (4874)
message StartAetherDivideChallengeBattleScRsp {
	uint32 retcode = 15;
	AetherDivideBattleInfo battle_info = 13;
}

message PassiveSkillItem {
	uint32 slot = 13;
	uint32 item_id = 5;
}

message AetherDivideSpiritInfo {
	uint32 aether_avatar_id = 7;
	AmountInfo sp_bar = 8;
	uint32 exp = 9;
	uint32 elbfodanmcp = 3;
	repeated PassiveSkillItem passive_skill = 11;
	uint32 promotion = 1;
}

message AetherDivideLineupInfo {
	repeated uint32 aether_avatar_list = 6;
	uint32 slot = 15;
}

message AetherSkillInfo {
	uint32 num = 15;
	uint32 skill_dress_avatar_id = 4;
	uint32 item_id = 2;
}

// PFLBDMMMMIO (4834)
message GetAetherDivideInfoCsReq {
}

// OOFDMJLDDAA (4843)
message GetAetherDivideInfoScRsp {
	uint32 ajfghjkdmlk = 7;
	repeated AetherDivideSpiritInfo aboocdhapaf = 6;
	uint32 gfimlbecjlc = 13;
	uint32 retcode = 9;
	repeated AetherSkillInfo skill_list = 12;
	uint32 cecnpiokeoh = 3;
	uint32 pebjfclbmgc = 8;
	repeated AetherDivideLineupInfo lineup_list = 4;
	uint32 obhcochafaa = 15;
}

// FNKEKFOGGJO (4846)
message SetAetherDivideLineUpCsReq {
	AetherDivideLineupInfo lineup = 14;
}

// CEKBFJMMGIB (4825)
message SetAetherDivideLineUpScRsp {
	AetherDivideLineupInfo lineup = 9;
	uint32 retcode = 5;
}

// DMGIGDEGAMK (4896)
message EquipAetherDividePassiveSkillCsReq {
	uint32 slot = 4;
	uint32 item_id = 6;
	uint32 aether_avatar_id = 9;
}

// LIPMNGACPEE (4805)
message EquipAetherDividePassiveSkillScRsp {
	AetherDivideSpiritInfo aether_info = 7;
	AetherSkillInfo aether_skill_info = 4;
	uint32 retcode = 15;
}

// BODHBDMEAIL (4875)
message ClearAetherDividePassiveSkillCsReq {
	uint32 aether_avatar_id = 8;
	uint32 slot = 13;
}

// PEFBNPFEDFH (4819)
message ClearAetherDividePassiveSkillScRsp {
	uint32 retcode = 11;
	AetherDivideSpiritInfo aether_info = 15;
	AetherSkillInfo aether_skill_info = 10;
}

// NCFDNDEIMCF (4859)
message AetherDivideSpiritExpUpCsReq {
	uint32 aether_avatar_id = 7;
	uint32 ipjlcfammdb = 13;
	uint32 gfimlbecjlc = 5;
}

// DIFPFDFJBPE (4812)
message AetherDivideSpiritExpUpScRsp {
	uint32 gfimlbecjlc = 14;
	uint32 retcode = 11;
	AetherDivideSpiritInfo aether_info = 4;
}

// KMBKCMMJMPD (4826)
message SwitchAetherDivideLineUpSlotCsReq {
	uint32 lineup_index = 9;
}

// IHFPCPDOEAE (4807)
message SwitchAetherDivideLineUpSlotScRsp {
	uint32 retcode = 14;
	uint32 lineup_index = 13;
}

// FFGCMJCOCFP (4853)
message StartAetherDivideStageBattleCsReq {
	uint32 event_id = 3;
}

// EMHANAFCHIC (4890)
message StartAetherDivideStageBattleScRsp {
	uint32 retcode = 11;
	AetherDivideBattleInfo battle_info = 12;
}

// HBGNJMOHKPL (4876)
message AetherDivideLineupScNotify {
	AetherDivideLineupInfo lineup = 12;
}

// CCNAOPOBCHF (4878)
message AetherDivideSpiritInfoScNotify {
	uint32 gfimlbecjlc = 14;
	AetherDivideSpiritInfo aether_info = 5;
	repeated AetherDivideSpiritInfo pnnmohfkibn = 7;
}

// OHKDGBEGBMG (4829)
message GetAetherDivideChallengeInfoCsReq {
}

// AAAIOBHPHHG (4850)
message GetAetherDivideChallengeInfoScRsp {
	uint32 bfibkfebcna = 13;
	repeated uint32 cmmmjekgojp = 8;
	repeated uint32 ciflenfecfc = 4;
	uint32 retcode = 9;
}

// CDNFANBIDFH (4848)
message AetherDivideFinishChallengeScNotify {
	uint32 challenge_id = 6;
}

// FCLGAALAINA (4888)
message AetherDivideTainerInfoScNotify {
	uint32 obhcochafaa = 4;
}

// MBEBNDDEFKI (4858)
message AetherDivideSkillItemScNotify {
	uint32 item_id = 6;
	uint32 num = 4;
}

// OJNCGKAMHCG (4835)
message AetherDivideRefreshEndlessCsReq {
}

// JEOPLOPCIOG (4873)
message AetherDivideRefreshEndlessScRsp {
	uint32 retcode = 4;
	uint32 pebjfclbmgc = 3;
}

// LEJAFIKNBID (4817)
message AetherDivideRefreshEndlessScNotify {
	uint32 pebjfclbmgc = 11;
}

// MNOHCJOBNDN (4813)
message AetherDivideTakeChallengeRewardCsReq {
	uint32 challenge_id = 6;
}

// FJAFFLMLNAF (4821)
message AetherDivideTakeChallengeRewardScRsp {
	ItemList reward = 1;
	uint32 retcode = 10;
	uint32 challenge_id = 6;
}

// OPHHPCJIIEM
enum CmdAlleyType {
	CmdAlleyTypeNone = 0;
	CmdGetAlleyInfoScRsp = 4795;
	CmdAlleyShipUsedCountScNotify = 4776;
	CmdLogisticsScoreRewardSyncInfoScNotify = 4708;
	CmdAlleyTakeEventRewardScRsp = 4713;
	CmdGetSaveLogisticsMapCsReq = 4758;
	CmdGetSaveLogisticsMapScRsp = 4710;
	CmdStartAlleyEventScRsp = 4774;
	CmdLogisticsInfoScNotify = 4748;
	CmdAlleyPlacingGameCsReq = 4746;
	CmdActivityRaidPlacingGameScRsp = 4737;
	CmdRefreshAlleyOrderScRsp = 4719;
	CmdPrestigeLevelUpCsReq = 4753;
	CmdAlleyShipmentEventEffectsScNotify = 4788;
	CmdAlleyPlacingGameScRsp = 4725;
	CmdAlleyEventEffectNotify = 4793;
	CmdRefreshAlleyOrderCsReq = 4775;
	CmdPrestigeLevelUpScRsp = 4790;
	CmdActivityRaidPlacingGameCsReq = 4718;
	CmdStartAlleyEventCsReq = 4752;
	CmdAlleyGuaranteedFundsCsReq = 4735;
	CmdLogisticsGameCsReq = 4784;
	CmdSaveLogisticsScRsp = 4750;
	CmdAlleyGuaranteedFundsScRsp = 4773;
	CmdTakePrestigeRewardScRsp = 4743;
	CmdAlleyShipUnlockScNotify = 4778;
	CmdGetAlleyInfoCsReq = 4736;
	CmdAlleyFundsScNotify = 4759;
	CmdAlleyOrderChangedScNotify = 4726;
	CmdAlleyShopLevelScNotify = 4712;
	CmdTakePrestigeRewardCsReq = 4734;
	CmdLogisticsDetonateStarSkiffCsReq = 4721;
	CmdAlleyTakeEventRewardCsReq = 4717;
	CmdSaveLogisticsCsReq = 4729;
	CmdLogisticsDetonateStarSkiffScRsp = 4765;
	CmdAlleyEventChangeNotify = 4724;
	CmdLogisticsGameScRsp = 4727;
}

enum GMKEHFLBCHJ {
	LEFT = 0;
	RIGHT = 1;
	UP = 2;
	DOWN = 3;
	LEFT_UP = 4;
	LEFT_DOWN = 5;
	RIGHT_UP = 6;
	RIGHT_DOWN = 7;
}

enum AlleyEventType {
	ALLEY_EVENT_TYPE_NONE = 0;
	ALLEY_MAIN_EVENT = 1;
	ALLEY_CRITICAL_EVENT = 2;
	ALLEY_DAILY_EVENT = 3;
}

enum AlleyEventState {
	ALLEY_STATE_NONE = 0;
	ALLEY_EVENT_DOING = 1;
	ALLEY_EVENT_FINISH = 2;
	ALLEY_EVENT_REWARDED = 3;
}

// JKFLLBPLJAJ (4736)
message GetAlleyInfoCsReq {
}

message PGELHHCIIDP {
	uint32 hohbliidafj = 10;
	uint32 map_id = 2;
}

message NOOEECMCDPC {
	uint32 shop_id = 2;
	uint32 level = 3;
}

message KNKNOKONJJD {
	repeated GFDCMEBGCHI kcohmmblcgh = 11;
	repeated PGELHHCIIDP ciihfigjlbj = 3;
	repeated uint32 deifiemckld = 14;
	repeated LogisticsScore hhdoomjlggc = 5;
}

// JMFKPCBKMIH (4795)
message GetAlleyInfoScRsp {
	KNKNOKONJJD dbpcglolbjb = 14;
	uint32 coin_cost = 15;
	repeated FBMJMHIIODF jpgocegdlol = 1;
	map<uint32, uint32> oamofncmdhj = 11;
	uint32 cbpmpdggjcp = 10;
	OKFBIFCDJHL afinlclfcka = 6;
	repeated uint32 ncophnjnmgl = 13;
	uint32 level = 3;
	uint32 retcode = 2;
	repeated uint32 dbimhgddfgl = 9;
	repeated uint32 dbafeacgkpp = 8;
	MEDPAMLOEMC bmbedghcnkj = 4;
}

message BFGAMHDHELB {
	uint32 jkpbdmddlml = 14;
	uint32 pcmmdjjobin = 7;
}

message NGFBPKJEGPF {
	uint32 goods_id = 13;
	repeated BFGAMHDHELB ppogdknkjkj = 4;
}

message AlleyPlacingShip {
	repeated NGFBPKJEGPF GoodsList = 13;
	uint32 ShipId = 4;
}

// BOLGOGHAEPB (4746)
message AlleyPlacingGameCsReq {
	uint32 kfnmapnilog = 9;
	uint32 hbienmcgonc = 11;
	uint32 lbccmfhgmhc = 7;
	uint32 cifdomcabdb = 13;
	uint32 efpnpkpkcpo = 1;
	uint32 nkcdckmipjm = 10;
	uint32 pipkahifdod = 8;
	AlleyPlacingShip ijinmkbopcb = 14;
	uint32 cost_time = 5;
}

// LJCNNJCJLGH (4725)
message AlleyPlacingGameScRsp {
	uint32 mgcpablikee = 3;
	uint32 retcode = 10;
	uint32 mjeojalilaj = 2;
	uint32 obcpiebbkij = 11;
	uint32 nnalloifkjo = 9;
	uint32 iaigcclpnne = 8;
	uint32 ifolkfampdj = 7;
	uint32 event_id = 4;
}

// JDAKJBPNHNF (4718)
message ActivityRaidPlacingGameCsReq {
	oneof GMPIEKAGKGJ {
		uint32 jmpddbkclhi = 6;
		uint32 lbccmfhgmhc = 7;
	}
	AlleyPlacingShip IJINMKBOPCB = 9;
}

// LBNMFLOPMBL (4737)
message ActivityRaidPlacingGameScRsp {
	oneof GMPIEKAGKGJ {
		uint32 jmpddbkclhi = 3;
		uint32 lbccmfhgmhc = 8;
	}
	uint32 retcode = 14;
}

message OKFBIFCDJHL {
	uint32 edkmjofpfhk = 7;
	bool abedikboelg = 11;
	uint32 necfmnfaffe = 15;
	uint32 pecaimhapdn = 8;
	repeated uint32 bkbonjbgmkb = 5;
	repeated uint32 nieaacecncp = 13;
}

// LIJNKPJEOLB (4726)
message AlleyOrderChangedScNotify {
	OKFBIFCDJHL pbocddmcejb = 14;
}

// INKGKDFAHBB (4778)
message AlleyShipUnlockScNotify {
	uint32 kjfdomeeble = 11;
}

message FMEILAIGNFB {
	uint32 kohjeeamogf = 11;
	repeated uint32 gahnbbfaden = 6;
	uint32 shop_id = 13;
	repeated uint32 oimdmohbkba = 12;
	uint32 hcghpbnmnea = 1;
	repeated uint32 nnkekkfniap = 8;
	uint32 hnakfaekpgj = 10;
}

message GFDCMEBGCHI {
	repeated FMEILAIGNFB fakegaiiiia = 2;
	uint32 map_id = 4;
	uint32 cost_time = 6;
}

message LogisticsScore {
	uint32 MaxScore = 1;
	uint32 MapId = 4;
	uint32 LastMaxScore = 14;
	ItemList Reward = 9;
	uint32 CurScore = 2;
	uint32 LastLevel = 11;
	uint32 UnlockLevel = 10;
}

// ONBJDDPKLFO (4784)
message LogisticsGameCsReq {
	bool jkiknfagbgc = 10;
	repeated GFDCMEBGCHI aikfmpkanea = 14;
}

// BHDKMLDHHAK (4708)
message LogisticsScoreRewardSyncInfoScNotify {
	repeated LogisticsScore hhdoomjlggc = 8;
}

// IHHFGJLMKMG (4727)
message LogisticsGameScRsp {
	uint32 retcode = 8;
	repeated LogisticsScore hhdoomjlggc = 15;
	bool jkiknfagbgc = 6;
	uint32 event_id = 3;
}

message FBMJMHIIODF {
	uint32 lgalficmhho = 12;
	uint32 event_id = 3;
	AlleyEventState state = 1;
}

// PBNMPBECPKM (4752)
message StartAlleyEventCsReq {
	uint32 event_id = 6;
}

// PJEMOLJIIDG (4774)
message StartAlleyEventScRsp {
	uint32 event_id = 10;
	uint32 retcode = 14;
}

// PLHAMFKIDGC (4724)
message AlleyEventChangeNotify {
	uint32 ophmnnhhnei = 12;
	FBMJMHIIODF hoknnhdkmhp = 1;
}

// PHJKOOJFHEE (4793)
message AlleyEventEffectNotify {
	uint32 nagchgbanmp = 11;
}

// GKHLJJAIBCE (4734)
message TakePrestigeRewardCsReq {
	uint32 level = 2;
}

// HDKAHEAKNFD (4743)
message TakePrestigeRewardScRsp {
	uint32 level = 13;
	ItemList reward = 9;
	uint32 retcode = 7;
}

// LKBNCBHIFLB (4753)
message PrestigeLevelUpCsReq {
}

// EEAEICLGFHM (4790)
message PrestigeLevelUpScRsp {
	uint32 level = 4;
	uint32 retcode = 5;
}

// DAIECPMCFKC (4759)
message AlleyFundsScNotify {
	uint32 coin_cost = 2;
}

// PDNEBJCJKMO (4729)
message SaveLogisticsCsReq {
	repeated GFDCMEBGCHI aikfmpkanea = 13;
}

// HAINBIKDNMN (4750)
message SaveLogisticsScRsp {
	repeated GFDCMEBGCHI aikfmpkanea = 2;
	uint32 retcode = 11;
}

// GLGNCBFAAIN (4748)
message LogisticsInfoScNotify {
	KNKNOKONJJD dbpcglolbjb = 2;
}

message MEDPAMLOEMC {
	uint32 fleciglmfdp = 13;
	uint32 kdcjgfanjdg = 2;
	map<uint32, uint32> eldncgealki = 14;
}

// LHJMGHNGKIP (4788)
message AlleyShipmentEventEffectsScNotify {
	MEDPAMLOEMC ldocjaliemg = 9;
}

// MBBLJIIGGNJ (4758)
message GetSaveLogisticsMapCsReq {
}

// JBODBOPJOLO (4710)
message GetSaveLogisticsMapScRsp {
	repeated GFDCMEBGCHI kcohmmblcgh = 10;
	uint32 retcode = 7;
}

// BMLPEMIKJHO (4776)
message AlleyShipUsedCountScNotify {
	map<uint32, uint32> oamofncmdhj = 15;
}

// BGOMHMKLKKH (4735)
message AlleyGuaranteedFundsCsReq {
}

// MIFKDLMPBAA (4773)
message AlleyGuaranteedFundsScRsp {
	uint32 retcode = 12;
	uint32 gfhdankdppc = 7;
}

// EGAIGKLFCGM (4717)
message AlleyTakeEventRewardCsReq {
	uint32 event_id = 15;
}

// NBIOJCLKICB (4713)
message AlleyTakeEventRewardScRsp {
	uint32 retcode = 9;
	ItemList reward = 5;
}

// IFIGALDOKLN (4721)
message LogisticsDetonateStarSkiffCsReq {
}

// GLLDLEOAADH (4765)
message LogisticsDetonateStarSkiffScRsp {
	uint32 retcode = 3;
}

// NAFNLNANJEH
enum CmdArchiveType {
	CmdArchiveTypeNone = 0;
	CmdGetUpdatedArchiveDataCsReq = 2384;
	CmdGetUpdatedArchiveDataScRsp = 2327;
	CmdGetArchiveDataCsReq = 2336;
	CmdGetArchiveDataScRsp = 2395;
}

message RelicList {
	uint32 set_id = 15;
	uint32 type = 8;
}

message MonsterList {
	uint32 monster_id = 9;
	uint32 num = 15;
}

message ArchiveData {
	repeated uint32 edhmchmfhhn = 14;
	repeated uint32 ahcgclklgib = 1;
	repeated MonsterList kill_monster_list = 6;
	repeated RelicList relic_list = 12;
	repeated uint32 fhonfjhlgek = 13;
}

// JNDODDLGPIK (2336)
message GetArchiveDataCsReq {
}

// IGKGJMKOHAE (2395)
message GetArchiveDataScRsp {
	ArchiveData archive_data = 6;
	uint32 retcode = 7;
}

// GIBILPHLLLG (2384)
message GetUpdatedArchiveDataCsReq {
}

// FOGHDMNCPGK (2327)
message GetUpdatedArchiveDataScRsp {
	ArchiveData archive_data = 13;
	uint32 retcode = 5;
}

// FCHLNHJAPPJ
enum CmdAvatarType {
	CmdAvatarTypeNone = 0;
	CmdTakeOffEquipmentScRsp = 343;
	CmdTakeOffAvatarSkinScRsp = 378;
	CmdGetAvatarDataCsReq = 336;
	CmdPromoteAvatarScRsp = 374;
	CmdMarkAvatarCsReq = 350;
	CmdTakeOffRelicCsReq = 319;
	CmdDressAvatarCsReq = 324;
	CmdPromoteAvatarCsReq = 352;
	CmdGrowthTargetAvatarChangedScNotify = 376;
	CmdRankUpAvatarCsReq = 325;
	CmdDressAvatarSkinCsReq = 390;
	CmdTakePromotionRewardScRsp = 353;
	CmdTakeOffRelicScRsp = 326;
	CmdAddAvatarScNotify = 346;
	CmdAddMultiPathAvatarScNotify = 388;
	CmdUnlockSkilltreeScRsp = 328;
	CmdTakeOffAvatarSkinCsReq = 312;
	CmdAvatarExpUpScRsp = 327;
	CmdDressAvatarSkinScRsp = 359;
	CmdDressRelicAvatarCsReq = 305;
	CmdUnlockAvatarSkinScNotify = 329;
	CmdDressAvatarScRsp = 393;
	CmdSetGrowthTargetAvatarCsReq = 358;
	CmdAvatarExpUpCsReq = 384;
	CmdDressRelicAvatarScRsp = 375;
	CmdTakePromotionRewardCsReq = 307;
	CmdMarkAvatarScRsp = 348;
	CmdTakeOffEquipmentCsReq = 334;
	CmdUnlockSkilltreeCsReq = 367;
	CmdGetAvatarDataScRsp = 395;
	CmdRankUpAvatarScRsp = 396;
	CmdSetGrowthTargetAvatarScRsp = 310;
}

enum KIAJAHEJHEA {
	GROWTH_TARGET_FUNCTION_TYPE_INCLUDE_SKILLTREE_ON_DEMAND = 0;
}

enum AddAvatarSrcState {
	ADD_AVATAR_SRC_NONE = 0;
	ADD_AVATAR_SRC_GACHA = 1;
	ADD_AVATAR_SRC_ROGUE = 2;
}

// EGAFMMCGFMA (336)
message GetAvatarDataCsReq {
	repeated uint32 base_avatar_id_list = 4;
	bool is_get_all = 3;
}

message EquipRelic {
	uint32 type = 9;
	uint32 relic_unique_id = 2;
}

message Avatar {
	uint64 first_met_time_stamp = 7;
	repeated EquipRelic equip_relic_list = 8;
	uint32 exp = 1;
	uint32 equipment_unique_id = 12;
	uint32 rank = 15;
	uint32 level = 2;
	repeated AvatarSkillTree skilltree_list = 4;
	bool is_marked = 5;
	repeated uint32 has_taken_reward_level_list = 11;
	uint32 dressed_skin_id = 13;
	uint32 promotion = 14;
	uint32 base_avatar_id = 9;
}

// FNBHODIONNN (395)
message GetAvatarDataScRsp {
	uint32 pkmghnblipb = 15;
	bool is_get_all = 5;
	uint32 retcode = 6;
	repeated uint32 oicjbbphanb = 10;
	repeated Avatar avatar_list = 4;
}

// OMIEBPNDFBC (384)
message AvatarExpUpCsReq {
	uint32 base_avatar_id = 2;
	ItemCostData item_cost = 10;
}

// KJIBPEBFOMO (327)
message AvatarExpUpScRsp {
	repeated PileItem return_item_list = 2;
	uint32 retcode = 15;
}

// LJDKMKENECK (367)
message UnlockSkilltreeCsReq {
	uint32 level = 7;
	repeated ItemCost item_list = 14;
	uint32 point_id = 6;
}

// HOJFLBKBGLE (328)
message UnlockSkilltreeScRsp {
	uint32 level = 12;
	uint32 point_id = 14;
	uint32 retcode = 6;
}

// DECPLLJKFGO (352)
message PromoteAvatarCsReq {
	uint32 base_avatar_id = 2;
	repeated ItemCost item_list = 10;
}

// ONMFNOAFAJB (374)
message PromoteAvatarScRsp {
	uint32 retcode = 10;
}

// CKBNGMMBBCN (324)
message DressAvatarCsReq {
	uint32 equip_avatar_id = 1;
	uint32 equipment_unique_id = 3;
}

// DEPKJLPDPHG (393)
message DressAvatarScRsp {
	uint32 retcode = 7;
}

// IAFNPFJBKPJ (334)
message TakeOffEquipmentCsReq {
	uint32 equip_avatar_id = 15;
}

// DNCHKFKJGPM (343)
message TakeOffEquipmentScRsp {
	uint32 retcode = 5;
}

// EOHMPKFOPID (346)
message AddAvatarScNotify {
	uint32 base_avatar_id = 11;
	ItemList reward = 5;
	AddAvatarSrcState src = 12;
	bool is_new = 1;
}

// ECFIBBFDBPH (388)
message AddMultiPathAvatarScNotify {
	uint32 avatar_id = 8;
	bool is_new = 7;
	ItemList reward = 9;
}

// GNJHGKLKPEF (325)
message RankUpAvatarCsReq {
	ItemCostData cost_data = 5;
	uint32 avatar_id = 7;
	uint32 rank = 11;
}

// IDOJDCNBKEE (396)
message RankUpAvatarScRsp {
	uint32 retcode = 8;
}

message DressRelicParam {
	uint32 relic_slot = 11;
	uint32 relic_unique_id = 9;
}

// LOKAPJMDGOG (305)
message DressRelicAvatarCsReq {
	uint32 equip_avatar_id = 2;
	repeated DressRelicParam param_list = 5;
}

// CBHEONAKPIM (375)
message DressRelicAvatarScRsp {
	uint32 retcode = 3;
}

// OCOADIHLPIN (319)
message TakeOffRelicCsReq {
	uint32 equip_avatar_id = 15;
	repeated uint32 relic_type_list = 4;
}

// FGDDKIIDBMG (326)
message TakeOffRelicScRsp {
	uint32 retcode = 12;
}

// EJIEJDOEJJI (307)
message TakePromotionRewardCsReq {
	uint32 promotion = 10;
	uint32 base_avatar_id = 5;
}

// IAJGJJOKMBH (353)
message TakePromotionRewardScRsp {
	uint32 retcode = 7;
	ItemList reward_list = 15;
}

// BJFMNLBABOC (390)
message DressAvatarSkinCsReq {
	uint32 skin_id = 8;
	uint32 avatar_id = 15;
}

// LFEJKKACDJJ (359)
message DressAvatarSkinScRsp {
	uint32 retcode = 1;
}

// PKFGIKPOMPH (312)
message TakeOffAvatarSkinCsReq {
	uint32 avatar_id = 14;
}

// NOCNCMGAJIN (378)
message TakeOffAvatarSkinScRsp {
	uint32 retcode = 15;
}

// JFIOAHFAMCL (329)
message UnlockAvatarSkinScNotify {
	uint32 skin_id = 10;
}

// IEBIDEFJDDL (350)
message MarkAvatarCsReq {
	uint32 avatar_id = 6;
	bool is_marked = 4;
}

// HNMKPPOPEKM (348)
message MarkAvatarScRsp {
	uint32 avatar_id = 12;
	uint32 retcode = 13;
	bool is_marked = 1;
}

// DNIHHPCANNG (358)
message SetGrowthTargetAvatarCsReq {
	uint32 avatar_id = 2;
}

// JHHKBKBPHIC (310)
message SetGrowthTargetAvatarScRsp {
	uint32 retcode = 9;
	uint32 bljfjnplkhi = 13;
	uint32 pkmghnblipb = 5;
}

// JAELLKBJKJI (376)
message GrowthTargetAvatarChangedScNotify {
	uint32 pkmghnblipb = 9;
}

// LFKAJPHFPHM
enum CmdBattleType {
	CmdBattleTypeNone = 0;
	CmdQuitBattleScNotify = 124;
	CmdGetCurBattleInfoCsReq = 167;
	CmdPVEBattleResultScRsp = 195;
	CmdPVEBattleResultCsReq = 136;
	CmdSyncClientResVersionCsReq = 152;
	CmdQuitBattleCsReq = 184;
	CmdServerSimulateBattleFinishScNotify = 143;
	CmdQuitBattleScRsp = 127;
	CmdBattleLogReportScRsp = 134;
	CmdBattleLogReportCsReq = 193;
	CmdReBattleAfterBattleLoseCsNotify = 146;
	CmdSyncClientResVersionScRsp = 174;
	CmdGetCurBattleInfoScRsp = 128;
	CmdRebattleByClientCsNotify = 125;
}

// DNKDEFFMJNL (136)
message PVEBattleResultCsReq {
	bool is_ai_consider_ultra_skill = 1;
	bool hggiodcbeab = 11;
	uint32 cost_time = 5;
	uint32 client_res_version = 3;
	BattleStatistics stt = 14;
	uint32 stage_id = 6;
	string debug_extra_info = 7;
	repeated BattleOp op_list = 9;
	map<string, uint32> kbahkphagjo = 8;
	uint32 client_version = 4;
	uint32 dfembeanppf = 10;
	bytes turn_snapshot_hash = 15;
	uint32 battle_id = 2;
	BattleEndStatus end_status = 13;
	bool is_auto_fight = 12;
}

// MEGOKLANKFO (195)
message PVEBattleResultScRsp {
	string clebbkoiohj = 15;
	uint32 retcode = 14;
	BattleEndStatus end_status = 1;
	uint32 event_id = 10;
	bool mfjljkcmiol = 4;
	uint32 gcmfmldnldm = 9;
	uint32 mismatch_turn_count = 3;
	uint32 battle_id = 5;
	ItemList ieinoefbllp = 8;
	uint32 stage_id = 6;
	repeated BattleAvatar battle_avatar_list = 7;
	string lfhbhkhmned = 12;
	ItemList ifjljadpfdg = 1392;
	uint32 njghcpijdgi = 13;
	ItemList cllokodkpap = 2;
	ItemList eebbmnlacmg = 11;
}

// HCOGHKCBCGJ (184)
message QuitBattleCsReq {
	RebattleType rebattle_type = 15;
	BattleStatistics stt = 7;
}

// LIOABJJEGAL (127)
message QuitBattleScRsp {
	uint32 retcode = 12;
}

// NDHHCAJBLEL (167)
message GetCurBattleInfoCsReq {
}

// JPDJAGLHCOA (128)
message GetCurBattleInfoScRsp {
	uint32 oejahhkbkng = 1;
	AetherDivideBattleInfo aether_battle_info = 7;
	SceneBattleInfo battle_info = 6;
	BattleEndStatus last_end_status = 9;
	uint32 retcode = 8;
}

// INHCALIAKMO (152)
message SyncClientResVersionCsReq {
	uint32 client_res_version = 13;
}

// MMPFKFGCDMO (174)
message SyncClientResVersionScRsp {
	uint32 retcode = 11;
	uint32 client_res_version = 14;
}

// GLMADOFIOJO (124)
message QuitBattleScNotify {
}

// FJAMDDBCAGM (193)
message BattleLogReportCsReq {
}

// GKHKOHHCDDC (134)
message BattleLogReportScRsp {
	uint32 retcode = 2;
	bool is_battle_log_report = 10;
}

// ALCALNFHOKH (143)
message ServerSimulateBattleFinishScNotify {
}

// EDOBKGFNHLN (146)
message ReBattleAfterBattleLoseCsNotify {
	bool ejgpcipheed = 6;
}

// FOJMDJNGEOM (125)
message RebattleByClientCsNotify {
	RebattleType rebattle_type = 7;
	BattleStatistics stt = 1;
}

// MMPBIENFEPH
enum CmdBattleCollegeType {
	CmdBattleCollegeTypeNone = 0;
	CmdBattleCollegeDataChangeScNotify = 5784;
	CmdStartBattleCollegeCsReq = 5727;
	CmdGetBattleCollegeDataCsReq = 5736;
	CmdGetBattleCollegeDataScRsp = 5795;
	CmdStartBattleCollegeScRsp = 5767;
}

// PMJBDEONFIP (5736)
message GetBattleCollegeDataCsReq {
}

// KGLDKBECLBN (5795)
message GetBattleCollegeDataScRsp {
	uint32 retcode = 13;
	repeated uint32 finished_college_id_list = 11;
	uint32 lbdmholpjke = 4;
}

// IHOGOBMMOJC (5784)
message BattleCollegeDataChangeScNotify {
	ItemList reward = 13;
	uint32 lbdmholpjke = 3;
	repeated uint32 finished_college_id_list = 12;
}

// ALGLPMFCNKD (5727)
message StartBattleCollegeCsReq {
	uint32 id = 14;
}

// LGKHCGHIMDA (5767)
message StartBattleCollegeScRsp {
	uint32 id = 1;
	SceneBattleInfo battle_info = 14;
	uint32 retcode = 7;
}

// JJDFBHFHKJG
enum CmdBattlePassType {
	CmdBattlePassTypeNone = 0;
	CmdBuyBpLevelCsReq = 3028;
	CmdBuyBpLevelScRsp = 3052;
	CmdTakeAllRewardScRsp = 3024;
	CmdBattlePassInfoNotify = 3036;
	CmdTakeBpRewardCsReq = 3027;
	CmdTakeBpRewardScRsp = 3067;
	CmdTakeAllRewardCsReq = 3074;
}

enum BpTierType {
	BP_TIER_TYPE_NONE = 0;
	BP_TIER_TYPE_FREE = 1;
	BP_TIER_TYPE_PREMIUM_1 = 2;
	BP_TIER_TYPE_PREMIUM_2 = 3;
}

enum BpRewardType {
	BP_REWARAD_TYPE_NONE = 0;
	BP_REWARAD_TYPE_FREE = 1;
	BP_REWARAD_TYPE_PREMIUM_1 = 2;
	BP_REWARAD_TYPE_PREMIUM_2 = 3;
	BP_REWARAD_TYPE_PREMIUM_OPTIONAL = 4;
}

// MBMBGEPFGHD (3036)
message BattlePassInfoNotify {
	uint64 kcdlogocbia = 13;
	uint64 ieblheiebcp = 15;
	uint32 exp = 6;
	uint32 ceoekkklneh = 12;
	uint64 koidcifmogg = 3;
	uint64 ghmfioclbmb = 10;
	BpTierType nolcaklmpeg = 14;
	uint64 cpohgjlgcph = 1;
	uint32 iiipcopgjhj = 7;
	uint32 level = 4;
	uint64 dnbmkbmapce = 2;
	uint64 pkagdaldbik = 5;
	uint64 lfgkipccmhm = 8;
}

// GICIAIHLJKM (3027)
message TakeBpRewardCsReq {
	uint32 optional_reward_id = 14;
	uint32 level = 7;
	BpRewardType type = 3;
}

// EKJBIENLPCA (3067)
message TakeBpRewardScRsp {
	uint32 retcode = 13;
	ItemList reward = 15;
}

// MBJHHBODFPN (3028)
message BuyBpLevelCsReq {
	uint32 llileghkigk = 15;
}

// GGFNLDFIJDI (3052)
message BuyBpLevelScRsp {
	uint32 retcode = 14;
}

message OptionalReward {
	uint32 Level = 7;
	uint32 OptionalRewardId = 1;
}

// JPACMOOCPKH (3074)
message TakeAllRewardCsReq {
	repeated OptionalReward kdhakpndegi = 6;
}

// GOGCODENOND (3024)
message TakeAllRewardScRsp {
	ItemList reward = 12;
	uint32 retcode = 13;
}

// JIEJGELPGFL
enum CmdBoxingClubType {
	CmdBoxingClubTypeNone = 0;
	CmdSetBoxingClubResonanceLineupScRsp = 4225;
	CmdBoxingClubRewardScNotify = 4224;
	CmdGiveUpBoxingClubChallengeCsReq = 4252;
	CmdMatchBoxingClubOpponentScRsp = 4227;
	CmdSetBoxingClubResonanceLineupCsReq = 4246;
	CmdChooseBoxingClubStageOptionalBuffScRsp = 4205;
	CmdBoxingClubChallengeUpdateScNotify = 4293;
	CmdChooseBoxingClubStageOptionalBuffCsReq = 4296;
	CmdChooseBoxingClubResonanceCsReq = 4234;
	CmdMatchBoxingClubOpponentCsReq = 4284;
	CmdStartBoxingClubBattleScRsp = 4228;
	CmdGiveUpBoxingClubChallengeScRsp = 4274;
	CmdChooseBoxingClubResonanceScRsp = 4243;
	CmdGetBoxingClubInfoScRsp = 4295;
	CmdStartBoxingClubBattleCsReq = 4267;
	CmdGetBoxingClubInfoCsReq = 4236;
}

message PAHLIMCJBEB {
	AvatarType avatar_type = 5;
	uint32 avatar_id = 15;
}

message DKOCAAOHIBK {
	uint32 pddfkaelhmp = 13;
	uint32 challenge_id = 1;
	uint32 biidjgdiejd = 12;
	repeated uint32 avatar_list = 9;
	uint32 fehjibildmm = 15;
	repeated uint32 gkfibaeohem = 7;
	bool niodmidciim = 8;
	uint32 ifefgdnfkno = 5;
	uint32 fjdmbjkdcki = 4;
	repeated PAHLIMCJBEB liiamdgkpaf = 6;
}

// NNGKPEPCDHB (4236)
message GetBoxingClubInfoCsReq {
}

// IBEMGGMAPAP (4295)
message GetBoxingClubInfoScRsp {
	repeated DKOCAAOHIBK challenge_list = 9;
	uint32 retcode = 6;
}

message NJMGKBHDGBD {
	uint32 avatar_id = 1;
	AvatarType avatar_type = 2;
}

// GBOHLOLOFBD (4284)
message MatchBoxingClubOpponentCsReq {
	repeated uint32 avatar_list = 6;
	repeated NJMGKBHDGBD liiamdgkpaf = 8;
	uint32 challenge_id = 12;
}

// GFKGLOONIBI (4227)
message MatchBoxingClubOpponentScRsp {
	DKOCAAOHIBK challenge = 11;
	uint32 retcode = 2;
}

// MCGAODMNFII (4234)
message ChooseBoxingClubResonanceCsReq {
	uint32 challenge_id = 8;
	uint32 ifefgdnfkno = 3;
}

// KKKOHOPHBFB (4243)
message ChooseBoxingClubResonanceScRsp {
	DKOCAAOHIBK challenge = 14;
	uint32 retcode = 15;
}

// GMHBPDKBFEB (4246)
message SetBoxingClubResonanceLineupCsReq {
	repeated NJMGKBHDGBD liiamdgkpaf = 14;
	uint32 challenge_id = 1;
}

// GJAPJEGAOIF (4225)
message SetBoxingClubResonanceLineupScRsp {
	uint32 retcode = 8;
	DKOCAAOHIBK challenge = 12;
}

// FMOHNOOJMDG (4296)
message ChooseBoxingClubStageOptionalBuffCsReq {
	uint32 challenge_id = 2;
	uint32 mmodfbbcmcl = 4;
}

// LJCOIOOKAPB (4205)
message ChooseBoxingClubStageOptionalBuffScRsp {
	uint32 retcode = 8;
	DKOCAAOHIBK challenge = 12;
}

// EKABNIBMDHG (4267)
message StartBoxingClubBattleCsReq {
	uint32 challenge_id = 8;
}

// ABKHLOEHPBO (4228)
message StartBoxingClubBattleScRsp {
	uint32 challenge_id = 9;
	SceneBattleInfo battle_info = 3;
	uint32 retcode = 15;
}

// JJEJLJCKLNE (4252)
message GiveUpBoxingClubChallengeCsReq {
	bool lnfbmlncehm = 4;
	uint32 challenge_id = 5;
}

// JFKLHJFJJGO (4274)
message GiveUpBoxingClubChallengeScRsp {
	DKOCAAOHIBK challenge = 8;
	uint32 retcode = 7;
}

// CDIEOAEEPPD (4224)
message BoxingClubRewardScNotify {
	uint32 biidjgdiejd = 4;
	uint32 challenge_id = 15;
	ItemList reward = 2;
	bool is_win = 3;
}

// PJAOOCFJDHD (4293)
message BoxingClubChallengeUpdateScNotify {
	DKOCAAOHIBK challenge = 14;
}

// KBILPNDAKLP
enum CmdChallengeType {
	CmdChallengeTypeNone = 0;
	CmdGetCurChallengeScRsp = 1734;
	CmdStartChallengeCsReq = 1784;
	CmdLeaveChallengeScRsp = 1728;
	CmdChallengeSettleNotify = 1752;
	CmdStartChallengeScRsp = 1727;
	CmdRestartChallengePhaseCsReq = 1790;
	CmdGetCurChallengeCsReq = 1793;
	CmdGetChallengeGroupStatisticsScRsp = 1719;
	CmdTakeChallengeRewardCsReq = 1796;
	CmdChallengeBossPhaseSettleNotify = 1729;
	CmdStartPartialChallengeScRsp = 1707;
	CmdEnterChallengeNextPhaseCsReq = 1712;
	CmdEnterChallengeNextPhaseScRsp = 1778;
	CmdStartPartialChallengeCsReq = 1726;
	CmdGetChallengeScRsp = 1795;
	CmdChallengeLineupNotify = 1743;
	CmdTakeChallengeRewardScRsp = 1705;
	CmdGetChallengeGroupStatisticsCsReq = 1775;
	CmdRestartChallengePhaseScRsp = 1759;
	CmdLeaveChallengeCsReq = 1767;
	CmdGetChallengeCsReq = 1736;
}

enum ChallengeStatus {
	CHALLENGE_UNKNOWN = 0;
	CHALLENGE_DOING = 1;
	CHALLENGE_FINISH = 2;
	CHALLENGE_FAILED = 3;
}

message Challenge {
	uint32 score_id = 7;
	bool bgfekhfmeih = 12;
	uint32 challenge_id = 3;
	ChallengeExtInfo ext_info = 11;
	uint32 score_two = 2;
	uint32 record_id = 1;
	uint32 taken_reward = 6;
	uint32 star = 13;
}

message ChallengeGroup {
	uint64 taken_stars_count_reward = 2;
	uint32 group_id = 1;
}

message EALBGFMGCEG {
	uint32 level = 8;
	uint32 reward_display_type = 10;
}

// MKMMCBMKLBC (1736)
message GetChallengeCsReq {
}

// HNNLBGFFGCB (1795)
message GetChallengeScRsp {
	uint32 nfdjgajbmdo = 10;
	repeated Challenge challenge_list = 15;
	uint32 retcode = 3;
	repeated EALBGFMGCEG caolnaiijck = 12;
	repeated ChallengeGroup challenge_group_list = 5;
}

message StartChallengeStoryBuffInfo {
	uint32 buff_one = 1;
	uint32 buff_two = 4;
}

message StartChallengeBossBuffInfo {
	uint32 buff_one = 3;
	uint32 buff_two = 14;
}

message StartChallengeInfo {
  StartChallengeStoryBuffInfo story_buff_info = 3;
  StartChallengeBossBuffInfo boss_buff_info = 12;
}

// DGDHBDFODAG (1784)
message StartChallengeCsReq {
	StartChallengeInfo ext_info = 15;
	uint32 challenge_id = 1;
	repeated uint32 first_half_lineup = 6;
	repeated uint32 second_half_lineup = 11;
}

// INFDFJBHMND (1727)
message StartChallengeScRsp {
	uint32 retcode = 7;
	repeated LineupInfo lineup_list = 1;
	ChallengeInfo challenge_info = 12;
	ChallengeExtInfo ext_info = 2;
	SceneInfo scene = 8;
}

// PMAGKCBJAJK (1726)
message StartPartialChallengeCsReq {
	uint32 buff_id = 10;
	uint32 challenge_id = 4;
	bool is_first_half = 14;
}

// GNMFHDJAHEG (1707)
message StartPartialChallengeScRsp {
	ChallengeInfo challenge_info = 8;
	SceneInfo scene = 13;
	uint32 retcode = 10;
	LineupInfo lineup = 9;
}

// NOENGBJDELE (1767)
message LeaveChallengeCsReq {
}

// LOBKJIFKDBL (1728)
message LeaveChallengeScRsp {
	uint32 retcode = 2;
}

// GIKNBNHCAPO (1752)
message ChallengeSettleNotify {
	uint32 nfdjgajbmdo = 4;
	EALBGFMGCEG pcnophbpgjk = 14;
	ChallengeInfo challenge_info = 12;
	uint32 score_two = 15;
	uint32 star = 1;
	repeated uint32 npjgdnmiblp = 8;
	ItemList reward = 10;
	uint32 challenge_id = 7;
	uint32 challenge_score = 9;
	bool is_win = 2;
}

message KillMonster {
	uint32 monster_id = 4;
	uint32 kill_num = 8;
}

message ChallengeStoryBuffInfo {
	repeated uint32 buff_list = 2;
}

message ChallengeBossBuffInfo {
	repeated uint32 buff_list = 14;
	uint32 boss_buff_id = 1;
}

message ChallengeBuffInfo {
  ChallengeStoryBuffInfo story_buff_list = 1;
  ChallengeBossBuffInfo boss_buff_list = 15;
}

message ChallengeInfo {
	ChallengeStatus status = 8;
	repeated KillMonster kill_monster_list = 1;
	uint32 score_two = 15;
	uint32 challenge_id = 11;
	ExtraLineupType extra_lineup_type = 14;
	uint32 round_count = 3;
	uint32 dead_avatar_num = 4;
	uint32 score = 12;
	ChallengeBuffInfo ext_buff_info = 7;
}

// DAEEENCLKHC (1793)
message GetCurChallengeCsReq {
}

// FHMFLDHADPB (1734)
message GetCurChallengeScRsp {
	uint32 retcode = 9;
	repeated LineupInfo lineup_list = 4;
	ChallengeInfo challenge_info = 2;
}

// APODBICDKOC (1743)
message ChallengeLineupNotify {
	ExtraLineupType extra_lineup_type = 4;
}

// DNLJKIBHOEI (1796)
message TakeChallengeRewardCsReq {
	uint32 group_id = 14;
}

// GAOEIJAJOKP (1705)
message TakeChallengeRewardScRsp {
	uint32 retcode = 13;
	uint32 group_id = 3;
	repeated TakenChallengeRewardInfo taken_reward_list = 10;
}

message TakenChallengeRewardInfo {
	ItemList reward = 8;
	uint32 star_count = 12;
}

message ChallengeStatistics {
	ChallengeStageTertinggi stage_tertinggi = 13;
	uint32 record_id = 7;
}

message ChallengeStoryStatistics {
	ChallengeStoryStageTertinggi stage_tertinggi = 3;
	uint32 record_id = 13;
}

message ChallengeBossStatistics {
	ChallengeBossStageTertinggi stage_tertinggi = 1;
	uint32 record_id = 15;
}

message ChallengeStageTertinggi {
	uint32 level = 1;
	uint32 njldipkclbp = 5;
	repeated ChallengeLineupList lineup_list = 4;
	uint32 round_count = 10;
}

message ChallengeStoryStageTertinggi {
	uint32 buff_one = 11;
	repeated ChallengeLineupList lineup_list = 12;
	uint32 score_id = 2;
	uint32 level = 9;
	uint32 njldipkclbp = 14;
	uint32 buff_two = 4;
}

message ChallengeBossStageTertinggi {
	uint32 score_id = 9;
	repeated ChallengeLineupList lineup_list = 1;
	uint32 buff_two = 11;
	uint32 buff_one = 8;
	uint32 njldipkclbp = 6;
	uint32 level = 3;
}

message ChallengeLineupList {
	repeated ChallengeAvatarInfo avatar_list = 4;
}

message ChallengeAvatarInfo {
	uint32 index = 6;
	uint32 id = 9;
	AvatarType avatar_type = 2;
	uint32 level = 14;
}

// OKJNDDKLNLK (1775)
message GetChallengeGroupStatisticsCsReq {
	uint32 group_id = 13;
}

// LENOIBCPJHE (1719)
message GetChallengeGroupStatisticsScRsp {
	oneof challenge_stt_case {
		ChallengeStatistics challenge_default = 12;
		ChallengeStoryStatistics challenge_story = 1;
		ChallengeBossStatistics challenge_boss = 7;
	}
	uint32 group_id = 10;
	uint32 retcode = 8;
}

message ChallengeBossSingleNodeInfo {
	uint32 buff_id = 2;
	bool is_win = 1;
	bool pekpichopml = 11;
	uint32 max_score = 10;
}

message ChallengeBossEquipmentInfo {
	uint32 rank = 15;
	uint32 promotion = 3;
	uint32 unique_id = 5;
	uint32 tid = 11;
	uint32 level = 9;
}

message ChallengeBossRelicInfo {
	uint32 tid = 15;
	uint32 level = 4;
	uint32 unique_id = 14;
	repeated RelicAffix sub_affix_list = 12;
	uint32 main_affix_id = 8;
}

message ChallengeBossAvatarRelicInfo {
	map<uint32, ChallengeBossRelicInfo> avatar_relic_slot_map = 3;
}

message ChallengeBossInfo {
	ChallengeBossSingleNodeInfo first_node = 2;
	ChallengeBossSingleNodeInfo second_node = 14;
	repeated uint32 second_half_lineup = 12;
	repeated uint32 first_half_lineup = 8;
	map<uint32, ChallengeBossEquipmentInfo> challenge_avatar_equipment_map = 4;
	map<uint32, ChallengeBossAvatarRelicInfo> kfokoccaejc = 10;
	bool njkcjbloibk = 7;
}

message ChallengeExtInfo {
	oneof info_case {
		ChallengeBossInfo boss_info = 12;
	}
}

// DNJCLCLIHBP (1790)
message RestartChallengePhaseCsReq {
}

// EHFGGJMPHHK (1759)
message RestartChallengePhaseScRsp {
	uint32 retcode = 15;
	SceneInfo scene = 13;
}

// AAFGBPIPJFB (1712)
message EnterChallengeNextPhaseCsReq {
}

// ODEMCMGLDBN (1778)
message EnterChallengeNextPhaseScRsp {
	SceneInfo scene = 10;
	uint32 retcode = 11;
}

// FMIMCFOHNLO (1729)
message ChallengeBossPhaseSettleNotify {
	uint32 challenge_score = 12;
	uint32 phase = 10;
	bool is_reward = 6;  //?
	uint32 llgaldinkop = 1;
	bool is_remaining_action = 14; //?
	uint32 star = 8;
	uint32 challenge_id = 5;
	repeated BattleTarget battle_target_list = 11;
	uint32 score_two = 7;
	bool is_win = 4;
}

// GECFEADPKPM
enum CmdChatType {
	CmdChatTypeNone = 0;
	CmdGetChatEmojiListCsReq = 3924;
	CmdRevcMsgScNotify = 3984;
	CmdMarkChatEmojiScRsp = 3943;
	CmdGetLoginChatInfoCsReq = 3996;
	CmdBatchMarkChatEmojiScRsp = 3925;
	CmdGetPrivateChatHistoryScRsp = 3928;
	CmdMarkChatEmojiCsReq = 3934;
	CmdSendMsgScRsp = 3995;
	CmdGetPrivateChatHistoryCsReq = 3967;
	CmdSendMsgCsReq = 3936;
	CmdBatchMarkChatEmojiCsReq = 3946;
	CmdGetChatFriendHistoryCsReq = 3952;
	CmdPrivateMsgOfflineUsersScNotify = 3927;
	CmdGetChatEmojiListScRsp = 3993;
	CmdGetLoginChatInfoScRsp = 3905;
	CmdGetChatFriendHistoryScRsp = 3974;
}

// JPHGMIGJGPO (3936)
message SendMsgCsReq {
	ChatType chat_type = 13;
	MsgType message_type = 6;
	uint32 extra_id = 10;
	CDGPKIJBFDK lekpnlapced = 2;
	repeated uint32 target_list = 8;
	string message_text = 11;
}

// NFJBEBOKGLO (3995)
message SendMsgScRsp {
	uint32 retcode = 2;
	uint64 end_time = 1;
}

message ChatMessageData {
	string content = 15;
	MsgType message_type = 10;
	uint32 extra_id = 14;
	uint32 sender_uid = 13;
	CDGPKIJBFDK lekpnlapced = 12;
	uint64 timestamp = 6;
}

// DIFKGIOIJFF (3984)
message RevcMsgScNotify {
	uint32 to_uid = 12; //?
	CDGPKIJBFDK lekpnlapced = 11;
	uint32 extra_id = 15;
	MsgType message_type = 8;
	ChatType chat_type = 2;
	string message_text = 6;
	uint32 sender_uid = 10; //?
}

// PPIGGEKCEMF (3927)
message PrivateMsgOfflineUsersScNotify {
	repeated uint32 contact_id_list = 11;
}

// HBFFEIHAHGC (3967)
message GetPrivateChatHistoryCsReq {
	uint32 contact_side = 2;
	uint32 target_side = 9;
}

// GGHCHPAIEPC (3928)
message GetPrivateChatHistoryScRsp {
	uint32 contact_id = 9;
	uint32 retcode = 12;
	repeated ChatMessageData chat_message_list = 10;
	uint32 target_side = 2;
}

message FriendHistoryInfo {
	int64 last_send_time = 3;
	uint32 contact_side = 7;
}

// BOHDPFLOGKJ (3952)
message GetChatFriendHistoryCsReq {
}

// BLKCIJOCAOJ (3974)
message GetChatFriendHistoryScRsp {
	repeated FriendHistoryInfo friend_history_info = 9;
	uint32 retcode = 6;
}

// MLNBPHKAOKC (3924)
message GetChatEmojiListCsReq {
}

// CIHPMHBBFLD (3993)
message GetChatEmojiListScRsp {
	uint32 retcode = 4;
	repeated uint32 chat_emoji_list = 13;
}

// FOGDLPFBEKC (3934)
message MarkChatEmojiCsReq {
	bool is_remove_id = 12;
	uint32 extra_id = 11;
}

// CGKOFAPILIF (3943)
message MarkChatEmojiScRsp {
	uint32 retcode = 2;
	uint32 extra_id = 10;
	bool is_remove_id = 8;
}

// ELJAAPLBDOM (3946)
message BatchMarkChatEmojiCsReq {
	repeated uint32 marked_emoji_id_list = 8;
}

// ANFPMEPPIKP (3925)
message BatchMarkChatEmojiScRsp {
	uint32 retcode = 5;
	repeated uint32 marked_emoji_id_list = 13;
}

// FPDENMDJIHA (3996)
message GetLoginChatInfoCsReq {
}

// FDIADJOCNJB (3905)
message GetLoginChatInfoScRsp {
	uint32 retcode = 1;
	repeated uint32 contact_id_list = 12;
}

// JPEOOBGEDAJ
enum CmdChessRogueType {
	CmdChessRogueTypeNone = 0;
	CmdChessRogueGiveUpRollScRsp = 5509;
	CmdChessRoguePickAvatarScRsp = 5406;
	CmdChessRogueQuitCsReq = 5563;
	CmdChessRogueRollDiceCsReq = 5485;
	CmdChessRogueReviveAvatarScRsp = 5434;
	CmdChessRogueCheatRollCsReq = 5595;
	CmdChessRogueNousEditDiceCsReq = 5472;
	CmdChessRogueGiveUpScRsp = 5433;
	CmdSelectChessRogueSubStoryCsReq = 5496;
	CmdChessRogueNousDiceUpdateNotify = 5585;
	CmdGetChessRogueStoryAeonTalkInfoCsReq = 5483;
	CmdChessRogueQueryCsReq = 5492;
	CmdChessRogueUpdateUnlockLevelScNotify = 5533;
	CmdGetChessRogueNousStoryInfoScRsp = 5567;
	CmdChessRogueConfirmRollScRsp = 5514;
	CmdFinishChessRogueNousSubStoryCsReq = 5519;
	CmdChessRogueQueryBpScRsp = 5431;
	CmdChessRogueCellUpdateNotify = 5442;
	CmdChessRogueLeaveCsReq = 5558;
	CmdGetChessRogueStoryAeonTalkInfoScRsp = 5553;
	CmdChessRogueQueryAeonDimensionsCsReq = 5518;
	CmdChessRogueQueryAeonDimensionsScRsp = 5463;
	CmdChessRogueUpdateActionPointScNotify = 5543;
	CmdChessRogueCheatRollScRsp = 5411;
	CmdSelectChessRogueNousSubStoryScRsp = 5529;
	CmdChessRogueGoAheadCsReq = 5520;
	CmdChessRogueUpdateReviveInfoScNotify = 5576;
	CmdEnhanceChessRogueBuffScRsp = 5541;
	CmdChessRogueUpdateLevelBaseInfoScNotify = 5469;
	CmdSelectChessRogueSubStoryScRsp = 5405;
	CmdChessRogueEnterCsReq = 5441;
	CmdChessRogueNousGetRogueTalentInfoCsReq = 5513;
	CmdChessRogueReRollDiceScRsp = 5477;
	CmdGetChessRogueBuffEnhanceInfoScRsp = 5414;
	CmdFinishChessRogueNousSubStoryScRsp = 5584;
	CmdFinishChessRogueSubStoryScRsp = 5479;
	CmdChessRogueChangeyAeonDimensionNotify = 5437;
	CmdChessRogueUpdateDicePassiveAccumulateValueScNotify = 5454;
	CmdFinishChessRogueSubStoryCsReq = 5516;
	CmdChessRoguePickAvatarCsReq = 5580;
	CmdChessRogueSelectCellScRsp = 5419;
	CmdGetChessRogueNousStoryInfoCsReq = 5422;
	CmdChessRogueQuitScRsp = 5435;
	CmdChessRogueLayerAccountInfoNotify = 5586;
	CmdChessRogueUpdateBoardScNotify = 5490;
	CmdChessRogueNousEnableRogueTalentScRsp = 5596;
	CmdGetChessRogueStoryInfoCsReq = 5557;
	CmdChessRogueGiveUpRollCsReq = 5445;
	CmdChessRogueNousEnableRogueTalentCsReq = 5493;
	CmdChessRogueEnterNextLayerScRsp = 5583;
	CmdGetChessRogueBuffEnhanceInfoCsReq = 5457;
	CmdChessRogueEnterCellCsReq = 5581;
	CmdChessRogueReviveAvatarCsReq = 5473;
	CmdChessRogueRollDiceScRsp = 5425;
	CmdChessRogueQueryBpCsReq = 5545;
	CmdEnterChessRogueAeonRoomScRsp = 5552;
	CmdEnterChessRogueAeonRoomCsReq = 5482;
	CmdChessRogueSelectCellCsReq = 5506;
	CmdChessRogueSkipTeachingLevelCsReq = 5528;
	CmdChessRogueStartCsReq = 5452;
	CmdChessRogueGoAheadScRsp = 5578;
	CmdChessRogueConfirmRollCsReq = 5591;
	CmdChessRogueLeaveScRsp = 5562;
	CmdChessRogueNousEditDiceScRsp = 5443;
	CmdChessRogueUpdateDiceInfoScNotify = 5536;
	CmdChessRogueUpdateAllowedSelectCellScNotify = 5521;
	CmdChessRogueNousGetRogueTalentInfoScRsp = 5432;
	CmdChessRogueEnterScRsp = 5510;
	CmdChessRogueFinishCurRoomNotify = 5564;
	CmdChessRogueEnterCellScRsp = 5556;
	CmdSyncChessRogueNousMainStoryScNotify = 5497;
	CmdChessRogueSkipTeachingLevelScRsp = 5577;
	CmdEnhanceChessRogueBuffCsReq = 5550;
	CmdSyncChessRogueNousValueScNotify = 5589;
	CmdChessRogueStartScRsp = 5582;
	CmdGetChessRogueStoryInfoScRsp = 5530;
	CmdChessRogueNousDiceSurfaceUnlockNotify = 5568;
	CmdChessRogueEnterNextLayerCsReq = 5440;
	CmdChessRogueUpdateAeonModifierValueScNotify = 5438;
	CmdSelectChessRogueNousSubStoryCsReq = 5409;
	CmdSyncChessRogueNousSubStoryScNotify = 5498;
	CmdChessRogueMoveCellNotify = 5456;
	CmdChessRogueSelectBpCsReq = 5572;
	CmdChessRogueQueryScRsp = 5565;
	CmdSyncChessRogueMainStoryFinishScNotify = 5429;
	CmdChessRogueSelectBpScRsp = 5465;
	CmdChessRogueQuestFinishNotify = 5539;
	CmdChessRogueReRollDiceCsReq = 5423;
	CmdChessRogueGiveUpCsReq = 5460;
	CmdChessRogueUpdateMoneyInfoScNotify = 5501;
}

enum OJKKCJDFMHC {
	CHESS_ROGUE_DICE_IDLE = 0;
	CHESS_ROGUE_DICE_ROLLED = 1;
	CHESS_ROGUE_DICE_CONFIRMED = 2;
	CHESS_ROGUE_DICE_GIVEUP = 3;
}

enum LMFHFMEBAKB {
	CHESS_ROGUE_DICE_FIXED = 0;
	CHESS_ROGUE_DICE_EDITABLE = 1;
}

enum LNBEAAHBNAJ {
	IDLE = 0;
	SELECTED = 1;
	PROCESSING = 2;
	FINISH = 3;
}

enum DIODBAOLFDN {
	CHESS_ROGUE_CELL_SPECIAL_TYPE_NONE = 0;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_LOCKED = 1;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_REPLICATE = 2;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_PROTECTED = 3;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_SEED = 4;
	CHESS_ROGUE_CELL_SPECIAL_TYPE_STAMP = 5;
}

enum LMIBFMLFCGO {
	CHESS_ROGUE_LEVEL_IDLE = 0;
	CHESS_ROGUE_LEVEL_PROCESSING = 1;
	CHESS_ROGUE_LEVEL_PENDING = 2;
	CHESS_ROGUE_LEVEL_FINISH = 3;
	CHESS_ROGUE_LEVEL_FAILED = 4;
	CHESS_ROGUE_LEVEL_FORCE_FINISH = 5;
}

enum JLOEPEPJMDP {
	CHESS_ROGUE_ACCOUNT_BY_NONE = 0;
	CHESS_ROGUE_ACCOUNT_BY_NORMAL_FINISH = 1;
	CHESS_ROGUE_ACCOUNT_BY_NORMAL_QUIT = 2;
	CHESS_ROGUE_ACCOUNT_BY_DIALOG = 3;
	CHESS_ROGUE_ACCOUNT_BY_FAILED = 4;
	CHESS_ROGUE_ACCOUNT_BY_CUSTOM_OP = 5;
}

enum HLPAGPLLFFA {
	CHESS_ROGUE_BUFF_SOURCE_TYPE_NONE = 0;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_SELECT = 1;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_BONUS = 5;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_SHOP = 6;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_DICE = 7;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_AEON = 8;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 9;
	CHESS_ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 10;
}

enum CFBBAJGOAAH {
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_USE = 4;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_GET = 8;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10;
	CHESS_ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11;
}

enum ANEHJMAFBLJ {
	CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_NONE = 0;
	CHESS_ROGUE_UPDATE_LEVEL_STATUS_BY_DIALOG = 1;
}

enum FAPFDNFCCIH {
	CHESS_ROGUE_CELL_UPDATE_REASON_NONE = 0;
	CHESS_ROGUE_CELL_UPDATE_REASON_MODIFIER = 1;
}

enum BNMGDBFHFHB {
	CHESS_ROGUE_AEON_TYPE_NONE = 0;
	CHESS_ROGUE_AEON_TYPE_KNIGHT = 1;
	CHESS_ROGUE_AEON_TYPE_MEMORY = 2;
	CHESS_ROGUE_AEON_TYPE_WARLOCK = 3;
	CHESS_ROGUE_AEON_TYPE_PRIEST = 4;
	CHESS_ROGUE_AEON_TYPE_ROGUE = 5;
	CHESS_ROGUE_AEON_TYPE_WARRIOR = 6;
	CHESS_ROGUE_AEON_TYPE_HAPPY = 7;
	CHESS_ROGUE_AEON_TYPE_BREED = 8;
}

enum MLJEBNBGOLJ {
	CHESS_ROGUE_DICE_SOURCE_TYPE_NONE = 0;
	CHESS_ROGUE_DICE_SOURCE_TYPE_NORMAL = 1;
	CHESS_ROGUE_DICE_SOURCE_TYPE_REPEAT = 2;
	CHESS_ROGUE_DICE_SOURCE_TYPE_CHEAT = 3;
}

enum MIHBDJCMCBG {
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_NONE = 0;
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_UNLOCK = 1;
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_FINISH = 2;
	CHESS_ROGUE_NOUS_MAIN_STORY_STATUS_CAN_TRIGGER = 3;
}

enum ChessRogueNousDicePhase {
	NONE = 0;
	PHASE_ONE = 1;
	PHASE_TWO = 2;
}

message RogueAvatarReviveCost {
	ItemCostData rogue_revive_cost = 1;
}

message ChessRogueInfo {
	LineupInfo lineup = 5;
	SceneInfo scene = 4;
}

message MOKCFFGFFPC {
	repeated uint32 dfighclmmaa = 15;
	uint32 id = 8;
}

message KHHCLOOCOMI {
	repeated MOKCFFGFFPC mlhfciifefp = 2;
}

message ChessRogueDiceInfo {
	int32 ojcmgoilfcf = 534;
	uint32 biloiomnadc = 3;
	bool fklmffjfhne = 1;
	uint32 gghlkcmnepe = 7;
	uint32 hpbljjbfcbn = 14;
	RogueModifier omcldmobebc = 1505;
	uint32 ncgjidngibe = 12;
	LMFHFMEBAKB kefhkelpbhc = 5;
	uint32 daibnmgpbfc = 6;
	uint32 cfhhnmmmihm = 13;
	HJPEJBLBDIK lmbdaabgipc = 1462;
	bool aoglmoliapn = 1781;
	EBOIOIKFLFJ olgaoibgchh = 1695;
	repeated uint32 helngdnkcld = 1190;
	OJKKCJDFMHC nnaapjkohdf = 11;
	uint32 fioecjmckam = 10;
	uint32 ckjpajfakab = 15;
}

// AMHBFKMFDLK (5485)
message ChessRogueRollDiceCsReq {
	uint32 jlmieohmlja = 14;
}

// OAMEMLLDGDL (5425)
message ChessRogueRollDiceScRsp {
	ChessRogueDiceInfo rogue_dice_info = 12;
	uint32 retcode = 9;
	uint32 nckmcijckgb = 7;
}

// JFFBJOPNHNF (5520)
message ChessRogueGoAheadCsReq {
	uint32 cell_id = 8;
}

// AMOFJKFDBFN (5578)
message ChessRogueGoAheadScRsp {
	uint32 cell_id = 12;
	uint32 retcode = 6;
}

message CellMonster {
	uint32 boss_decay_id = 15;
	uint32 monster_id = 6;
}

message CellMonsterInfo {
	repeated CellMonster cell_monster_list = 12;
	bool confirm = 13;
	uint32 select_boss_id = 8;
}

message CellMonsterSelectInfo {
	repeated uint32 select_decay_id = 9;
	repeated uint32 maze_buff_list = 3;
}

message CellFinalMonsterInfo {
	CellMonsterInfo cell_boss_info = 14;
	CellMonsterSelectInfo select_boss_info = 3;
}

message CellAdvanceInfo {
	oneof advance_case {
		CellMonsterInfo cell_boss_info = 11;
		CellMonsterSelectInfo select_boss_info = 10;
		CellFinalMonsterInfo final_boss_info = 12;
	}
}

message ChessRogueCell {
	uint32 room_id = 15;
	uint32 nobioiifnlf = 7;
	DIODBAOLFDN eccnjodahio = 2;
	LNBEAAHBNAJ hpjbihgmkmn = 10;
	uint32 khigakjclli = 12;
	repeated uint32 bfcbdenmeld = 14;
	CellAdvanceInfo ext_info = 13;
	uint32 id = 4;
	uint32 obaeolckbfi = 6;
	bool ifpkhglpall = 11;
	uint32 aelgpbejjni = 8;
	bool kphgmoidfnd = 9;
}

message CellInfo {
	uint32 ggknjdmfjik = 4;
	uint32 amenodioblj = 11;
	uint32 dgiacajmefn = 6;
	uint32 nafapmckfbb = 8;
	repeated ChessRogueCell bodgiilmdpn = 13;
}

message ChessRogueHistoryCellInfo {
	uint32 cell_id = 12;
	uint32 room_id = 4;
}

message PHBMAJPCNLB {
	EBOIOIKFLFJ oakngnkalpi = 15;
	uint32 oodpbkdjafe = 3;
}

message ChessRogueAreaInfo {
	PHBMAJPCNLB goigdicglnm = 15;
	repeated uint32 allow_select_cell_id_list = 3;
	uint32 eicppjjlgdk = 7;
	LNBEAAHBNAJ ghljddligim = 10;
	repeated ChessRogueHistoryCellInfo history_cell = 13;
	uint32 eacjonnihkp = 5;
	CellInfo kglpmnhmnmm = 2;
}

message ChessRogueLevelInfo {
	uint32 kchegpecmhm = 7;
	int32 olidjodakka = 14;
	ChessRogueAreaInfo area_info = 1;
	uint32 gcceggbeicj = 15;
	repeated uint32 mkejbephkkb = 5;
	int32 bliakakfkfk = 11;
	uint32 id = 13;
	repeated uint32 hdahahdpkmp = 4;
	uint32 eeaplnkdklo = 2;
}

message ChessRogueQueryAeon {
	uint32 lbdmholpjke = 10;
	uint32 aeon_id = 2;
}

message ChessRogueQueryAeonInfo {
	repeated ChessRogueQueryAeon aeon_list = 11;
}

message ChessRogueAeonInfo {
	uint32 game_aeon_id = 9;
	int32 hhdabofomec = 14;
	EBOIOIKFLFJ oakngnkalpi = 6;
	ChessRogueQueryAeonInfo chess_aeon_info = 4;
	repeated uint32 aeon_id_list = 7;
}

message ChessRogueLineupAvatarInfo {
	uint32 fdhaleelkbn = 4;
	uint32 avatar_id = 10;
}

message ChessRogueLineupInfo {
	RogueAvatarReviveCost revive_info = 10;
	repeated ChessRogueLineupAvatarInfo chess_avatar_list = 11;
}

message NGEJECDNAEO {
	uint32 inbgenaaibg = 11;
	bool mhfnambhgkk = 15;
	uint32 fjiecbgmbno = 1;
	repeated uint32 igpgdkiclcj = 14;
}

message PKPKDHENPMN {
	int32 gfbihcimjkb = 2;
}

message NGNPFHGBPLD {
	repeated uint32 hdagdlocpfi = 12;
}

message NOMDNDHHELA {
	GFMELEMCJNA game_miracle_info = 1;
	ChessRogueLineupInfo eelbepmnpgi = 5;
	NGNPFHGBPLD mmohllkalak = 177;
	NGEJECDNAEO story_info = 9;
	LOJNAEKIENP lmpnoceabnh = 2;
	ChessRogueAeonInfo ijopankcekj = 10;
	DEFIBAENEFF lcfanolipij = 6;
	IFIMEHHNAPL jmngdhgbofl = 7;
	ChessRogueLevelInfo level_info = 11;
	PKPKDHENPMN hdadnbflock = 4;
	EAAMMPJFKIB rogue_buff_info = 8;
	repeated IDONDCHFKHG hcoapfagbei = 12;
	ChessRogueDiceInfo rogue_dice_info = 3;
	BLIMEDCMHMN mjkpcdjjeml = 13;
	uint32 nkpdmckfppp = 15;
}

message LDACEMENDGO {
	repeated uint32 hdahahdpkmp = 12;
	APGEBMNDCBD pkhijecbkha = 14;
	LOJNAEKIENP lmpnoceabnh = 9;
	repeated uint32 mkejbephkkb = 15;
	ChessRogueQueryAeonInfo chess_aeon_info = 7;
	BBECLJOFGPM mmohllkalak = 8;
	HEEPKPHCLGB lgofoilnonl = 3;
}

message DIEDGIEDKHM {
	uint32 nkpdmckfppp = 5;
	repeated IDONDCHFKHG hcoapfagbei = 13;
}

message AKKDHBHLNAK {
	ChessRogueQueryAeonInfo chess_aeon_info = 11;
	repeated uint32 mkejbephkkb = 1;
	APGEBMNDCBD pkhijecbkha = 6;
	BBECLJOFGPM mmohllkalak = 12;
	HEEPKPHCLGB lgofoilnonl = 9;
	repeated uint32 hdahahdpkmp = 5;
}

message FGAMDJDFPPG {
	uint32 nofjglfkgfi = 6;
	JLOEPEPJMDP nolnafhgnic = 2;
	ChessRogueBuff rogue_buff_info = 3;
	bool is_finish = 11;
	LineupInfo iiblfljdpmd = 9;
	uint32 jndjolalapk = 7;
	uint32 iloocodiejo = 14;
	uint32 gdippjbknbp = 1446;
	uint32 nkpdmckfppp = 1511;
	uint32 cgfkkakjfca = 10;
	BKLLPGCEECM game_miracle_info = 5;
	IFIMEHHNAPL jmngdhgbofl = 462;
	uint32 score_id = 1163;
	uint32 jonfaggcglo = 12;
	uint32 daliinmblad = 1308;
	ItemList ogmmoleeopl = 4;
	uint32 endeljgplab = 698;
	repeated uint32 lgkajganehi = 8;
	uint32 addnfognppg = 1;
}

message ANHJCGDPCAM {
	uint32 dpomjdoncdh = 2;
	repeated ChessRogueCell bodgiilmdpn = 8;
}

message EHGLADIDICE {
	uint32 jndjolalapk = 5;
	uint32 ndpbpkoafgb = 9;
}

message AANEHJBNFBM {
	uint32 dngmfiodock = 4;
	uint32 inbgenaaibg = 3;
}

// PCJCLMEKIML (5492)
message ChessRogueQueryCsReq {
}

// CGCNCAMLGHM (5565)
message ChessRogueQueryScRsp {
	AKKDHBHLNAK rogue_get_info = 11;
	FGAMDJDFPPG dpaedjdcfpd = 7;
	LDACEMENDGO hfgddeokcdg = 3;
	DIEDGIEDKHM rogue_current_info = 4;
	NOMDNDHHELA lddcaaekfob = 1;
	uint32 retcode = 14;
}

// EPHEHGPMGPE (5581)
message ChessRogueEnterCellCsReq {
	uint32 cell_id = 9;
	uint32 hdpmifbijkl = 13;
}

// FOBDLNNJHFN (5556)
message ChessRogueEnterCellScRsp {
	uint32 retcode = 12;
	DIEDGIEDKHM rogue_current_info = 15;
	NOMDNDHHELA lddcaaekfob = 2;
	uint32 cell_id = 11;
	ChessRogueInfo ext_info = 9;
}

// AJOGMJBBKDK (5441)
message ChessRogueEnterCsReq {
	uint32 id = 5;
}

// HCOCHEEMEAL (5510)
message ChessRogueEnterScRsp {
	DIEDGIEDKHM rogue_current_info = 1;
	NOMDNDHHELA lddcaaekfob = 4;
	uint32 retcode = 2;
	ChessRogueInfo ext_info = 15;
	uint32 id = 8;
}

// GLFBFEKFFGD (5558)
message ChessRogueLeaveCsReq {
}

// DBKHHIAGBOM (5562)
message ChessRogueLeaveScRsp {
	AKKDHBHLNAK rogue_get_info = 8;
	LDACEMENDGO hfgddeokcdg = 14;
	ChessRogueAeonInfo ijopankcekj = 1;
	ChessRogueInfo ext_info = 15;
	uint32 retcode = 12;
}

// FJMEMOCJJLJ (5460)
message ChessRogueGiveUpCsReq {
}

// NDLDNALBPNG (5433)
message ChessRogueGiveUpScRsp {
	ChessRogueAeonInfo ijopankcekj = 1;
	ChessRogueInfo ext_info = 7;
	uint32 retcode = 5;
	AKKDHBHLNAK rogue_get_info = 4;
	FGAMDJDFPPG dpaedjdcfpd = 14;
	LDACEMENDGO hfgddeokcdg = 13;
}

// GJKOBFGOONC (5452)
message ChessRogueStartCsReq {
	uint32 aeon_id = 3;
	repeated uint32 eljinbjeael = 11;
	repeated uint32 cngepabgdlm = 1;
	repeated uint32 base_avatar_id_list = 8;
	uint32 id = 12;
	uint32 bpdlimhclic = 2;
	repeated uint32 hobkomgbibl = 6;
}

// LBOPCNPOKDF (5582)
message ChessRogueStartScRsp {
	LineupInfo lineup = 13;
	ChessRogueInfo ext_info = 8;
	uint32 retcode = 11;
	NOMDNDHHELA lddcaaekfob = 14;
	DIEDGIEDKHM rogue_current_info = 9;
	ANHJCGDPCAM mgbbkhhaheh = 5;
	SceneInfo scene = 3;
}

// IKKOGFOFLLH (5518)
message ChessRogueQueryAeonDimensionsCsReq {
}

// IODDDFPFGBA (5463)
message ChessRogueQueryAeonDimensionsScRsp {
	ChessRogueQueryAeonInfo lddcaaekfob = 10;
	uint32 retcode = 9;
}

// ADEONMPPKJH (5437)
message ChessRogueChangeyAeonDimensionNotify {
	ChessRogueQueryAeon lddcaaekfob = 1;
}

// AJFJMFCFMAG (5506)
message ChessRogueSelectCellCsReq {
	uint32 cell_id = 4;
	uint32 hdpmifbijkl = 2;
}

// ALEPGNNBCLI (5419)
message ChessRogueSelectCellScRsp {
	uint32 retcode = 1;
	uint32 hdpmifbijkl = 4;
	uint32 cell_id = 10;
	LPOOPBGNGLD pfapbjgpdnj = 13;
}

// NCOCDAPKKMO (5545)
message ChessRogueQueryBpCsReq {
}

// GCGAPFIGPHO (5431)
message ChessRogueQueryBpScRsp {
	KHHCLOOCOMI lddcaaekfob = 1;
	uint32 retcode = 11;
}

// MBNFAKAFBOH (5572)
message ChessRogueSelectBpCsReq {
	uint32 blchbomacio = 10;
}

// APAMOMGLHFH (5465)
message ChessRogueSelectBpScRsp {
	uint32 blchbomacio = 10;
	uint32 retcode = 13;
	MOKCFFGFFPC iimcijeijnf = 3;
}

// EHEHDOOBECO (5586)
message ChessRogueLayerAccountInfoNotify {
	uint32 kchegpecmhm = 7;
	uint32 nofjglfkgfi = 14;
	FGAMDJDFPPG dpaedjdcfpd = 2;
	ChessRogueLevelInfo level_info = 13;
	repeated uint32 lgkajganehi = 15;
}

// EIHJNAAGGFG (5457)
message GetChessRogueBuffEnhanceInfoCsReq {
}

// FIADGIIPLJG (5414)
message GetChessRogueBuffEnhanceInfoScRsp {
	CFANNKOKNCA npbamcnhafj = 7;
	uint32 retcode = 1;
}

// NOEBKJPHOLA (5550)
message EnhanceChessRogueBuffCsReq {
	uint32 maze_buff_id = 13;
}

// LMGCDENJPHI (5541)
message EnhanceChessRogueBuffScRsp {
	RogueCommonBuff iileadjpaem = 5;
	uint32 retcode = 15;
	CFANNKOKNCA npbamcnhafj = 11;
	bool is_succ = 13;
}

// HGKEEANENFB (5580)
message ChessRoguePickAvatarCsReq {
	uint32 prop_entity_id = 11;
	repeated uint32 base_avatar_id_list = 14;
}

// DEGBOFPPAMN (5406)
message ChessRoguePickAvatarScRsp {
	repeated uint32 base_avatar_id_list = 4;
	uint32 retcode = 3;
	ChessRogueLineupInfo eelbepmnpgi = 2;
}

// EEJAPAKPAMP (5473)
message ChessRogueReviveAvatarCsReq {
	repeated uint32 base_avatar_id_list = 8;
	uint32 interacted_prop_entity_id = 12;
}

// IALCGOBIAKG (5434)
message ChessRogueReviveAvatarScRsp {
	repeated uint32 base_avatar_id_list = 11;
	uint32 retcode = 5;
	RogueAvatarReviveCost revive_info = 4;
}

// KPLEKCLHPCJ (5576)
message ChessRogueUpdateReviveInfoScNotify {
	RogueAvatarReviveCost revive_info = 15;
}

// GFCGAPBGCJG (5501)
message ChessRogueUpdateMoneyInfoScNotify {
	BLIMEDCMHMN mjkpcdjjeml = 4;
}

// IIEBCCJEAIN (5536)
message ChessRogueUpdateDiceInfoScNotify {
	ChessRogueDiceInfo rogue_dice_info = 14;
}

// PLJLHPHCIDI (5469)
message ChessRogueUpdateLevelBaseInfoScNotify {
	ANEHJMAFBLJ reason = 15;
	LMIBFMLFCGO gcceggbeicj = 12;
}

// BNBBHHNHBGF (5521)
message ChessRogueUpdateAllowedSelectCellScNotify {
	repeated uint32 allow_select_cell_id_list = 3;
	uint32 hedddekoolb = 13;
}

// JLEPPLENOEF (5490)
message ChessRogueUpdateBoardScNotify {
	CellInfo hppgcagngmm = 4;
}

// IDEJKIHKNAJ (5438)
message ChessRogueUpdateAeonModifierValueScNotify {
	int32 hhdabofomec = 14;
	uint32 aeon_id = 13;
}

// NGJGCAMJHMM (5454)
message ChessRogueUpdateDicePassiveAccumulateValueScNotify {
	int32 npemiliabae = 11;
}

// DBJEBBKKBGF (5528)
message ChessRogueSkipTeachingLevelCsReq {
}

// ChessRogueSkipTeachingLevelScRsp (5577)
message ChessRogueSkipTeachingLevelScRsp {
	ItemList SkipRewardList = 14;
	uint32 retcode = 12;
}

// ANPMPDGPNJF (5533)
message ChessRogueUpdateUnlockLevelScNotify {
	repeated uint32 hdahahdpkmp = 2;
}

// LCEJLHOFDNO (5440)
message ChessRogueEnterNextLayerCsReq {
	uint32 prop_entity_id = 6;
}

// AJPPGKFPFNK (5583)
message ChessRogueEnterNextLayerScRsp {
	ChessRogueInfo ext_info = 7;
	NOMDNDHHELA rogue_game_info = 6;
	DIEDGIEDKHM rogue_current_info = 2;
	ANHJCGDPCAM mgbbkhhaheh = 11;
	uint32 retcode = 4;
}

// PGIPEFOLNIL (5423)
message ChessRogueReRollDiceCsReq {
	uint32 jlmieohmlja = 12;
}

// GBOONCCLJDN (5477)
message ChessRogueReRollDiceScRsp {
	uint32 retcode = 15;
	ChessRogueDiceInfo rogue_dice_info = 9;
}

// DJEMACDGENJ (5591)
message ChessRogueConfirmRollCsReq {
	uint32 jlmieohmlja = 2;
}

// BBPACEPLIBK (5514)
message ChessRogueConfirmRollScRsp {
	uint32 retcode = 2;
	ChessRogueDiceInfo rogue_dice_info = 6;
}

// AIGBNEJACBP (5595)
message ChessRogueCheatRollCsReq {
	uint32 lojfkmkmmlc = 14;
	uint32 jlmieohmlja = 13;
}

// LEAIMLAGBLK (5411)
message ChessRogueCheatRollScRsp {
	ChessRogueDiceInfo rogue_dice_info = 10;
	uint32 lojfkmkmmlc = 1;
	uint32 retcode = 8;
	uint32 bdmjajmffhm = 7;
}

// MKELENDGNFL (5445)
message ChessRogueGiveUpRollCsReq {
}

// FBJDDOJHKKK (5509)
message ChessRogueGiveUpRollScRsp {
	ChessRogueDiceInfo rogue_dice_info = 7;
	ItemList icmjokihcjj = 1;
	uint32 retcode = 6;
}

// GJEOEOAEFGL (5563)
message ChessRogueQuitCsReq {
}

// EPKKMFBJIEE (5435)
message ChessRogueQuitScRsp {
	DIEDGIEDKHM rogue_current_info = 1;
	FGAMDJDFPPG dpaedjdcfpd = 11;
	LDACEMENDGO hfgddeokcdg = 9;
	ChessRogueAeonInfo ijopankcekj = 6;
	uint32 retcode = 12;
	AKKDHBHLNAK rogue_get_info = 7;
	NOMDNDHHELA lddcaaekfob = 2;
	ChessRogueInfo ext_info = 4;
	ChessRogueLevelInfo level_info = 8;
}

// IKNAMJANCNK (5564)
message ChessRogueFinishCurRoomNotify {
	ChessRogueLevelInfo level_info = 7;
}

// MOKKJMCDMKN (5456)
message ChessRogueMoveCellNotify {
	uint32 lfmnhhmdfhg = 11;
	CellInfo kglpmnhmnmm = 4;
	uint32 ckekjpglfeg = 8;
}

// JBFHKJGILEJ (5442)
message ChessRogueCellUpdateNotify {
	PJDEMLINNGF jnpgebhaohl = 15;
	FAPFDNFCCIH reason = 11;
	uint32 hedddekoolb = 7;
	repeated ChessRogueCell bodgiilmdpn = 8;
}

// DPJLIBDPFOF (5539)
message ChessRogueQuestFinishNotify {
	uint32 hcopmgfadoo = 5;
	uint32 quest_id = 3;
}

// FJBBNHPPJOO (5557)
message GetChessRogueStoryInfoCsReq {
}

// HJGDCAPCAMF (5530)
message GetChessRogueStoryInfoScRsp {
	repeated AANEHJBNFBM pdbkoclfplg = 12;
	repeated EHGLADIDICE clahdhblajm = 14;
	uint32 retcode = 6;
}

// APCJLILEICP (5496)
message SelectChessRogueSubStoryCsReq {
	uint32 inbgenaaibg = 3;
	uint32 bhondmalhbo = 1;
	uint32 cedpklpefmj = 13;
	uint32 rogue_dialogue_event_id = 11;
}

// PENLPDPIEKJ (5405)
message SelectChessRogueSubStoryScRsp {
	uint32 retcode = 6;
	uint32 cedpklpefmj = 10;
	uint32 inbgenaaibg = 14;
	uint32 rogue_dialogue_event_id = 13;
	uint32 bhondmalhbo = 9;
}

// HOBKMBFNEIH (5516)
message FinishChessRogueSubStoryCsReq {
	uint32 inbgenaaibg = 11;
	uint32 bhondmalhbo = 8;
	uint32 cedpklpefmj = 3;
}

// BPNLIBEKFIN (5479)
message FinishChessRogueSubStoryScRsp {
	uint32 jndjolalapk = 13;
	uint32 bhondmalhbo = 1;
	uint32 inbgenaaibg = 7;
	uint32 retcode = 4;
	uint32 cedpklpefmj = 10;
}

// KJDCEKCPBCO (5543)
message ChessRogueUpdateActionPointScNotify {
	int32 olidjodakka = 4;
}

// ADNNJCBPBBE (5482)
message EnterChessRogueAeonRoomCsReq {
}

// IMFBFCEABOF (5552)
message EnterChessRogueAeonRoomScRsp {
	ChessRogueInfo ext_info = 7;
	uint32 retcode = 4;
}

// JGPBCJGKFED (5483)
message GetChessRogueStoryAeonTalkInfoCsReq {
	uint32 talk_dialogue_id = 3;
}

// KEODILCHHDP (5553)
message GetChessRogueStoryAeonTalkInfoScRsp {
	uint32 retcode = 15;
	map<uint32, uint32> oamjlnboleg = 6;
	uint32 talk_dialogue_id = 11;
}

// OEFODGACGAH (5429)
message SyncChessRogueMainStoryFinishScNotify {
	uint32 ndpbpkoafgb = 5;
	uint32 jndjolalapk = 11;
}

// ABLKBEDHLAB (5589)
message SyncChessRogueNousValueScNotify {
	PKPKDHENPMN hdadnbflock = 4;
}

message OINNKHCDACC {
	uint32 jndjolalapk = 6;
	MIHBDJCMCBG status = 3;
}

message GDGBAMHHKLF {
	uint32 cedpklpefmj = 12;
}

// KBENGIEHMAA (5422)
message GetChessRogueNousStoryInfoCsReq {
}

// APIKMBKFKPD (5567)
message GetChessRogueNousStoryInfoScRsp {
	repeated GDGBAMHHKLF pdbkoclfplg = 9;
	uint32 retcode = 5;
	repeated OINNKHCDACC clahdhblajm = 4;
}

// KLNBGPDEOKB (5409)
message SelectChessRogueNousSubStoryCsReq {
	uint32 rogue_dialogue_event_id = 2;
	uint32 cedpklpefmj = 12;
	uint32 bhondmalhbo = 7;
}

// NAHDHHLGOJB (5529)
message SelectChessRogueNousSubStoryScRsp {
	uint32 bhondmalhbo = 4;
	uint32 cedpklpefmj = 9;
	uint32 retcode = 1;
	uint32 rogue_dialogue_event_id = 3;
}

// FJICAJHPKFF (5519)
message FinishChessRogueNousSubStoryCsReq {
	uint32 cedpklpefmj = 10;
	uint32 bhondmalhbo = 3;
}

// CCDHMGHGDJN (5584)
message FinishChessRogueNousSubStoryScRsp {
	uint32 bhondmalhbo = 12;
	uint32 retcode = 10;
	uint32 cedpklpefmj = 9;
}

// PFPFOIIGBCD (5498)
message SyncChessRogueNousSubStoryScNotify {
	uint32 cedpklpefmj = 6;
}

// PNPOEMJAGEA (5497)
message SyncChessRogueNousMainStoryScNotify {
	repeated OINNKHCDACC clahdhblajm = 15;
}

message IFIMEHHNAPL {
	uint32 jndjolalapk = 3;
	repeated uint32 fbfjolijonc = 15;
	uint32 kdblpcoojin = 9;
	bool emdeohimdpd = 12;
	uint32 cedpklpefmj = 1;
	bool mhfnambhgkk = 10;
	repeated uint32 khinjllppjd = 8;
	repeated uint32 edmjacfdglj = 13;
}

message MLDOECLFMMH {
	uint32 lojfkmkmmlc = 13;
	uint32 dice_slot_id = 1;
}

message HJPEJBLBDIK {
	uint32 lomeckpence = 11;
	uint32 nmipeedhmmd = 8;
	repeated MLDOECLFMMH oofbeogbgkj = 12;
	uint32 bpdlimhclic = 3;
}

message APGEBMNDCBD {
	map<uint32, bool> gifceeiclml = 5;
	repeated HJPEJBLBDIK cchckblajkd = 9;
	ChessRogueNousDicePhase fmpmmddnomo = 10;
	repeated uint32 dnodpcljamn = 12;
}

message LOJNAEKIENP {
	uint32 fjifnmbdjem = 10;
}

message HEEPKPHCLGB {
	KFDDOFKHKDJ comcfjgpamj = 9;
	uint32 fjifnmbdjem = 1;
}

message BBECLJOFGPM {
	repeated uint32 icnenejhclk = 13;
}

// NDHPNGPEHNK (5472)
message ChessRogueNousEditDiceCsReq {
	HJPEJBLBDIK pkhijecbkha = 11;
}

// BIAFIPFHDFL (5443)
message ChessRogueNousEditDiceScRsp {
	uint32 retcode = 13;
	HJPEJBLBDIK pkhijecbkha = 1;
}

// MJGOEGHIMNA (5585)
message ChessRogueNousDiceUpdateNotify {
	APGEBMNDCBD lkimkececji = 11;
}

// OKLLDANJFLD (5568)
message ChessRogueNousDiceSurfaceUnlockNotify {
	uint32 gkfkfkjpeon = 5;
}

// MDKABJMAEMG (5513)
message ChessRogueNousGetRogueTalentInfoCsReq {
}

// HCBKGINIKCG (5432)
message ChessRogueNousGetRogueTalentInfoScRsp {
	KFDDOFKHKDJ lgofoilnonl = 9;
	uint32 retcode = 15;
	uint32 fjifnmbdjem = 1;
}

// PDEEPPEMJIJ (5493)
message ChessRogueNousEnableRogueTalentCsReq {
	uint32 talent_id = 10;
}

// KJEOELHAGNF (5596)
message ChessRogueNousEnableRogueTalentScRsp {
	uint32 fjifnmbdjem = 13;
	KFDDOFKHKDJ lgofoilnonl = 8;
	uint32 retcode = 12;
}

// HGKAAJOOOCG
enum CmdClockParkType {
	CmdClockParkTypeNone = 0;
	CmdClockParkGetOngoingScriptInfoScRsp = 7246;
	CmdClockParkStartScriptCsReq = 7209;
	CmdClockParkBattleEndScNotify = 7204;
	CmdClockParkUnlockTalentScRsp = 7249;
	CmdClockParkUnlockTalentCsReq = 7215;
	CmdClockParkQuitScriptScRsp = 7248;
	CmdClockParkUseBuffCsReq = 7211;
	CmdClockParkHandleWaitOperationScRsp = 7228;
	CmdClockParkStartScriptScRsp = 7243;
	CmdClockParkGetInfoScRsp = 7250;
	CmdClockParkFinishScriptScNotify = 7235;
	CmdClockParkGetInfoCsReq = 7212;
	CmdClockParkUseBuffScRsp = 7206;
	CmdClockParkGetOngoingScriptInfoCsReq = 7247;
	CmdClockParkQuitScriptCsReq = 7210;
	CmdClockParkHandleWaitOperationCsReq = 7245;
}

enum ClockParkPlayStatus {
	CLOCK_PARK_PLAY_NONE = 0;
	CLOCK_PARK_PLAY_NORMAL_DEATH = 1;
	CLOCK_PARK_PLAY_NORMAL_PASS = 2;
	CLOCK_PARK_PLAY_FINISH_SCRIPT = 5;
}

// CFIPFNEIJGD (7212)
message ClockParkGetInfoCsReq {
}

message KMGFOAJBMMA {
	uint32 script_id = 2;
	repeated uint32 gleddkponkp = 10;
}

// PPNPKOMMNBD (7250)
message ClockParkGetInfoScRsp {
	repeated uint32 ajmhbdmnlmn = 12;
	uint32 retcode = 1;
	uint32 progress = 2;
	repeated KMGFOAJBMMA ljpobcflecc = 14;
	uint32 cjppogffpae = 3;
	uint32 lcicdlkpgan = 8;
}

// GEGEGKCAMPA (7215)
message ClockParkUnlockTalentCsReq {
	uint32 talent_id = 6;
}

// GHBGBLENIOJ (7249)
message ClockParkUnlockTalentScRsp {
	uint32 retcode = 6;
	uint32 talent_id = 9;
}

// IJBAPOJKAMC (7209)
message ClockParkStartScriptCsReq {
	uint32 script_id = 3;
	repeated uint32 dbcmobkpkji = 2;
}

// FOPHFIAHBOF (7243)
message ClockParkStartScriptScRsp {
	uint32 retcode = 9;
	uint32 script_id = 4;
}

// BGBILGGDEOB (7247)
message ClockParkGetOngoingScriptInfoCsReq {
}

message OONHCKKBHIE {
}

message GJLNLGCBOFL {
	uint32 gjfccahnfco = 5;
	repeated uint32 kmnmoacaenj = 6;
	uint32 card_id = 12;
}

message GDFGFDNCFDG {
	repeated uint32 kmnmoacaenj = 6;
	repeated GJLNLGCBOFL train_party_card_info = 8;
}

message GPFGLIEDOIB {
	GDFGFDNCFDG lknagoklogi = 8;
}

message LBCNNEJJKED {
	GDFGFDNCFDG lknagoklogi = 14;
}

message CGPGBDPNNDL {
	GDFGFDNCFDG lknagoklogi = 8;
}

message LIOFEPIOEDB {
	GDFGFDNCFDG lknagoklogi = 5;
	uint32 gacha_random = 4;
	uint32 mfcibncdadg = 3;
}

message MLJPDNBENDF {
	GDFGFDNCFDG lknagoklogi = 5;
}

message HDEBCFJIHKA {
	bool gmbmeinoami = 10;
}

message JJIIANKENHO {
	oneof HEAKEMDIGJH {
		OONHCKKBHIE hdgbgomehga = 12;
		GPFGLIEDOIB hecgagdmheg = 11;
		LBCNNEJJKED emffgbbjmdm = 5;
		CGPGBDPNNDL jcnfomennhm = 14;
		LIOFEPIOEDB aidnomlgemh = 10;
		MLJPDNBENDF himgofacmcl = 1;
		HDEBCFJIHKA dboajocedjd = 13;
		bool gdbfccoipdc = 9;
	}
	uint32 EMCJNOFILKP = 6;
}

message EOIAPEFEDGE {
	int32 jfgjgceonbl = 15;
	int32 bkijgebhaia = 12;
	int32 nhiginhahpk = 3;
}

message KMHGELFOMHI {
	uint32 buff_id = 3;
	uint64 unique_id = 6;
	uint32 ngmdcnkoeek = 4;
}

message PNKLPCLEOFC {
	repeated KMHGELFOMHI buff_list = 9;
}

// BOOMAGLHPDD (7246)
message ClockParkGetOngoingScriptInfoScRsp {
	JJIIANKENHO fhfifpmijch = 13;
	uint32 ldheanpnkln = 5;
	string gigghhfceok = 8;
	uint32 hoimhjhjcke = 3;
	uint32 cojbebincml = 4;
	EOIAPEFEDGE gcpafpndpda = 7;
	uint32 script_id = 12;
	PNKLPCLEOFC rogue_buff_info = 6;
	uint32 ambcbclhihj = 1;
	uint32 retcode = 10;
	repeated uint32 fehdaiojlpn = 14;
	uint32 nohadgimnip = 9;
}

message BDCFFFAHDOJ {
}

message FGLJHLINHHL {
	GDFGFDNCFDG lknagoklogi = 6;
}

message LKGCFDCEFIK {
	bool is_win = 7;
	uint32 daelnjignjc = 15;
}

message MENHEEKGDAD {
	repeated uint32 avatar_id_list = 15;
}

message EPLNMMHBLAL {
	bool amcfkhmmjca = 13;
	uint32 gacha_random = 2;
}

message DKBPNCMHLFP {
	bool is_win = 11;
	uint32 daelnjignjc = 8;
}

message JFIEFFGOOHK {
}

// JMFGBHJAEEO (7245)
message ClockParkHandleWaitOperationCsReq {
	oneof BALNOHOCMLM {
		BDCFFFAHDOJ elljmefgpde = 5;
		FGLJHLINHHL lkifmdigfpb = 1;
		LKGCFDCEFIK dpkeipmampi = 8;
		MENHEEKGDAD blhklnjiklj = 13;
		EPLNMMHBLAL hficfnbidbn = 6;
		DKBPNCMHLFP hfncognbbgd = 3;
		JFIEFFGOOHK mfkdkbominf = 12;
		uint32 ldheanpnkln = 14;
	}
	uint32 EMCJNOFILKP = 10;
	uint32 script_id = 2;
}

message NPAFMPPKNDD {
	bool bgfekhfmeih = 12;
	uint32 progress = 5;
	bool cafinjlacpj = 10;
	uint32 script_id = 3;
	ItemList reward = 9;
	uint32 ambcbclhihj = 2;
	uint32 cojbebincml = 6;
}

// AJKIDGFELPA (7228)
message ClockParkHandleWaitOperationScRsp {
	uint32 khbpeiddifd = 4;
	ClockParkPlayStatus akbdfepanim = 7;
	uint32 clpdjjocich = 15;
	uint32 retcode = 6;
	SceneBattleInfo battle_info = 10;
	uint32 emcjnofilkp = 9;
}

// CFCNEAJGACD (7210)
message ClockParkQuitScriptCsReq {
	bool hjcoaohmohk = 2;
	uint32 script_id = 5;
}

// ILCFIKELNND (7248)
message ClockParkQuitScriptScRsp {
	uint32 retcode = 7;
}

// LFCPNEKAPHK (7204)
message ClockParkBattleEndScNotify {
	uint32 emcjnofilkp = 6;
	uint32 retcode = 10;
}

// EHKHHMLFHFL (7211)
message ClockParkUseBuffCsReq {
	uint32 emcjnofilkp = 9;
	uint64 unique_id = 12;
	uint32 script_id = 1;
}

// GBBNCCNFHNN (7206)
message ClockParkUseBuffScRsp {
	oneof EMPOGLPMAED {
		GDFGFDNCFDG lknagoklogi = 324;
		EOIAPEFEDGE gcpafpndpda = 99;
	}
	uint32 EMCJNOFILKP = 3;
	uint32 script_id = 1;
	uint32 retcode = 8;
	PNKLPCLEOFC rogue_buff_info = 15;
}

// EEJAPGGOCBD (7235)
message ClockParkFinishScriptScNotify {
	NPAFMPPKNDD rogue_finish_info = 4;
}

enum MissionStatus {
	MISSION_NONE = 0;
	MISSION_DOING = 1;
	MISSION_FINISH = 2;
	MISSION_PREPARED = 3;
}

enum MessageSectionStatus {
	MESSAGE_SECTION_NONE = 0;
	MESSAGE_SECTION_DOING = 1;
	MESSAGE_SECTION_FINISH = 2;
	MESSAGE_SECTION_FROZEN = 3;
}

enum MessageGroupStatus {
	MESSAGE_GROUP_NONE = 0;
	MESSAGE_GROUP_DOING = 1;
	MESSAGE_GROUP_FINISH = 2;
	MESSAGE_GROUP_FROZEN = 3;
}

enum BattleRecordType {
	BATTLE_RECORD_NONE = 0;
	BATTLE_RECORD_CHALLENGE = 1;
	BATTLE_RECORD_ROGUE = 2;
}

enum RebattleType {
	REBATTLE_TYPE_NONE = 0;
	REBATTLE_TYPE_REBATTLE_MIDWAY = 1;
	REBATTLE_TYPE_REBATTLE_LOSE = 2;
	REBATTLE_TYPE_REBATTLE_MIDWAY_LINEUP = 3;
	REBATTLE_TYPE_REBATTLE_LOSE_LINEUP = 4;
	REBATTLE_TYPE_QUIT_MIDWAY = 5;
	REBATTLE_TYPE_QUIT_LOSE = 6;
}

message Item {
	uint32 MainAffixId = 14;
	uint32 Promotion = 7;
	uint32 UniqueId = 13;
	uint32 Level = 8;
	uint32 ItemId = 9;
	uint32 Num = 15;
	uint32 Rank = 2;
}

message ItemList {
	repeated Item ItemList_ = 4;
}

message PileItem {
	uint32 ItemNum = 15;
	uint32 ItemId = 12;
}

message ItemCost {
	oneof itemCase_ {
		PileItem PileItem = 10;
		uint32 EquipmentUniqueId = 5;
		uint32 RelicUniqueId = 4;
	}
}

message ItemCostData {
	repeated ItemCost item_list = 14;
}

message BGBDLOPNMAA {
	uint32 item_count = 5;
	uint32 item_id = 12;
}

message GJPLDENOPEN {
	uint32 exp = 15;
	uint32 level = 8;
	uint32 tid = 3;
	uint32 promotion = 12;
	uint32 rank = 10;
}

message KPGPGKJDFII {
	repeated RelicAffix sub_affix_list = 1;
	uint32 exp = 12;
	uint32 level = 13;
	uint32 tid = 4;
	uint32 main_affix_id = 14;
}

message APLMIDIJFFA {
	oneof IPFIEHLNEON {
		BGBDLOPNMAA kohgaokngji = 8;
		GJPLDENOPEN dcccihekhfo = 9;
		KPGPGKJDFII ghpghllemfg = 13;
	}
}

message JPMECEBAHOA {
	repeated APLMIDIJFFA item_list = 13;
}

message Vector {
	sint32 y = 7;
	sint32 z = 3;
	sint32 x = 6;
}

message MotionInfo {
	Vector rot = 11;
	Vector pos = 12;
}

message Vector4 {
	float x = 4;
	float y = 3;
	float z = 15;
	float w = 6;
}

message SceneMonsterWaveParam {
	uint32 level = 10;
	uint32 elite_group = 2;
	uint32 cbiaoplipkj = 5;
	uint32 hard_level_group = 13;
}

message SceneMonsterData {
	uint32 cur_hp = 13;
	uint32 max_hp = 14;
	uint32 monster_id = 15;
}

message SceneMonsterWave {
	repeated ItemList olfgemadaco = 3;
	uint32 battle_wave_id = 5;
	repeated SceneMonsterData monster_list = 1;
	uint32 battle_stage_id = 15;
	SceneMonsterWaveParam wave_param = 11;
}

message SceneBattleInfo {
	uint32 world_level = 1;
	repeated BattleEventBattleInfo battle_event = 928;
	repeated BattleBuff buff_list = 13;
	EvolveBuildBattleInfo adafaohflma = 1079;
	bool nbgogjjojma = 3;
	uint32 battle_id = 9;
	uint32 stage_id = 15;
	uint32 cycle_count = 14;
	repeated SceneMonsterWave monster_wave_list = 4;
	BattleRogueMagicInfo battle_rogue_magic_info = 1993;
	repeated BattleAvatar battle_avatar_list = 10;
	OLGKJDLMEIO gddalcgoobg = 796;
	map<uint32, BattleTargetList> battle_target_info = 1840;
	uint32 logic_random_seed = 12;
	uint32 makigfemknm = 5;
	NMKAECDMHOP igpipnaaebj = 1824;
}

message AetherDivideBattleInfo {
	uint32 logic_random_seed = 11;
	repeated AetherAvatarInfo battle_avatar_list = 9;
	bool nbgogjjojma = 4;
	uint32 stage_id = 1;
	uint32 battle_id = 8;
	repeated BattleBuff buff_list = 14;
	repeated SceneMonsterWave monster_wave_list = 5;
}

message CKHGFCABIFI {
	uint32 assist_uid = 11;
	AvatarType avatar_type = 3;
	uint32 id = 12;
}

enum ContentPackageStatus {
	ContentPackageStatus_None = 0;
	ContentPackageStatus_Init = 1;
	ContentPackageStatus_Doing = 2;
	ContentPackageStatus_Finished = 3;
	ContentPackageStatus_Release = 4;
}

// KHDDLFHACDF
enum CmdContentPackageType {
	CmdContentPackageTypeNone = 0;
	CmdContentPackageGetDataScRsp = 7550;
	CmdContentPackageUnlockScRsp = 7515;
	CmdContentPackageGetDataCsReq = 7512;
	CmdContentPackageSyncDataScNotify = 7530;
	CmdContentPackageUnlockCsReq = 7523;
	CmdContentPackageTransferScNotify = 7549;
}

// ODIKBIEFAMP (7512)
message ContentPackageGetDataCsReq {
}

// DGHPIMKHCMK (7550)
message ContentPackageGetDataScRsp {
	ContentPackageData data = 9;
	uint32 retcode = 8;
}

message ContentPackageInfo {
	uint32 content_id = 15;
	ContentPackageStatus status = 1;
}

message ContentPackageData {
	uint32 cur_content_id = 1;
	repeated ContentPackageInfo content_package_list = 11;
}

// JAMCGCANOAH (7530)
message ContentPackageSyncDataScNotify {
	ContentPackageData data = 3;
}

// FHLLOBGLHBH (7523)
message ContentPackageUnlockCsReq {
	uint32 content_id = 6;
}

// OFHNOBIAIPE (7515)
message ContentPackageUnlockScRsp {
	uint32 content_id = 6;
	uint32 retcode = 12;
}

// NPMEAAEJMPM (7549)
message ContentPackageTransferScNotify {
}

// KBKPPDINMFH
enum CmdDailyActiveType {
	CmdDailyActiveTypeNone = 0;
	CmdTakeApRewardCsReq = 3336;
	CmdDailyActiveInfoNotify = 3367;
	CmdTakeApRewardScRsp = 3395;
	CmdTakeAllApRewardScRsp = 3352;
	CmdTakeAllApRewardCsReq = 3328;
	CmdGetDailyActiveInfoCsReq = 3384;
	CmdGetDailyActiveInfoScRsp = 3327;
}

message DailyActivityInfo {
	bool moiglinhnma = 9;
	uint32 world_level = 8;
	uint32 level = 6;
	uint32 hpidkaddamd = 13;
}

// EBHFNEHDLLB (3336)
message TakeApRewardCsReq {
	uint32 level = 2;
}

// OIEOMLJCMKD (3395)
message TakeApRewardScRsp {
	ItemList reward = 7;
	uint32 retcode = 9;
	uint32 level = 4;
}

// HCMFOAMAOBG (3384)
message GetDailyActiveInfoCsReq {
}

// FAMIKBPHPCD (3327)
message GetDailyActiveInfoScRsp {
	uint32 hpidkaddamd = 5;
	repeated DailyActivityInfo gahgdklgncn = 10;
	uint32 retcode = 8;
	repeated uint32 bjgfkfdlgjp = 2;
}

// CJPOANKFHIL (3367)
message DailyActiveInfoNotify {
	uint32 hpidkaddamd = 13;
	repeated uint32 bjgfkfdlgjp = 8;
	repeated DailyActivityInfo gahgdklgncn = 7;
}

// IGAIEDFOOAA (3328)
message TakeAllApRewardCsReq {
}

// DHFDKFCGOBD (3352)
message TakeAllApRewardScRsp {
	ItemList reward = 3;
	repeated uint32 pfhlbogfblc = 6;
	uint32 retcode = 15;
}

// DCCJLNEOHGJ
enum CmdDrinkMakerType {
	CmdDrinkMakerTypeNone = 0;
	CmdEndDrinkMakerSequenceCsReq = 6997;
	CmdEndDrinkMakerSequenceScRsp = 6986;
	CmdDrinkMakerChallengeScRsp = 6992;
	CmdMakeMissionDrinkCsReq = 6985;
	CmdDrinkMakerChallengeCsReq = 6988;
	CmdMakeDrinkCsReq = 6987;
	CmdDrinkMakerUpdateTipsNotify = 6996;
	CmdGetDrinkMakerDataScRsp = 6995;
	CmdDrinkMakerDayEndScNotify = 6982;
	CmdGetDrinkMakerDataCsReq = 7000;
	CmdMakeDrinkScRsp = 6983;
	CmdMakeMissionDrinkScRsp = 6990;
}

message DrinkMakerGuest {
	repeated uint32 UnlockedFavorTagList = 8;
	uint32 Faith = 4;
	uint32 GuestId = 1;
}

message HHIINBEPCPI {
	uint32 ikgomibbenf = 10;
	uint32 opkeenhpkeo = 8;
	uint32 omghahgggfa = 5;
	uint32 cnlldmcogbp = 15;
	repeated uint32 jaodopdgogl = 1;
}

message AGDODAPFDHD {
	bool is_succ = 3;
	uint32 echmcjcaooh = 6;
}

// ICDCMNGOLBJ (7000)
message GetDrinkMakerDataCsReq {
}

// HLDMELLMFEO (6995)
message GetDrinkMakerDataScRsp {
	repeated DrinkMakerGuest hbkbpabjfmp = 10;
	uint32 exp = 11;
	uint32 bifaoeinimi = 9;
	uint32 level = 12;
	uint32 dlgekhmihjk = 4;
	uint32 retcode = 6;
	repeated uint32 ahcajgliomj = 1;
	HHIINBEPCPI lmpbdddeblc = 2;
	uint32 gaibjdoaimd = 14;
	uint32 pbaidonbjek = 3;
}

// EALONFOJBDG (6987)
message MakeDrinkCsReq {
	HHIINBEPCPI jbhnfhocffp = 11;
	uint32 gaibjdoaimd = 15;
}

// MakeDrinkScRsp (6983)
message MakeDrinkScRsp {
	bool IsSucc = 13;
	uint32 NextChatId = 4;
	uint32 retcode = 6;
}

// AEIDPEHEAOL (6997)
message EndDrinkMakerSequenceCsReq {
}

// EndDrinkMakerSequenceScRsp (6986)
message EndDrinkMakerSequenceScRsp {
	uint32 retcode = 12;
	DrinkMakerGuest Guest = 13;
	repeated AGDODAPFDHD RequestList = 15;
	uint32 Level = 4;
	ItemList Reward = 3;
	uint32 Exp = 7;
	uint32 Tips = 5;
	uint32 NextSequenceId = 10;
}

// GJCJEAEKFEN (6985)
message MakeMissionDrinkCsReq {
	bool is_save = 14;
	HHIINBEPCPI jbhnfhocffp = 9;
	uint32 echmcjcaooh = 13;
}

// MakeMissionDrinkScRsp (6990)
message MakeMissionDrinkScRsp {
	uint32 retcode = 9;
	bool IsSucc = 6;
	bool IsSave = 10;
	HHIINBEPCPI CustomDrink = 1;
}

// IPBHGKNKOMB (6982)
message DrinkMakerDayEndScNotify {
	uint32 diflohdmggk = 1;
}

// DKIHMJEJNPJ (6988)
message DrinkMakerChallengeCsReq {
	HHIINBEPCPI jbhnfhocffp = 15;
	uint32 challenge_id = 2;
}

// LHBBPIAJJCA (6992)
message DrinkMakerChallengeScRsp {
	ItemList reward = 8;
	bool is_succ = 15;
	uint32 challenge_id = 7;
	uint32 retcode = 6;
}

// COEIKJNFFCD (6996)
message DrinkMakerUpdateTipsNotify {
	uint32 dlgekhmihjk = 9;
}

// DNKDKMABMLF
enum CmdEraFlipperType {
	CmdEraFlipperTypeNone = 0;
	CmdEnterEraFlipperRegionCsReq = 6559;
	CmdEraFlipperDataChangeScNotify = 6597;
	CmdResetEraFlipperDataCsReq = 6565;
	CmdChangeEraFlipperDataScRsp = 6573;
	CmdResetEraFlipperDataScRsp = 6599;
	CmdChangeEraFlipperDataCsReq = 6580;
	CmdGetEraFlipperDataCsReq = 6562;
	CmdGetEraFlipperDataScRsp = 6600;
	CmdEnterEraFlipperRegionScRsp = 6593;
}

message AFOJLJPLNCJ {
	uint32 state = 1;
	uint32 fdggllhcpli = 3;
}

message BOOEDABNMMB {
	repeated AFOJLJPLNCJ epimpaieogi = 1;
}

// AMECNOPGJJO (6562)
message GetEraFlipperDataCsReq {
}

// BKMBHAPLBEB (6600)
message GetEraFlipperDataScRsp {
	BOOEDABNMMB data = 4;
	uint32 retcode = 7;
}

// MJMBPIDCICL (6580)
message ChangeEraFlipperDataCsReq {
	BOOEDABNMMB data = 2;
}

// FJAHLAAAFBO (6573)
message ChangeEraFlipperDataScRsp {
	uint32 retcode = 1;
	BOOEDABNMMB data = 3;
}

// CFCCCBKINHP (6565)
message ResetEraFlipperDataCsReq {
	bool opilecflapf = 15;
}

// FJJOLNANOLD (6599)
message ResetEraFlipperDataScRsp {
	uint32 retcode = 5;
	BOOEDABNMMB data = 12;
	bool opilecflapf = 8;
}

// CEDCFKLCBAN (6559)
message EnterEraFlipperRegionCsReq {
	uint32 state = 13;
	uint32 fdggllhcpli = 15;
}

// HBHEFGCCHDL (6593)
message EnterEraFlipperRegionScRsp {
	uint32 retcode = 5;
	uint32 fdggllhcpli = 9;
}

// LKLEIDPHDIN (6597)
message EraFlipperDataChangeScNotify {
	uint32 floor_id = 11;
	BOOEDABNMMB data = 13;
}

// GFFCFDJJHND
enum CmdEvolveBuildType {
	CmdEvolveBuildNone = 0;
	CmdEvolveBuildReRandomStageCsReq = 7128;
	CmdEvolveBuildStartStageScRsp = 7149;
	CmdEvolveBuildShopAbilityDownScRsp = 7111;
	CmdEvolveBuildShopAbilityDownCsReq = 7140;
	CmdEvolveBuildStartLevelScRsp = 7123;
	CmdEvolveBuildShopAbilityUpCsReq = 7117;
	CmdEvolveBuildStartLevelCsReq = 7130;
	CmdEvolveBuildFinishScNotify = 7145;
	CmdEvolveBuildQueryInfoCsReq = 7112;
	CmdEvolveBuildCoinNotify = 7114;
	CmdEvolveBuildTakeExpRewardScRsp = 7135;
	CmdEvolveBuildLeaveCsReq = 7147;
	CmdEvolveBuildStartStageCsReq = 7115;
	CmdEvolveBuildGiveupCsReq = 7109;
	CmdEvolveBuildShopAbilityUpScRsp = 7104;
	CmdEvolveBuildTakeExpRewardCsReq = 7106;
	CmdEvolveBuildReRandomStageScRsp = 7110;
	CmdEvolveBuildUnlockInfoNotify = 7142;
	CmdEvolveBuildShopAbilityResetCsReq = 7118;
	CmdEvolveBuildGiveupScRsp = 7143;
	CmdEvolveBuildQueryInfoScRsp = 7150;
	CmdEvolveBuildLeaveScRsp = 7146;
	CmdEvolveBuildShopAbilityResetScRsp = 7122;
}

enum CLCHCLDHIMA {
	EVOLVE_PERIOD_NONE = 0;
	EVOLVE_PERIOD_FIRST = 1;
	EVOLVE_PERIOD_SECOND = 2;
	EVOLVE_PERIOD_THIRD = 3;
	EVOLVE_PERIOD_EXTRA = 4;
}

enum LJGIADHJLHP {
	EVOLVE_BATTLE_RESULT_NONE = 0;
	EVOLVE_BATTLE_RESULT_WIN = 1;
	EVOLVE_BATTLE_RESULT_ALL_AVATAR_DEAD = 2;
	EVOLVE_BATTLE_RESULT_NO_DEAD_LINE = 3;
	EVOLVE_BATTLE_RESULT_QUIT = 4;
}

message EvolveBuildAvatar {
	AvatarType AvatarType = 10;
	uint32 AvatarId = 3;
	double Damage = 2;
}

message EvolveBuildLevelInfo {
	repeated BattleTarget BattleTargetList = 1;
	EvolveBuildBattleInfo BattleInfo = 3;
	repeated EvolveBuildAvatar AvatarList = 5;
	uint32 RoundCnt = 11;
	repeated uint32 PeriodIdList = 2;
	uint32 CurGameExp = 8;
}

message LMDEKCEFMJC {
	uint32 max_score = 2;
	uint32 level_id = 3;
	uint32 daofmfkknba = 10;
}

message ENPCBHHGEGJ {
	uint32 dhdkhmfcjma = 9;
	uint32 level = 2;
}

message GCNDMGBJHPN {
	bool hinobhhibaa = 15;
	uint32 level_id = 3;
	bool ohdlmbegcib = 8;
	repeated uint32 lmhdmedoocp = 13;
}

message ODABNNDOIGE {
	bool bohcemclfll = 14;
	uint32 item_value = 1;
	uint32 cbfncmiaonh = 12;
	uint32 exp = 9;
	repeated uint32 mdppfpbfkfm = 2;
	repeated GCNDMGBJHPN jpnmhgfimbm = 3;
	repeated LMDEKCEFMJC hiidnfafcbp = 15;
	repeated ENPCBHHGEGJ lahjfgaglem = 8;
	bool fcnknboicoh = 11;
	repeated uint32 joibikheooh = 10;
}

// IAIODMJEMOD (7112)
message EvolveBuildQueryInfoCsReq {
}

// BAEHAEOFPDF (7150)
message EvolveBuildQueryInfoScRsp {
	uint32 retcode = 12;
	ODABNNDOIGE rogue_current_info = 2;
	EvolveBuildLevelInfo level_info = 15;
}

// CBAMOEOLLED (7130)
message EvolveBuildStartLevelCsReq {
	repeated EvolveBuildAvatar avatar_list = 7;
	DHOOCHKMPBP cieghnpgpgi = 12;
	uint32 level_id = 9;
}

// LGDAJLHJCKK (7123)
message EvolveBuildStartLevelScRsp {
	uint32 retcode = 9;
	SceneBattleInfo fdkkjodddlf = 8;
	EvolveBuildLevelInfo level_info = 15;
}

// AMAICBBJNFB (7115)
message EvolveBuildStartStageCsReq {
	uint32 level_id = 9;
}

// BBABIJNGGOD (7149)
message EvolveBuildStartStageScRsp {
	uint32 retcode = 7;
	SceneBattleInfo fdkkjodddlf = 11;
	EvolveBuildLevelInfo level_info = 12;
}

// EHKPFBGAMEH (7109)
message EvolveBuildGiveupCsReq {
}

// ACKIFJDOPKN (7143)
message EvolveBuildGiveupScRsp {
	uint32 retcode = 9;
	EvolveBuildLevelInfo level_info = 2;
}

// NMPBIHJNFLP (7147)
message EvolveBuildLeaveCsReq {
}

// GFENNLHONCE (7146)
message EvolveBuildLeaveScRsp {
	uint32 retcode = 8;
	EvolveBuildLevelInfo level_info = 14;
}

// EvolveBuildFinishScNotify (7145)
message EvolveBuildFinishScNotify {
	uint32 Score = 14;
	LJGIADHJLHP BattleResultType = 8;
	uint32 Coin = 2;
	uint32 CurPeriodType = 11;
	EvolveBuildLevelInfo LevelInfo = 7;
	bool IsLose = 12;
	uint32 Exp = 4;
	uint32 LevelId = 1;
	uint32 wave = 6;
}

// HEANGCFNDFL (7128)
message EvolveBuildReRandomStageCsReq {
	uint32 level_id = 9;
}

// GPPGHLDNKIN (7110)
message EvolveBuildReRandomStageScRsp {
	GCNDMGBJHPN hepbeglclbp = 14;
	uint32 retcode = 6;
}

// JOJDKKAECFJ (7117)
message EvolveBuildShopAbilityUpCsReq {
	uint32 level = 15;
	uint32 dhdkhmfcjma = 1;
}

// BDIOKBBLDFB (7104)
message EvolveBuildShopAbilityUpScRsp {
	uint32 level = 1;
	uint32 retcode = 10;
	uint32 dhdkhmfcjma = 7;
}

// ACELGIAKFBB (7140)
message EvolveBuildShopAbilityDownCsReq {
	uint32 level = 14;
	uint32 dhdkhmfcjma = 6;
}

// ILJAPCDBHLG (7111)
message EvolveBuildShopAbilityDownScRsp {
	uint32 retcode = 15;
	uint32 level = 10;
	uint32 dhdkhmfcjma = 11;
}

// DKFLLOCCFLL (7106)
message EvolveBuildTakeExpRewardCsReq {
}

// HOGJAEFBOFP (7135)
message EvolveBuildTakeExpRewardScRsp {
	uint32 retcode = 1;
	ItemList reward = 8;
	uint32 cbfncmiaonh = 14;
}

// MPPOHOCNMCH (7118)
message EvolveBuildShopAbilityResetCsReq {
}

// DOLLPPDAOBF (7122)
message EvolveBuildShopAbilityResetScRsp {
	uint32 item_value = 5;
	repeated ENPCBHHGEGJ lahjfgaglem = 8;
	uint32 retcode = 14;
}

// FEFPKDJDIAA (7114)
message EvolveBuildCoinNotify {
	uint32 item_value = 15;
}

// CMPJOMONDJJ (7142)
message EvolveBuildUnlockInfoNotify {
	bool fcnknboicoh = 10;
	bool bohcemclfll = 8;
}

// IDDMMKCEHPP
enum CmdExpeditionType {
	CmdExpeditionTypeNone = 0;
	CmdAcceptMultipleExpeditionCsReq = 2505;
	CmdAcceptActivityExpeditionScRsp = 2534;
	CmdCancelActivityExpeditionScRsp = 2546;
	CmdTakeMultipleExpeditionRewardCsReq = 2519;
	CmdCancelExpeditionScRsp = 2528;
	CmdExpeditionDataChangeScNotify = 2524;
	CmdTakeMultipleActivityExpeditionRewardCsReq = 2507;
	CmdTakeMultipleActivityExpeditionRewardScRsp = 2553;
	CmdAcceptActivityExpeditionCsReq = 2593;
	CmdGetExpeditionDataScRsp = 2595;
	CmdAcceptMultipleExpeditionScRsp = 2575;
	CmdTakeExpeditionRewardScRsp = 2574;
	CmdTakeActivityExpeditionRewardCsReq = 2525;
	CmdGetExpeditionDataCsReq = 2536;
	CmdTakeExpeditionRewardCsReq = 2552;
	CmdTakeActivityExpeditionRewardScRsp = 2596;
	CmdCancelActivityExpeditionCsReq = 2543;
	CmdTakeMultipleExpeditionRewardScRsp = 2526;
	CmdAcceptExpeditionScRsp = 2527;
	CmdCancelExpeditionCsReq = 2567;
	CmdAcceptExpeditionCsReq = 2584;
}

message ExpeditionInfo {
	repeated uint32 avatar_id_list = 5;
	uint32 total_duration = 8;
	uint32 id = 6;
	int64 start_expedition_time = 4;
}

message ActivityExpedition {
	uint32 kjajhhlobhc = 11;
	repeated uint32 avatar_id_list = 5;
	int64 start_expedition_time = 14;
	uint32 bdndenhpded = 10;
	uint32 ddchlmkamhb = 13;
	uint32 id = 6;
}

// PFFKOMBLLBJ (2536)
message GetExpeditionDataCsReq {
}

// NHAOEANLIHK (2595)
message GetExpeditionDataScRsp {
	repeated uint32 opkhgkibjjh = 13;
	repeated ActivityExpedition activity_expedition_info = 1;
	repeated uint32 cnekkkondbn = 11;
	repeated ExpeditionInfo expedition_info = 3;
	repeated uint32 jbfnfgbpldb = 15;
	uint32 retcode = 9;
	uint32 total_expedition_count = 7;
}

// OMCBPJFAIEE (2584)
message AcceptExpeditionCsReq {
	ExpeditionInfo accept_expedition = 12;
}

// IFJBKOMEKIK (2527)
message AcceptExpeditionScRsp {
	ExpeditionInfo accept_expedition = 3;
	uint32 retcode = 11;
}

// FDNDGJPNBIL (2505)
message AcceptMultipleExpeditionCsReq {
	repeated ExpeditionInfo expedition = 14;
}

// DPEAKDDPAHJ (2575)
message AcceptMultipleExpeditionScRsp {
	uint32 retcode = 3;
	repeated ExpeditionInfo accept_multi_expedition = 5;
}

// JBLOGGGLFEK (2567)
message CancelExpeditionCsReq {
	uint32 expedition_id = 8;
}

// CHPMLOKGOFI (2528)
message CancelExpeditionScRsp {
	uint32 expedition_id = 6;
	uint32 retcode = 12;
}

// IKDJKNDLNJH (2552)
message TakeExpeditionRewardCsReq {
	uint32 expedition_id = 11;
}

// IGCGEOBCCAE (2574)
message TakeExpeditionRewardScRsp {
	ItemList reward = 3;
	ItemList extra_reward = 12;
	uint32 retcode = 2;
	uint32 expedition_id = 6;
}

// JHKNMNFPKDI (2519)
message TakeMultipleExpeditionRewardCsReq {
	repeated uint32 take_multi_expedition = 11;
}

// MLFPJOENOJP (2526)
message TakeMultipleExpeditionRewardScRsp {
	repeated ItemList jlgdcnhnkkb = 9;
	ItemList extra_reward = 1;
	ItemList reward = 7;
	repeated ItemList dkmcblihgkh = 5;
	repeated uint32 reward_expedition = 13;
	uint32 retcode = 2;
}

// EBCALHPEOFC (2524)
message ExpeditionDataChangeScNotify {
	uint32 total_expedition_count = 7;
	repeated ActivityExpedition activity_expedition_info = 10;
	repeated uint32 jbfnfgbpldb = 9;
	repeated uint32 opkhgkibjjh = 3;
	repeated ExpeditionInfo expedition_info = 12;
}

// MENFFJPPMPM (2593)
message AcceptActivityExpeditionCsReq {
	ActivityExpedition kkjjnpcjjmb = 13;
}

// MACEHJDJCEA (2534)
message AcceptActivityExpeditionScRsp {
	uint32 retcode = 12;
	ActivityExpedition kkjjnpcjjmb = 2;
}

// JNODIOPIDGD (2543)
message CancelActivityExpeditionCsReq {
	uint32 jiegakieclj = 4;
}

// IFONJILLACJ (2546)
message CancelActivityExpeditionScRsp {
	uint32 jiegakieclj = 4;
	uint32 retcode = 12;
}

// FFAJMKFPFJA (2525)
message TakeActivityExpeditionRewardCsReq {
	uint32 jiegakieclj = 11;
}

// AAOKODGHNCK (2596)
message TakeActivityExpeditionRewardScRsp {
	ItemList reward = 14;
	uint32 jiegakieclj = 15;
	ItemList extra_reward = 3;
	uint32 score_id = 9;
	uint32 retcode = 5;
}

// PHKEPDAKLNL (2507)
message TakeMultipleActivityExpeditionRewardCsReq {
	repeated uint32 jjnnkjhfakj = 5;
}

message HJICFEEEJDK {
	uint32 score_id = 9;
	ItemList reward = 5;
	uint32 jiegakieclj = 13;
	ItemList extra_reward = 15;
}

// JEAIKCIFDPE (2553)
message TakeMultipleActivityExpeditionRewardScRsp {
	repeated HJICFEEEJDK hcbflbjmgjj = 12;
	uint32 retcode = 9;
}

// PKLOFCCIGBJ
enum CmdFantasticStoryActivityType {
	CmdFantasticStoryActivityTypeNone = 0;
	CmdFinishChapterScNotify = 4984;
	CmdEnterFantasticStoryActivityStageScRsp = 4967;
	CmdFantasticStoryActivityBattleEndScNotify = 4928;
	CmdGetFantasticStoryActivityDataScRsp = 4995;
	CmdEnterFantasticStoryActivityStageCsReq = 4927;
	CmdGetFantasticStoryActivityDataCsReq = 4936;
}

message CHDBOOKCOBE {
	repeated uint32 buff_list = 11;
	repeated OLHLJPHENMO avatar_list = 13;
}

message ECEDILGLGIK {
	repeated uint32 afpfienhgma = 12;
	repeated uint32 lomdpgjifab = 1;
	map<uint32, uint32> eipcjkbfpfl = 3;
	repeated uint32 ahfnoadpenj = 9;
	uint32 hemobibindg = 6;
	map<uint32, CHDBOOKCOBE> kcdafhdlhoj = 2;
	repeated uint32 fpnabdepphi = 13;
}

// EJNMNOIFDAO (4936)
message GetFantasticStoryActivityDataCsReq {
	uint32 hemobibindg = 9;
}

// FCFGIBEKEGJ (4995)
message GetFantasticStoryActivityDataScRsp {
	ECEDILGLGIK ljnodemaecd = 4;
	uint32 retcode = 5;
}

// FGEOBNDMGEM (4984)
message FinishChapterScNotify {
	ECEDILGLGIK ljnodemaecd = 10;
}

message OLHLJPHENMO {
	AvatarType avatar_type = 5;
	uint32 avatar_id = 10;
}

// JPOGEJCENLD (4927)
message EnterFantasticStoryActivityStageCsReq {
	uint32 battle_id = 5;
	repeated OLHLJPHENMO avatar_list = 9;
	uint32 hemobibindg = 8;
	repeated uint32 buff_list = 13;
}

// PMDJHPAPNNG (4967)
message EnterFantasticStoryActivityStageScRsp {
	uint32 hemobibindg = 7;
	uint32 retcode = 4;
	SceneBattleInfo battle_info = 3;
	uint32 battle_id = 12;
}

// OGDMFBHJILK (4928)
message FantasticStoryActivityBattleEndScNotify {
	uint32 hemobibindg = 8;
	uint32 battle_id = 9;
	uint32 cgmjpfnkccj = 11;
}

// HFMKNNECELL
enum CmdFeverTimeActivityType {
	CmdFeverTimeActivityTypeNone = 0;
	CmdGetFeverTimeActivityDataScRsp = 7151;
	CmdFeverTimeActivityBattleEndScNotify = 7153;
	CmdEnterFeverTimeActivityStageScRsp = 7160;
	CmdEnterFeverTimeActivityStageCsReq = 7159;
	CmdGetFeverTimeActivityDataCsReq = 7158;
}

enum KHLNFKMNPGN {
	FEVER_TIME_BATTLE_RANK_C = 0;
	FEVER_TIME_BATTLE_RANK_B = 1;
	FEVER_TIME_BATTLE_RANK_A = 2;
	FEVER_TIME_BATTLE_RANK_S = 3;
	FEVER_TIME_BATTLE_RANK_SS = 4;
}

message ODMGNJFGMLP {
	uint32 fieadmgafnn = 14;
	KHLNFKMNPGN opjidonmken = 13;
	uint32 nffdgoljohi = 1;
}

// OHBCFPMFAGL (7158)
message GetFeverTimeActivityDataCsReq {
}

// AKFNMHFLMEM (7151)
message GetFeverTimeActivityDataScRsp {
	uint32 retcode = 5;
	repeated ODMGNJFGMLP omlnmddlkkm = 14;
}

// ODMNFBJPKBO (7153)
message FeverTimeActivityBattleEndScNotify {
	uint32 ehbclghnjgb = 8;
	KHLNFKMNPGN oojpbkmhjac = 2;
	uint32 bfjaifdedbe = 4;
	uint32 id = 6;
}

// KBKMNOOPKOG (7159)
message EnterFeverTimeActivityStageCsReq {
	repeated FeverTimeAvatar avatar_list = 4;
	uint32 nbhbdnajfmc = 7;
	uint32 id = 10;
	uint32 gmfdhajcemh = 11;
}

// PANKDAGMMGC (7160)
message EnterFeverTimeActivityStageScRsp {
	uint32 retcode = 12;
	uint32 id = 10;
	SceneBattleInfo battle_info = 8;
}

// HNPICADLHJG
enum CmdFightType {
	CmdFightTypeNone = 0;
	CmdFightKickOutScNotify = 30027;
	CmdFightEnterScRsp = 30095;
	CmdFightEnterCsReq = 30036;
	CmdFightSessionStopScNotify = 30052;
	CmdFightLeaveScNotify = 30084;
	CmdFightHeartBeatScRsp = 30028;
	CmdFightHeartBeatCsReq = 30067;
}

// PCBHACGGLFH (30036)
message FightEnterCsReq {
	uint32 uid = 15;
	uint64 jcohkliloki = 10;
	uint32 aodjndcpdid = 12;
	uint32 client_res_version = 4;
	uint32 nmlggombpok = 11;
	uint32 platform = 6;
	uint32 fclcccnbdlb = 1;
	string lnfophgbmgb = 7;
}

// HPHCNFGJJLA (30095)
message FightEnterScRsp {
	bool goepmaljcmi = 12;
	uint64 server_timestamp_ms = 15;
	uint32 retcode = 5;
	uint64 secret_key_seed = 7;
	uint32 nmlggombpok = 4;
}

// AICDONLEDKD (30084)
message FightLeaveScNotify {
	uint32 hgleadlijig = 9;
}

// CPGAOCANJDH (30027)
message FightKickOutScNotify {
	FightKickoutType kick_type = 2;
}

// JNJHNBOHGGF (30067)
message FightHeartBeatCsReq {
	uint64 client_time_ms = 13;
}

// DGKNFMIPLKG (30028)
message FightHeartBeatScRsp {
	uint64 client_time_ms = 13;
	uint32 retcode = 6;
	uint64 server_time_ms = 14;
}

// OMHOPCOOFOM (30052)
message FightSessionStopScNotify {
	GCIBOEOBJJH kcpfmjcknln = 8;
}

// GJNJCCMPKEF
enum CmdFightActivityType {
	CmdFightActivityTypeNone = 0;
	CmdEnterFightActivityStageScRsp = 3667;
	CmdEnterFightActivityStageCsReq = 3627;
	CmdFightActivityDataChangeScNotify = 3684;
	CmdTakeFightActivityRewardCsReq = 3628;
	CmdTakeFightActivityRewardScRsp = 3652;
	CmdGetFightActivityDataScRsp = 3695;
	CmdGetFightActivityDataCsReq = 3636;
}

message FightActivityGroup {
	uint32 PassedMaxDifficultyLevel = 13;
	repeated uint32 TakenDifficultyLevelRewardList = 12;
	uint32 GroupId = 6;
	uint32 EndlessMaxWave = 4;
}

// ALDLEMKEHHN (3636)
message GetFightActivityDataCsReq {
}

// CADGGLDLNCM (3695)
message GetFightActivityDataScRsp {
	repeated FightActivityGroup ebkemiejmkm = 5;
	uint32 retcode = 1;
	bool cplolhnjaho = 11;
	map<uint32, uint32> khgbgllgbfe = 3;
	uint32 world_level = 2;
}

// JJDOLEBPCFE (3684)
message FightActivityDataChangeScNotify {
	map<uint32, uint32> khgbgllgbfe = 13;
	repeated FightActivityGroup ebkemiejmkm = 6;
}

message HGNKIOALCBH {
	uint32 avatar_id = 8;
	AvatarType avatar_type = 12;
}

// BIFNJCLGAPN (3627)
message EnterFightActivityStageCsReq {
	repeated uint32 item_list = 10;
	repeated uint32 avatar_list = 7;
	uint32 ibafdobbegd = 4;
	repeated HGNKIOALCBH lpdmjmcockk = 5;
	uint32 group_id = 13;
}

// DCNPKGHMECF (3667)
message EnterFightActivityStageScRsp {
	SceneBattleInfo battle_info = 10;
	uint32 retcode = 2;
	uint32 ibafdobbegd = 1;
	uint32 group_id = 8;
}

// DNBLJEGDGBA (3628)
message TakeFightActivityRewardCsReq {
	uint32 group_id = 11;
	uint32 ibafdobbegd = 3;
}

// KIFHBDGECED (3652)
message TakeFightActivityRewardScRsp {
	uint32 ibafdobbegd = 3;
	uint32 group_id = 6;
	ItemList reward = 7;
	uint32 retcode = 13;
}

// EMMCCGKHOJC
enum CmdFightFestType {
	CmdFightFestTypeNone = 0;
	CmdFightFestUpdateCoinNotify = 7293;
	CmdStartFightFestCsReq = 7280;
	CmdGetFightFestDataCsReq = 7262;
	CmdFightFestScoreUpdateNotify = 7265;
	CmdStartFightFestScRsp = 7273;
	CmdFightFestUnlockSkillNotify = 7299;
	CmdFightFestUpdateChallengeRecordNotify = 7259;
	CmdGetFightFestDataScRsp = 7300;
}

enum LJCPEBPIBFL {
	FIGHT_FEST_BATTLE_RANK_C = 0;
	FIGHT_FEST_BATTLE_RANK_B = 1;
	FIGHT_FEST_BATTLE_RANK_A = 2;
	FIGHT_FEST_BATTLE_RANK_S = 3;
	FIGHT_FEST_BATTLE_RANK_SS = 4;
}

enum NODACJNFLIB {
	FIGHT_FEST_TYPE_NONE = 0;
	FIGHT_FEST_TYPE_MAIN = 1;
	FIGHT_FEST_TYPE_SCORE = 2;
	FIGHT_FEST_TYPE_CHALLENGE = 3;
	FIGHT_FEST_TYPE_TEACH = 4;
}

message DFEMDEPJEFI {
	LJCPEBPIBFL opjidonmken = 10;
	uint32 nffdgoljohi = 2;
	uint32 challenge_id = 3;
	uint32 gnamjnppnfd = 11;
}

// OPCKDFDOFLM (7262)
message GetFightFestDataCsReq {
}

// PEAFPKEPABO (7300)
message GetFightFestDataScRsp {
	uint32 retcode = 1;
	repeated uint32 bjamhdaaeha = 10;
	uint32 item_value = 13;
	repeated DFEMDEPJEFI challenge_list = 3;
	uint32 score_id = 14;
}

message JAPOEBKHHDL {
	AvatarType avatar_type = 3;
	uint32 id = 13;
}

// MAEDGOBLCAF (7280)
message StartFightFestCsReq {
	NODACJNFLIB type = 8;
	uint32 event_id = 1;
	repeated uint32 bjamhdaaeha = 4;
	repeated JAPOEBKHHDL avatar_list = 3;
	uint32 id = 15;
}

// LPMBKBOBAKB (7273)
message StartFightFestScRsp {
	SceneBattleInfo battle_info = 11;
	uint32 retcode = 15;
	uint32 event_id = 8;
	NODACJNFLIB type = 7;
	uint32 id = 12;
}

// NKHCGHLADOF (7265)
message FightFestScoreUpdateNotify {
	uint32 score_id = 12;
	uint32 ddbidgekhfk = 13;
}

// KCGBCIKCFBH (7299)
message FightFestUnlockSkillNotify {
	uint32 jkccniodmga = 2;
}

// ONOGPNDIDPI (7259)
message FightFestUpdateChallengeRecordNotify {
	uint32 nffdgoljohi = 9;
	LJCPEBPIBFL rank = 13;
	LJCPEBPIBFL jdfnljflmfj = 2;
	uint32 challenge_id = 6;
	uint32 bfjaifdedbe = 4;
}

// AJMAGHCAKBL (7293)
message FightFestUpdateCoinNotify {
	uint32 item_value = 15;
}

// GKIILKHJENB
enum CmdFightMathc3Type {
	CmdFightMathc3TypeNone = 0;
	CmdFightMatch3SwapCsReq = 30128;
	CmdFightMatch3ChatScNotify = 30134;
	CmdFightMatch3SwapScRsp = 30152;
	CmdFightMatch3DataScRsp = 30195;
	CmdFightMatch3TurnEndScNotify = 30167;
	CmdFightMatch3StartCountDownScNotify = 30184;
	CmdFightMatch3DataCsReq = 30136;
	CmdFightMatch3ForceUpdateNotify = 30143;
	CmdFightMatch3ChatCsReq = 30124;
	CmdFightMatch3OpponentDataScNotify = 30174;
	CmdFightMatch3ChatScRsp = 30193;
	CmdFightMatch3TurnStartScNotify = 30127;
}

enum OBOICHHNOAA {
	MATCH3_STATE_IDLE = 0;
	MATCH3_STATE_START = 1;
	MATCH3_STATE_MATCH = 2;
	MATCH3_STATE_GAME = 3;
	MATCH3_STATE_HALFTIME = 4;
	MATCH3_STATE_OVER = 5;
}

enum CKMJGCGAEEI {
	MATCH3_PLAYER_STATE_ALIVE = 0;
	MATCH3_PLAYER_STATE_DYING = 1;
	MATCH3_PLAYER_STATE_DEAD = 2;
	MATCH3_PLAYER_STATE_LEAVE = 3;
}

enum GMBHHEIELFC {
	EVENT_BEGIN = 0;
	EVENT_BREAK = 1;
	EVENT_FALL = 2;
	EVENT_REFRESH = 3;
	EVENT_BIRD_SKILL = 4;
	EVENT_ENV = 5;
	EVENT_SHUFFLE = 6;
	EVENT_SETTLE_TAG = 7;
}

message JFNDBKOGAAC {
	uint32 hp = 3;
	uint32 jfapdndchjc = 2;
	uint32 fokmjkdgeme = 4;
	uint32 score_id = 10;
	uint32 rank = 9;
	CKMJGCGAEEI state = 8;
	bool kbaeiekokng = 12;
	uint32 bcbjkkaojhl = 13;
}

message HKJACOBACDL {
	repeated JFNDBKOGAAC aahlhaglanp = 3;
	OBOICHHNOAA egppeoiopbh = 5;
	uint32 dbcemiifomi = 7;
	uint64 ohjndokponf = 13;
	repeated uint32 faadiigpged = 11;
	ABOIFBHJJJH iohaooialbo = 10;
	int32 migjlajogil = 2;
}

message HCOKPNBKACP {
	uint32 bieencfaaam = 9;
	uint32 emhfkcicpbo = 6;
}

message ABOIFBHJJJH {
	repeated uint32 dilimncaeko = 4;
	COKMEFOLDDH bnpfgbeclde = 15;
	uint32 kbmflpnpkoj = 10;
	uint32 bnpdieghdmo = 11;
	uint32 cur_hp = 9;
	uint32 cpegehhhiai = 1;
	uint32 npohcfojamh = 3;
	uint32 fjgjpjnnehj = 7;
	uint32 score_id = 13;
	uint32 nfllmhoeiip = 14;
	CKMJGCGAEEI bfmibfpfpmg = 8;
}

message KAJAGMGIEBG {
	ABOIFBHJJJH cilceklcdib = 5;
	GMBHHEIELFC gahceokfdlm = 11;
}

// DEKJMDLMKNA (30136)
message FightMatch3DataCsReq {
	int32 bjinfjnfonl = 6;
}

// BPKDEADIJMM (30195)
message FightMatch3DataScRsp {
	uint32 retcode = 11;
	HKJACOBACDL data = 8;
	repeated GDOHNMGABGE lhifalkbalm = 1;
}

// PDNFCALCFAI (30184)
message FightMatch3StartCountDownScNotify {
	HKJACOBACDL data = 6;
}

// COCNDPFFNIG (30127)
message FightMatch3TurnStartScNotify {
	HKJACOBACDL ldpomnnkhfn = 5;
}

// PEOCOJMKOGH (30167)
message FightMatch3TurnEndScNotify {
	HKJACOBACDL lfmiodiklle = 8;
	HKJACOBACDL bniigbgpbfd = 6;
}

// KHMEMPPJCFP (30128)
message FightMatch3SwapCsReq {
	repeated KAJAGMGIEBG ciidepdhnda = 10;
	HCOKPNBKACP ffemncnhifp = 12;
	HCOKPNBKACP cdbkaigobnc = 9;
	uint32 lhflcfnaopb = 6;
}

// GMMJOJIHKHA (30152)
message FightMatch3SwapScRsp {
	bool gjhbhnbpkmg = 6;
	uint32 retcode = 4;
	ABOIFBHJJJH idkjpdgjcdk = 11;
	uint32 lhflcfnaopb = 9;
}

// KKDNJKBOGDB (30174)
message FightMatch3OpponentDataScNotify {
	CKMJGCGAEEI state = 1;
	uint32 score_id = 3;
	uint32 hp = 2;
	uint32 dbcemiifomi = 4;
	uint32 bcbjkkaojhl = 8;
}

// HLMLHBIOIKJ (30124)
message FightMatch3ChatCsReq {
	uint32 neokoljpkkp = 8;
}

// GPLCIPMFMMK (30193)
message FightMatch3ChatScRsp {
	uint32 retcode = 9;
	uint32 neokoljpkkp = 2;
}

// EOONNCMOHHB (30134)
message FightMatch3ChatScNotify {
	uint32 neokoljpkkp = 13;
	uint32 mecopjahcdn = 1;
}

// MBNCCCCPHIH (30143)
message FightMatch3ForceUpdateNotify {
	HKJACOBACDL data = 15;
}

// MPGMFLODMHN
enum CmdFriendType {
	CmdFriendTypeNone = 0;
	CmdGetFriendDevelopmentInfoScRsp = 2940;
	CmdSetAssistScRsp = 2976;
	CmdGetAssistListScRsp = 2958;
	CmdDeleteFriendCsReq = 2946;
	CmdSetFriendRemarkNameCsReq = 2953;
	CmdSetFriendMarkCsReq = 2922;
	CmdGetFriendRecommendListInfoCsReq = 2926;
	CmdTakeAssistRewardCsReq = 2965;
	CmdGetAssistHistoryScRsp = 2913;
	CmdGetFriendBattleRecordDetailScRsp = 2999;
	CmdTakeAssistRewardScRsp = 2908;
	CmdGetFriendChallengeDetailScRsp = 2964;
	CmdApplyFriendCsReq = 2952;
	CmdGetFriendChallengeLineupCsReq = 2992;
	CmdGetFriendAssistListScRsp = 2994;
	CmdGetFriendListInfoCsReq = 2936;
	CmdSetFriendMarkScRsp = 3000;
	CmdGetCurAssistScRsp = 2973;
	CmdGetFriendChallengeDetailCsReq = 2945;
	CmdGetFriendLoginInfoCsReq = 2979;
	CmdAddBlacklistScRsp = 2975;
	CmdSyncApplyFriendScNotify = 2924;
	CmdHandleFriendCsReq = 2993;
	CmdDeleteFriendScRsp = 2925;
	CmdGetPlayerDetailInfoCsReq = 2984;
	CmdSearchPlayerScRsp = 2948;
	CmdReportPlayerCsReq = 2959;
	CmdDeleteBlacklistCsReq = 2978;
	CmdHandleFriendScRsp = 2934;
	CmdNewAssistHistoryNotify = 2921;
	CmdGetFriendDevelopmentInfoCsReq = 2903;
	CmdSetAssistCsReq = 2910;
	CmdSyncAddBlacklistScNotify = 2919;
	CmdCurAssistChangedNotify = 2918;
	CmdSyncHandleFriendScNotify = 2943;
	CmdApplyFriendScRsp = 2974;
	CmdDeleteBlacklistScRsp = 2929;
	CmdSearchPlayerCsReq = 2950;
	CmdGetFriendRecommendListInfoScRsp = 2907;
	CmdGetAssistHistoryCsReq = 2917;
	CmdSetForbidOtherApplyFriendScRsp = 2955;
	CmdGetFriendChallengeLineupScRsp = 2960;
	CmdGetFriendBattleRecordDetailCsReq = 2972;
	CmdReportPlayerScRsp = 2912;
	CmdGetPlayerDetailInfoScRsp = 2927;
	CmdGetFriendAssistListCsReq = 2941;
	CmdGetPlatformPlayerInfoCsReq = 2937;
	CmdSyncDeleteFriendScNotify = 2996;
	CmdGetPlatformPlayerInfoScRsp = 2911;
	CmdGetAssistListCsReq = 2988;
	CmdGetFriendListInfoScRsp = 2995;
	CmdGetFriendApplyListInfoCsReq = 2967;
	CmdAddBlacklistCsReq = 2905;
	CmdSetFriendRemarkNameScRsp = 2990;
	CmdGetCurAssistCsReq = 2935;
	CmdGetFriendLoginInfoScRsp = 2981;
	CmdSetForbidOtherApplyFriendCsReq = 2939;
	CmdGetFriendApplyListInfoScRsp = 2928;
}

enum FriendOnlineStatus {
	FRIEND_ONLINE_STATUS_OFFLINE = 0;
	FRIEND_ONLINE_STATUS_ONLINE = 1;
}

enum FriendApplySource {
	FRIEND_APPLY_SOURCE_NONE = 0;
	FRIEND_APPLY_SOURCE_SEARCH = 1;
	FRIEND_APPLY_SOURCE_RECOMMEND = 2;
	FRIEND_APPLY_SOURCE_ASSIST = 3;
	FRIEND_APPLY_SOURCE_RECOMMEND_ASSIST = 4;
	FRIEND_APPLY_SOURCE_PSN_FRIEND = 5;
	FRIEND_APPLY_SOURCE_ASSIST_REWARD = 6;
}

message AssistSimpleInfo {
	uint32 Pos = 14;
	uint32 Level = 7;
	uint32 AvatarId = 5;
	uint32 DressedSkinId = 8;
}

message LAINAIKLKCB {
	uint32 eecemipjjgh = 7;
	uint32 dkjbdcjjjeh = 1;
	uint32 group_id = 11;
	uint32 ppjgpminmhj = 12;
}

message NGKLIKHIOPB {
	uint32 hepkmkajngb = 9;
}

message IJPPJABALIL {
	repeated uint32 kbbjbmfgfmj = 12;
	uint32 hepkmkajngb = 6;
}

message KPODNODIPII {
	IJPPJABALIL imkpcliboke = 14;
}

message LMFPBBGNLIO {
	oneof AJBMBGJMCLD {
		NGKLIKHIOPB ollodgfkoco = 11;
		KPODNODIPII ngekgdbhalb = 8;
	}
}

message APOIBBGLIPM {
	BattleRecordType knpgfikpmfc = 13;
	LMFPBBGNLIO kjplakmkjmn = 10;
	LAINAIKLKCB ljnbdjhehaj = 11;
}

message PlayerSimpleInfo {
	int64 last_active_time = 1;
	string nickname = 12;
	string aeohjingifk = 15;
	PlatformType platform = 13;
	uint32 level = 4;
	bool is_banned = 5;
	uint32 chat_bubble_id = 14;
	string signature = 8;
	string pdciladmjij = 6;
	repeated AssistSimpleInfo assist_simple_info_list = 7;
	uint32 head_icon = 11;
	FriendOnlineStatus online_status = 2;
	uint32 uid = 10;
}

message DisplayEquipmentInfo {
	uint32 promotion = 14;
	uint32 tid = 2;
	uint32 exp = 10;
	uint32 rank = 12;
	uint32 level = 1;
}

message DisplayRelicInfo {
	uint32 main_affix_id = 6;
	repeated RelicAffix sub_affix_list = 2;
	uint32 exp = 13;
	uint32 level = 9;
	uint32 type = 12;
	uint32 tid = 15;
}

message DisplayAvatarDetailInfo {
	uint32 Rank = 15;
	uint32 Pos = 12;
	repeated DisplayRelicInfo RelicList = 1;
	uint32 Promotion = 6;
	repeated AvatarSkillTree SkilltreeList = 9;
	uint32 Exp = 8;
	uint32 AvatarId = 14;
	uint32 Level = 2;
	DisplayEquipmentInfo Equipment = 13;
	uint32 DressedSkinId = 10;
}

message PlayerCollectionInfo {
	uint32 eafceffhdph = 3;
	uint32 okcenobmljp = 6;
	uint32 ohegabmbomi = 7;
	uint32 dlcfellanek = 13;
	uint32 aekgeclgfjl = 5;
}

message PlayerRecordInfo {
	uint32 jgkijcjpfaa = 3;
	PlayerCollectionInfo collection_info = 5;
	uint32 mndjlcmgmhj = 13;
	uint32 abhgdmemfma = 10;
	uint32 eekfjoldhlk = 8;
	uint32 cpbbnjnmnhg = 15;
	uint32 banbdlipjfp = 7;
	uint32 ebpdgificnh = 14;
	uint32 aodkpopjeaf = 4;
}

message PrivacySettings {
	bool kmcckimhbbj = 10;
	bool khkaapacgjf = 8;
	bool kkhhcopengm = 11;
	bool kmacdmafffn = 6;
	bool oigipmeoekb = 12;
}

message PlayerDisplaySettings {
	repeated LAINAIKLKCB challenge_list = 5;
	LMFPBBGNLIO kjplakmkjmn = 7;
}

message PlayerDetailInfo {
	uint32 oapjdhglpno = 8;
	repeated DisplayAvatarDetailInfo ljfffilhfac = 12;
	PrivacySettings mdgodkokbkk = 614;
	string signature = 1;
	uint32 world_level = 11;
	PlayerDisplaySettings kdpkmjokgeb = 273;
	uint32 head_icon = 5;
	string nickname = 2;
	bool jlnoeglajaa = 4;
	uint32 level = 7;
	uint32 uid = 3;
	repeated DisplayAvatarDetailInfo pgdmkcocjgj = 1594;
	PlayerRecordInfo nmbommjjmmb = 15;
	PlatformType platform = 9;
	string pdciladmjij = 13;
	string aeohjingifk = 14;
	bool is_banned = 10;
	uint32 djaejinckfm = 6;
}

message FriendInfo {
	APOIBBGLIPM nlahmobfpib = 5;
	PlayingState playing_state = 15;
	bool is_marked = 2;
	PlayerSimpleInfo player_simple_info = 10;
	int64 create_time = 11;
	string remark_name = 12;
}

message FriendApplyInfo {
	PlayerSimpleInfo player_info = 7;
	int64 apply_time = 4;
}

message FriendRecommendInfo {
	PlayerSimpleInfo player_info = 15;
	bool icgmfoodeii = 9;
}

message PlayerAssistInfo {
	PlayerSimpleInfo player_info = 14;
	DisplayAvatarDetailInfo assist_avatar = 9;
}

message BOKGBGGOHNM {
	uint32 nfpkmonkkih = 11;
	string aeohjingifk = 2;
	PlatformType platform = 3;
	uint32 head_icon = 14;
	uint32 level = 9;
	string remark_name = 6;
	string nickname = 13;
	uint32 uid = 5;
}

message GHHLFKBCHPC {
	PlayerSimpleInfo player_info = 14;
	repeated ChallengeLineupList lineup_list = 8;
	uint32 buff_two = 12;
	uint32 score_id = 13;
	uint32 njldipkclbp = 7;
	string remark_name = 15;
	uint32 buff_one = 5;
}

message NMCBMMDGNPI {
	oneof challenge_stt_case {
		ChallengeStatistics challenge_default = 1408;
		ChallengeStoryStatistics challenge_story = 1373;
		ChallengeBossStatistics challenge_boss = 360;
	}
	uint32 group_id = 14;
	uint32 DKJBDCJJJEH = 3;
}

message FFOOKABHHFF {
	uint32 map_id = 12;
	RogueFinishInfo rogue_finish_info = 4;
}

message EBFJCBGDCFL {
	IONNOLIHAAG inppfdjhejn = 4;
	uint32 pfkhhkimnbp = 12;
}

message MLHHEHMBHFD {
	uint32 obfaaccnoai = 6;
	uint32 kjkpmffamfk = 2;
	uint32 ejoicbniabc = 3;
}

message FOBDDFLBEBP {
	uint32 chlhninnchp = 10;
	uint32 locnkonomhm = 4;
	uint32 fijfhmngkao = 1;
	uint32 kjkpmffamfk = 3;
}

message KIIGOOGKAGC {
	uint32 ebkgcmaoehl = 12;
	uint32 faolilobhjn = 4;
	uint32 ciicghhllbb = 9;
	uint32 kjkpmffamfk = 2;
}

message AGCPKKEONOO {
	oneof HMANCHJJDIK {
		FFOOKABHHFF bnckkfjmgai = 1221;
		EBFJCBGDCFL mobpgidpgag = 1682;
	}
	KIIGOOGKAGC JNILGIBNCAO = 3;
	FOBDDFLBEBP EGOHGFDMFBF = 7;
	MLHHEHMBHFD CLMNPBBLEKL = 4;
}

message PAMILFCBMON {
	uint32 kjkpmffamfk = 9;
}

message DFEKFEGLCKO {
	uint32 odenkailked = 8;
	uint32 kjkpmffamfk = 3;
}

message AGFFNJMNNIG {
	uint32 challenge_id = 7;
}

message BHBEDKJMNED {
	oneof EGPBHEJBEPN {
		PAMILFCBMON eigkbdfeibf = 1358;
		AGFFNJMNNIG gkcpjlhfadi = 1581;
		uint32 avatar_id = 1915;
		uint32 gcomeogcken = 206;
		uint32 kcjajdgnpgb = 228;
		DFEKFEGLCKO oiggbfalbla = 1174;
		uint32 panel_id = 953;
	}
	DevelopmentType CEAKHDFACLK = 7;
	int64 time = 4;
}

// IGHJDDKFIOO (2936)
message GetFriendListInfoCsReq {
}

// PEBDAPGHFFP (2995)
message GetFriendListInfoScRsp {
	uint32 retcode = 7;
	repeated PlayerSimpleInfo black_list = 5;
	repeated FriendInfo friend_info_list = 13;
}

// AEJMDKIJIHF (2984)
message GetPlayerDetailInfoCsReq {
	uint32 uid = 11;
}

// LJFPIKEDMCC (2927)
message GetPlayerDetailInfoScRsp {
	uint32 retcode = 1;
	PlayerDetailInfo detail_info = 10;
}

// LFCNOPGEPJD (2967)
message GetFriendApplyListInfoCsReq {
}

// OLPAEFDPDIP (2928)
message GetFriendApplyListInfoScRsp {
	repeated uint32 send_apply_list = 4;
	uint32 retcode = 8;
	repeated FriendApplyInfo receive_apply_list = 1;
}

// PDGOBAHBLHI (2952)
message ApplyFriendCsReq {
	FriendApplySource source = 5;
	uint32 uid = 15;
}

// GBFKOAMHKDE (2974)
message ApplyFriendScRsp {
	uint32 retcode = 14;
	uint32 uid = 1;
}

// OACPMCLEPBF (2924)
message SyncApplyFriendScNotify {
	FriendApplyInfo apply_info = 9;
}

// IINBBNLOPJN (2993)
message HandleFriendCsReq {
	bool is_accept = 10;
	uint32 uid = 11;
}

// IKKDADEDECD (2934)
message HandleFriendScRsp {
	FriendInfo friend_info = 14;
	uint32 retcode = 9;
	uint32 uid = 4;
	bool is_accept = 3;
}

// PLACPLPCPFI (2943)
message SyncHandleFriendScNotify {
	uint32 uid = 11;
	FriendInfo friend_info = 13;
	bool is_accept = 8;
}

// LJICHHELNOI (2946)
message DeleteFriendCsReq {
	uint32 icgghnnhbec = 7;
	uint32 uid = 12;
}

// FCNPAKLAPBF (2925)
message DeleteFriendScRsp {
	uint32 uid = 3;
	uint32 retcode = 4;
}

// KOFFFNFOCKG (2996)
message SyncDeleteFriendScNotify {
	uint32 uid = 12;
}

// ICNAAMLBBIL (2905)
message AddBlacklistCsReq {
	uint32 uid = 2;
}

// GGBGBBPAKOI (2975)
message AddBlacklistScRsp {
	uint32 retcode = 8;
	PlayerSimpleInfo black_info = 10;
}

// CKJPCLCPJCF (2919)
message SyncAddBlacklistScNotify {
	uint32 uid = 12;
}

// PLCDPNEDPPN (2926)
message GetFriendRecommendListInfoCsReq {
	bool ncchmlnhndi = 2;
}

// DCGNGCJMEPK (2907)
message GetFriendRecommendListInfoScRsp {
	uint32 retcode = 3;
	repeated FriendRecommendInfo player_info_list = 7;
}

// HJKODAOEBNH (2953)
message SetFriendRemarkNameCsReq {
	uint32 uid = 13;
	uint32 reason = 3;
	string remark_name = 6;
}

// FAJLOFIDMOO (2990)
message SetFriendRemarkNameScRsp {
	string remark_name = 15;
	uint32 retcode = 2;
	uint32 uid = 13;
}

// CLICFNKBHFE (2959)
message ReportPlayerCsReq {
	uint32 uid = 8;
	uint32 nkdaefbkhbi = 4;
	string kleonnfgbpm = 15;
}

// HLNABDKJFIG (2912)
message ReportPlayerScRsp {
	uint32 retcode = 8;
}

// MMAPBMNOFAI (2978)
message DeleteBlacklistCsReq {
	uint32 uid = 1;
}

// OLJHABGMMON (2929)
message DeleteBlacklistScRsp {
	uint32 retcode = 15;
	uint32 uid = 8;
}

// PGPDFKOLBJJ (2950)
message SearchPlayerCsReq {
	bool ncchmlnhndi = 12;
	repeated uint32 uid_list = 10;
}

// AKEODLPIKJL (2948)
message SearchPlayerScRsp {
	uint32 retcode = 15;
	repeated PlayerSimpleInfo simple_info_list = 12;
	repeated uint32 result_uid_list = 10;
}

// JDBAHOGNAGF (2988)
message GetAssistListCsReq {
	bool lbhbknimfpn = 13;
	bool ncchmlnhndi = 2;
}

// NPJDMBNLIBG (2958)
message GetAssistListScRsp {
	repeated PlayerAssistInfo assist_list = 2;
	uint32 retcode = 9;
}

// OOPBOHBMALM (2910)
message SetAssistCsReq {
	uint32 avatar_id = 10;
	uint32 uid = 4;
}

// ABKEAFIKBHA (2976)
message SetAssistScRsp {
	uint32 retcode = 3;
	uint32 uid = 2;
	uint32 avatar_id = 4;
}

// HGICDKGPBCO (2935)
message GetCurAssistCsReq {
}

// EFCANOOKANM (2973)
message GetCurAssistScRsp {
	uint32 retcode = 11;
	PlayerAssistInfo assist_info = 15;
}

// HFPEFKFMGCE (2917)
message GetAssistHistoryCsReq {
}

// CJAKIKCLIOO (2913)
message GetAssistHistoryScRsp {
	repeated uint32 today_use_uid_list = 14;
	uint32 retcode = 15;
	uint32 ifclfpgcked = 10;
	uint32 meghkdmaoeb = 3;
	uint32 kefkaopkjbn = 12;
}

// OFGIHLJEJPC (2921)
message NewAssistHistoryNotify {
	uint32 ifclfpgcked = 8;
}

// ODHEGKNGCGM (2965)
message TakeAssistRewardCsReq {
}

// DFNOFIPNOGJ (2908)
message TakeAssistRewardScRsp {
	ItemList reward = 9;
	repeated BOKGBGGOHNM obkjpniigpk = 6;
	uint32 retcode = 11;
}

// ACJGKIOEBCI (2918)
message CurAssistChangedNotify {
	PlayerAssistInfo assist_info = 6;
}

// PBMMHBPPGFJ (2937)
message GetPlatformPlayerInfoCsReq {
	PlatformType platform = 5;
	repeated string ndbcddkknfc = 7;
}

// BEEGGKENDBJ (2911)
message GetPlatformPlayerInfoScRsp {
	repeated PlayerSimpleInfo player_info_list = 1;
	uint32 retcode = 10;
}

// FNCEMGKCPIM (2979)
message GetFriendLoginInfoCsReq {
}

// KNNBINNNILF (2981)
message GetFriendLoginInfoScRsp {
	repeated uint32 bdmljjdidbo = 7;
	bool ocbkebjgcnh = 11;
	repeated uint32 jbcncfacpoc = 8;
	uint32 retcode = 13;
	bool diapipdfind = 15;
}

// KDMNGANCAIL (2939)
message SetForbidOtherApplyFriendCsReq {
	bool cnimhjpfadc = 3;
}

// KDBCMOMGEHN (2955)
message SetForbidOtherApplyFriendScRsp {
	uint32 retcode = 4;
	bool cnimhjpfadc = 7;
}

// BKMKPGFHEFE (2922)
message SetFriendMarkCsReq {
	uint32 reason = 14;
	bool gajokfhigfe = 1;
	uint32 uid = 4;
}

// PBPNGEODAHB (3000)
message SetFriendMarkScRsp {
	uint32 uid = 5;
	uint32 retcode = 7;
	bool gajokfhigfe = 3;
}

// MBPLLNGNLFF (2941)
message GetFriendAssistListCsReq {
	uint32 target_side = 3;
	repeated uint32 nlnbnhpbjcn = 1;
	AssistAvatarType nmiopghifje = 6;
	repeated uint32 belkboophim = 2;
	bool ncchmlnhndi = 9;
}

// GEDPGEMCJMN (2994)
message GetFriendAssistListScRsp {
	repeated PlayerAssistInfo assist_list = 7;
	uint32 target_side = 6;
	uint32 retcode = 4;
}

// KLPEJACAFEA (2992)
message GetFriendChallengeLineupCsReq {
	uint32 challenge_id = 8;
}

// CDPGGMFLDHK (2960)
message GetFriendChallengeLineupScRsp {
	bool pbojodgepng = 9;
	uint32 retcode = 3;
	repeated GHHLFKBCHPC hobeflekpfg = 15;
}

// IELGMGBBFBH (2945)
message GetFriendChallengeDetailCsReq {
	uint32 challenge_id = 7;
	uint32 uid = 13;
}

// EBCLLOKBBGA (2964)
message GetFriendChallengeDetailScRsp {
	uint32 retcode = 12;
	repeated DisplayAvatarDetailInfo meajllaofam = 4;
	uint32 uid = 3;
	uint32 challenge_id = 15;
}

// DCLCDMNOCEK (2972)
message GetFriendBattleRecordDetailCsReq {
	uint32 uid = 12;
}

// KIOFJEHIKAP (2999)
message GetFriendBattleRecordDetailScRsp {
	repeated NMCBMMDGNPI nhciagienbn = 1;
	AGCPKKEONOO mlkeoiableg = 13;
	uint32 uid = 4;
	uint32 retcode = 3;
}

// EBODNKINPPC (2903)
message GetFriendDevelopmentInfoCsReq {
	uint32 uid = 15;
}

// LKDMHNABMLN (2940)
message GetFriendDevelopmentInfoScRsp {
	repeated BHBEDKJMNED emdgmamejkb = 10;
	uint32 retcode = 11;
	uint32 uid = 1;
}

// BKDHNCJJIPD
enum CmdGachaType {
	CmdGachaTypeNone = 0;
	CmdGetGachaCeilingCsReq = 1967;
	CmdExchangeGachaCeilingCsReq = 1952;
	CmdGetGachaInfoScRsp = 1995;
	CmdGetGachaCeilingScRsp = 1928;
	CmdDoGachaScRsp = 1927;
	CmdExchangeGachaCeilingScRsp = 1974;
	CmdDoGachaCsReq = 1984;
	CmdGetGachaInfoCsReq = 1936;
}

// CNIBIGEBOLI (1936)
message GetGachaInfoCsReq {
}

message GachaCeilingAvatar {
	uint32 RepeatedCnt = 9;
	uint32 AvatarId = 12;
}

message GachaCeiling {
	bool is_claimed = 14;
	repeated GachaCeilingAvatar avatar_list = 9;
	uint32 ceiling_num = 11;
}

message GachaInfo {
	uint32 hjjmaaffiko = 14;
	repeated uint32 dcfkplenjaj = 4;
	int64 end_time = 15;
	int64 begin_time = 8;
	GachaCeiling gacha_ceiling = 11;
	uint32 einkplbkapk = 1;
	string fcicnlkhafc = 7;
	uint32 gacha_id = 5;
	repeated uint32 nclapmfcnmf = 3;
	string cofmjadcbel = 13;
}

// HENAADKJPHB (1995)
message GetGachaInfoScRsp {
	uint32 gacha_random = 11;
	repeated GachaInfo gacha_info_list = 8;
	uint32 ejoffjnomla = 13;
	uint32 ofdkdoidahb = 3;
	uint32 ndjagnbnbgi = 5;
	uint32 retcode = 6;
}

// BLPEGGAIHGO (1984)
message DoGachaCsReq {
	uint32 gacha_id = 6;
	uint32 simulate_magic = 11;
	uint32 gacha_random = 8;
	uint32 gacha_num = 7;
}

message GachaItem {
	Item gacha_item = 10;
	ItemList transfer_item_list = 3;
	ItemList token_item = 15;
	bool is_new = 8;
}

// AMLJPFJMDCI (1927)
message DoGachaScRsp {
	uint32 ofdkdoidahb = 12;
	uint32 hjjmaaffiko = 14;
	uint32 retcode = 6;
	uint32 gacha_id = 4;
	uint32 dncjdoodmlg = 5;
	repeated GachaItem gacha_item_list = 7;
	uint32 ceiling_num = 1;
	uint32 einkplbkapk = 8;
	uint32 gacha_num = 11;
}

// JIBPCEBPOHB (1967)
message GetGachaCeilingCsReq {
	uint32 gacha_type = 1;
}

// OKHHELLHHPC (1928)
message GetGachaCeilingScRsp {
	uint32 retcode = 15;
	GachaCeiling gacha_ceiling = 8;
	uint32 gacha_type = 14;
}

// JPOEJILEAEJ (1952)
message ExchangeGachaCeilingCsReq {
	uint32 avatar_id = 4;
	uint32 gacha_type = 13;
}

// CFJNIICNOMF (1974)
message ExchangeGachaCeilingScRsp {
	uint32 retcode = 10;
	ItemList transfer_item_list = 2;
	uint32 gacha_type = 3;
	uint32 avatar_id = 14;
	GachaCeiling gacha_ceiling = 5;
}

// NMMILMIHMPK
enum CmdHeartdialType {
	CmdHeartdialTypeNone = 0;
	CmdFinishEmotionDialoguePerformanceScRsp = 6374;
	CmdSubmitEmotionItemScRsp = 6328;
	CmdHeartDialScriptChangeScNotify = 6324;
	CmdHeartDialTraceScriptScRsp = 6334;
	CmdGetHeartDialInfoScRsp = 6395;
	CmdChangeScriptEmotionScRsp = 6327;
	CmdGetHeartDialInfoCsReq = 6336;
	CmdHeartDialTraceScriptCsReq = 6393;
	CmdChangeScriptEmotionCsReq = 6384;
	CmdFinishEmotionDialoguePerformanceCsReq = 6352;
	CmdSubmitEmotionItemCsReq = 6367;
}

enum LICPIMFIDGF {
	HEART_DIAL_EMOTION_TYPE_PEACE = 0;
	HEART_DIAL_EMOTION_TYPE_ANGER = 1;
	HEART_DIAL_EMOTION_TYPE_HAPPY = 2;
	HEART_DIAL_EMOTION_TYPE_SAD = 3;
}

enum IKHDNPGOKFG {
	HEART_DIAL_STEP_TYPE_MISSING = 0;
	HEART_DIAL_STEP_TYPE_FULL = 1;
	HEART_DIAL_STEP_TYPE_LOCK = 2;
	HEART_DIAL_STEP_TYPE_UNLOCK = 3;
	HEART_DIAL_STEP_TYPE_NORMAL = 4;
	HEART_DIAL_STEP_TYPE_CONTROL = 5;
}

enum GNPHJAPOJJM {
	HEART_DIAL_UNLOCK_STATUS_LOCK = 0;
	HEART_DIAL_UNLOCK_STATUS_UNLOCK_SINGLE = 1;
	HEART_DIAL_UNLOCK_STATUS_UNLOCK_ALL = 2;
}

message HHGCOJOMGBN {
	bool adlepllifgm = 3;
	uint32 lmjaeipjaom = 10;
}

message JHMALOGKGBL {
	bool bjonnkpchcm = 3;
	uint32 script_id = 14;
	IKHDNPGOKFG step = 4;
	bool jdbllkcadan = 10;
	LICPIMFIDGF lemijffklgi = 7;
}

message ABMIFMMDLMK {
	uint32 script_id = 4;
	uint32 idfamanemkc = 13;
}

// JJHIPLAIPBF (6336)
message GetHeartDialInfoCsReq {
}

// JIGNNAOPKOL (6395)
message GetHeartDialInfoScRsp {
	repeated JHMALOGKGBL jfifoaecdfk = 13;
	GNPHJAPOJJM mlfgakmimin = 2;
	repeated HHGCOJOMGBN cnidmifkpcc = 1;
	uint32 retcode = 8;
	repeated ABMIFMMDLMK hpkcjdejlgb = 10;
}

// KKOLNGFJJJH (6384)
message ChangeScriptEmotionCsReq {
	uint32 script_id = 7;
	LICPIMFIDGF dangbnbclkj = 14;
	uint32 bkidmgpjnak = 5;
}

// OBACMOAJEMI (6327)
message ChangeScriptEmotionScRsp {
	uint32 retcode = 11;
	LICPIMFIDGF opkjacnhphf = 9;
	uint32 script_id = 6;
}

// BHIPMDGOOHN (6367)
message SubmitEmotionItemCsReq {
	uint32 bkidmgpjnak = 14;
	uint32 script_id = 12;
	ItemList item_list = 1;
}

// GDLKJMJMPDK (6328)
message SubmitEmotionItemScRsp {
	uint32 script_id = 15;
	uint32 retcode = 1;
}

// MCCHFNLGMBA (6352)
message FinishEmotionDialoguePerformanceCsReq {
	uint32 lmjaeipjaom = 4;
	uint32 bkidmgpjnak = 8;
	uint32 script_id = 5;
}

// HHBGCKALNMN (6374)
message FinishEmotionDialoguePerformanceScRsp {
	uint32 retcode = 13;
	ItemList reward_list = 4;
	uint32 lmjaeipjaom = 12;
	uint32 script_id = 5;
}

// OKCEBPMAKDP (6324)
message HeartDialScriptChangeScNotify {
	repeated HHGCOJOMGBN paldnlfjjnh = 15;
	GNPHJAPOJJM mlfgakmimin = 13;
	repeated ABMIFMMDLMK hpkcjdejlgb = 11;
	repeated JHMALOGKGBL ghhdieehkdp = 10;
}

// AHHGLHFCPJN (6393)
message HeartDialTraceScriptCsReq {
	ABMIFMMDLMK hdboajofegi = 7;
}

// OCFHAKNGBIL (6334)
message HeartDialTraceScriptScRsp {
	uint32 retcode = 3;
	ABMIFMMDLMK hdboajofegi = 11;
}

// MFEHGGCCOKE
enum CmdHeliobusType {
	CmdHeliobusTypeNone = 0;
	CmdHeliobusEnterBattleCsReq = 5807;
	CmdHeliobusInfoChangedScNotify = 5843;
	CmdHeliobusChallengeUpdateScNotify = 5812;
	CmdHeliobusActivityDataCsReq = 5836;
	CmdHeliobusSnsReadScRsp = 5827;
	CmdHeliobusActivityDataScRsp = 5895;
	CmdHeliobusSnsUpdateScNotify = 5834;
	CmdHeliobusSnsReadCsReq = 5884;
	CmdHeliobusSnsCommentCsReq = 5824;
	CmdHeliobusSelectSkillScRsp = 5875;
	CmdHeliobusSnsCommentScRsp = 5893;
	CmdHeliobusUpgradeLevelCsReq = 5846;
	CmdHeliobusUnlockSkillScNotify = 5896;
	CmdHeliobusStartRaidScRsp = 5859;
	CmdHeliobusSnsLikeScRsp = 5874;
	CmdHeliobusUpgradeLevelScRsp = 5825;
	CmdHeliobusSnsPostCsReq = 5867;
	CmdHeliobusStartRaidCsReq = 5890;
	CmdHeliobusSnsLikeCsReq = 5852;
	CmdHeliobusEnterBattleScRsp = 5853;
	CmdHeliobusSnsPostScRsp = 5828;
	CmdHeliobusLineupUpdateScNotify = 5878;
	CmdHeliobusSelectSkillCsReq = 5805;
}

message NJONFDLNKCM {
	uint32 cckaekmoppp = 8;
	repeated uint32 ckmcagllhfl = 12;
}

message NKDIAIDLGPP {
	uint32 challenge_id = 13;
	bool bnmocbdnbdo = 12;
	uint32 star = 9;
}

message HeliobusChallengeLineup {
	uint32 GroupId = 15;
	uint32 SkillId = 1;
	repeated uint32 AvatarIdList = 2;
}

// PGLDNIOEIEK (5836)
message HeliobusActivityDataCsReq {
}

// HOPGDDLAFJE (5895)
message HeliobusActivityDataScRsp {
	repeated HeliobusChallengeLineup bklhfmkehpf = 14;
	repeated NKDIAIDLGPP challenge_list = 2;
	uint32 retcode = 1;
	uint32 lmbpkeobmhk = 9;
	uint32 phase = 6;
	uint32 dhgipohdopm = 10;
	uint32 level = 5;
	uint32 kmioceodnom = 8;
	NJONFDLNKCM skill_info = 13;
	repeated FHHCIFJOCBP mcpejldgggh = 15;
}

message BHGIHCAMFDE {
	repeated BHGIHCAMFDE anellobhdbk = 9;
	uint32 ldbkmpfbced = 10;
	uint32 falhenmllpb = 1;
}

message FHHCIFJOCBP {
	bool aedohpbmjkh = 6;
	uint32 njalfepfddk = 14;
	uint32 efbpgpjbnef = 4;
	uint32 ojdpndcppgf = 13;
	uint32 lbpafkhbbbi = 12;
	uint32 pcfdhoheaoo = 10;
	repeated BHGIHCAMFDE ibikcimjgpl = 15;
	bool djgbmgpbaao = 8;
}

// DIOANANPJOL (5884)
message HeliobusSnsReadCsReq {
	uint32 ojdpndcppgf = 3;
}

// KGKEOGGDDIM (5827)
message HeliobusSnsReadScRsp {
	uint32 retcode = 10;
	uint32 ojdpndcppgf = 6;
}

// OFENBNOPGKF (5867)
message HeliobusSnsPostCsReq {
	uint32 ojdpndcppgf = 12;
	uint32 njalfepfddk = 9;
	uint32 lbpafkhbbbi = 10;
}

// PEFKFIDELGL (5828)
message HeliobusSnsPostScRsp {
	FHHCIFJOCBP dfbmpijlofa = 5;
	uint32 retcode = 14;
}

// BMJBIPALBLE (5852)
message HeliobusSnsLikeCsReq {
	uint32 ojdpndcppgf = 2;
}

// ALKBBFFCHMD (5874)
message HeliobusSnsLikeScRsp {
	uint32 ojdpndcppgf = 10;
	uint32 retcode = 13;
	bool djgbmgpbaao = 5;
}

// HKOCLKLHIEF (5824)
message HeliobusSnsCommentCsReq {
	uint32 ojdpndcppgf = 1;
	uint32 ldbkmpfbced = 13;
	uint32 eokolobbjli = 11;
}

// MFLDHADDKCI (5893)
message HeliobusSnsCommentScRsp {
	uint32 retcode = 14;
	FHHCIFJOCBP dfbmpijlofa = 12;
}

// OKEMNILJBCA (5834)
message HeliobusSnsUpdateScNotify {
	repeated FHHCIFJOCBP bnjidmeannm = 7;
}

// FEMNFEBOLIM (5843)
message HeliobusInfoChangedScNotify {
	uint32 kmioceodnom = 6;
	uint32 lmbpkeobmhk = 9;
	repeated FHHCIFJOCBP bnjidmeannm = 3;
	uint32 phase = 1;
}

// FAEGPKGLAKG (5846)
message HeliobusUpgradeLevelCsReq {
}

// PNKPANCFKKM (5825)
message HeliobusUpgradeLevelScRsp {
	uint32 retcode = 4;
	uint32 level = 5;
}

// DEGLNMKAPJE (5896)
message HeliobusUnlockSkillScNotify {
	uint32 skill_id = 14;
	uint32 cckaekmoppp = 4;
}

// FBBJJNLGNEO (5807)
message HeliobusEnterBattleCsReq {
	uint32 event_id = 9;
	repeated uint32 avatar_id_list = 5;
	uint32 skill_id = 7;
}

// GDCPFGPAFJO (5853)
message HeliobusEnterBattleScRsp {
	SceneBattleInfo battle_info = 14;
	uint32 event_id = 15;
	uint32 retcode = 11;
}

// FNLEKANIPFP (5805)
message HeliobusSelectSkillCsReq {
	uint32 skill_id = 14;
}

// GJPACLDPLPP (5875)
message HeliobusSelectSkillScRsp {
	uint32 retcode = 8;
	uint32 skill_id = 4;
}

// KCFOFEFEPJI (5812)
message HeliobusChallengeUpdateScNotify {
	NKDIAIDLGPP challenge = 12;
}

// FJAMDAFCMIM (5878)
message HeliobusLineupUpdateScNotify {
	HeliobusChallengeLineup lineup = 4;
}

// BJPFIMKPGHH (5890)
message HeliobusStartRaidCsReq {
	bool is_save = 13;
	uint32 prop_entity_id = 2;
	uint32 nbljpgfhdfi = 6;
	repeated uint32 avatar_list = 1;
	uint32 skill_id = 5;
	uint32 akjkbekakcn = 7;
}

// BJOLFGEBOOI (5859)
message HeliobusStartRaidScRsp {
	CHMBNFJJIJN scene = 15;
	uint32 retcode = 1;
}

// OEAAMJLGCAL
enum CmdItemType {
	CmdItemTypeNone = 0;
	CmdAddEquipmentScNotify = 529;
	CmdSetTurnFoodSwitchCsReq = 508;
	CmdGetMarkItemListCsReq = 535;
	CmdDeleteRelicFilterPlanScRsp = 572;
	CmdPromoteEquipmentCsReq = 584;
	CmdRelicReforgeConfirmCsReq = 533;
	CmdRelicReforgeCsReq = 561;
	CmdMarkItemCsReq = 517;
	CmdComposeLimitNumUpdateNotify = 558;
	CmdGetRecyleTimeCsReq = 550;
	CmdLockRelicScRsp = 519;
	CmdLockRelicCsReq = 575;
	CmdGetBagCsReq = 536;
	CmdDestroyItemScRsp = 576;
	CmdGetBagScRsp = 595;
	CmdLockEquipmentCsReq = 567;
	CmdSetTurnFoodSwitchScRsp = 518;
	CmdModifyRelicFilterPlanScRsp = 545;
	CmdDeleteRelicFilterPlanCsReq = 564;
	CmdComposeLimitNumCompleteNotify = 588;
	CmdGetRecyleTimeScRsp = 548;
	CmdGetRelicFilterPlanScRsp = 541;
	CmdGetRelicFilterPlanCsReq = 600;
	CmdMarkRelicFilterPlanScRsp = 503;
	CmdExpUpEquipmentCsReq = 534;
	CmdDestroyItemCsReq = 510;
	CmdDiscardRelicScRsp = 579;
	CmdComposeItemScRsp = 525;
	CmdExpUpRelicScRsp = 505;
	CmdGetMarkItemListScRsp = 573;
	CmdExpUpEquipmentScRsp = 543;
	CmdSellItemScRsp = 507;
	CmdRelicReforgeConfirmScRsp = 597;
	CmdExchangeHcoinCsReq = 590;
	CmdAddRelicFilterPlanScRsp = 592;
	CmdMarkRelicFilterPlanCsReq = 599;
	CmdComposeItemCsReq = 546;
	CmdRelicReforgeScRsp = 530;
	CmdUseItemCsReq = 552;
	CmdCancelMarkItemNotify = 521;
	CmdSyncTurnFoodNotify = 565;
	CmdRankUpEquipmentScRsp = 593;
	CmdComposeSelectedRelicScRsp = 578;
	CmdModifyRelicFilterPlanCsReq = 560;
	CmdSellItemCsReq = 526;
	CmdRelicFilterPlanClearNameScNotify = 540;
	CmdComposeSelectedRelicCsReq = 512;
	CmdRechargeSuccNotify = 553;
	CmdDiscardRelicCsReq = 511;
	CmdLockEquipmentScRsp = 528;
	CmdRankUpEquipmentCsReq = 524;
	CmdMarkItemScRsp = 513;
	CmdExpUpRelicCsReq = 596;
	CmdUseItemScRsp = 574;
	CmdAddRelicFilterPlanCsReq = 594;
	CmdGeneralVirtualItemDataNotify = 537;
	CmdPromoteEquipmentScRsp = 527;
	CmdExchangeHcoinScRsp = 559;
}

enum TurnFoodSwitch {
	TURN_FOOD_SWITCH_NONE = 0;
	TURN_FOOD_SWITCH_ATTACK = 1;
	TURN_FOOD_SWITCH_DEFINE = 2;
}

// PBDHGADHIBI (536)
message GetBagCsReq {
}

message Equipment {
	uint32 level = 9;
	uint32 equip_avatar_id = 10;
	uint32 tid = 6;
	uint32 exp = 4;
	uint32 promotion = 2;
	uint32 rank = 12;
	uint32 unique_id = 1;
	bool is_protected = 3;
}

message Relic {
	bool is_protected = 10;
	repeated RelicAffix sub_affix_list = 9;
	uint32 unique_id = 7;
	repeated RelicAffix fnnglgifbbe = 15;
	uint32 level = 4;
	bool is_discarded = 6;
	uint32 exp = 11;
	uint32 tid = 13;
	uint32 main_affix_id = 12;
	uint32 equip_avatar_id = 1;
}

message Material {
	uint64 expire_time = 7;
	uint32 tid = 14;
	uint32 num = 6;
}

message WaitDelResource {
	uint32 num = 8;
	uint32 tid = 3;
}

message Material0 {
	uint64 expire_time = 9;
	uint32 num = 14;
	uint32 tid = 10;
}

// LLDLOPGPNKL (595)
message GetBagScRsp {
	repeated PileItem mdcccjhgfkp = 14;
	repeated Equipment equipment_list = 2;
	uint32 retcode = 9;
	repeated Material0 bplaencojnn = 11;
	repeated Material gamealbkaad = 10;
	repeated Material material_list = 4;
	repeated Relic relic_list = 3;
	repeated Material0 mokcdmcaknl = 13;
	repeated uint32 dooakaaicfp = 8;
	uint32 facgjdachom = 5;
	repeated WaitDelResource wait_del_resource_list = 15;
	repeated uint32 bblohhgadgd = 1;
	repeated TurnFoodSwitch admnoiakief = 12;
	repeated uint32 jldgljdhecb = 6;
}

// HPOBLNINIMF (584)
message PromoteEquipmentCsReq {
	ItemCostData cost_data = 1;
	uint32 equipment_unique_id = 13;
}

// JJPDPGAPFHK (527)
message PromoteEquipmentScRsp {
	uint32 retcode = 1;
}

// OBOODOOEOEP (567)
message LockEquipmentCsReq {
	bool kgaaphohmja = 7;
	repeated uint32 cddhnkppclo = 15;
}

// OMKFPHJGCDK (528)
message LockEquipmentScRsp {
	uint32 retcode = 10;
}

// BHKJNKNKPHC (552)
message UseItemCsReq {
	uint32 use_item_id = 6;
	uint32 base_avatar_id = 1;
	AvatarType enpcgjbkmgj = 2;
	uint32 use_item_count = 9;
	uint32 optional_reward_id = 15;
	bool dbiohfljcjf = 14;
}

// MCEBLFPKDKL (574)
message UseItemScRsp {
	uint32 use_item_id = 14;
	uint64 omllghpolah = 5;
	uint32 use_item_count = 2;
	ItemList foncpacjimb = 12;
	uint32 pbmfnjcglbg = 15;
	uint32 retcode = 11;
}

// FJNNLGCPGGF (524)
message RankUpEquipmentCsReq {
	ItemCostData cost_data = 1;
	uint32 equipment_unique_id = 7;
}

// NLGDOLCFGCJ (593)
message RankUpEquipmentScRsp {
	uint32 retcode = 2;
}

// OAONBEMJKLM (534)
message ExpUpEquipmentCsReq {
	uint32 equipment_unique_id = 3;
	ItemCostData cost_data = 15;
}

// LADEDOFGJOC (543)
message ExpUpEquipmentScRsp {
	uint32 retcode = 7;
	repeated PileItem return_item_list = 8;
}

// HOGEFIHINHJ (546)
message ComposeItemCsReq {
	ItemCostData compose_item_list = 10;
	uint32 compose_id = 12;
	uint32 count = 11;
}

// DFLMFJMIMGM (525)
message ComposeItemScRsp {
	uint32 count = 13;
	ItemList return_item_list = 3;
	uint32 retcode = 1;
	uint32 compose_id = 2;
}

// LMEJEBEIJDF (512)
message ComposeSelectedRelicCsReq {
	uint32 count = 10;
	uint32 compose_id = 1;
	ItemCostData ocefmjhekkm = 6;
	uint32 main_affix_id = 12;
	ItemCostData ejcefpjnopa = 2;
	repeated uint32 plfglpnfnbh = 13;
	uint32 kgekgbgcjnk = 7;
}

// FJGOGAJMMJJ (578)
message ComposeSelectedRelicScRsp {
	uint32 retcode = 5;
	uint32 compose_id = 14;
	ItemList return_item_list = 3;
}

// KHLGMDJDEPE (596)
message ExpUpRelicCsReq {
	uint32 relic_unique_id = 13;
	ItemCostData cost_data = 12;
}

// PICDPGBIIKF (505)
message ExpUpRelicScRsp {
	uint32 retcode = 5;
	repeated PileItem return_item_list = 8;
}

// KLCBJOMLHII (575)
message LockRelicCsReq {
	bool phjdeanebbp = 1;
	bool kgaaphohmja = 11;
	repeated uint32 akneopoeadm = 3;
}

// GDBLBNPPBGN (519)
message LockRelicScRsp {
	uint32 retcode = 12;
}

// IDBMFCFLINB (511)
message DiscardRelicCsReq {
	bool nkmgammogbe = 13;
	bool phjdeanebbp = 15;
	repeated uint32 akneopoeadm = 5;
}

// DLJMDKDFAPM (579)
message DiscardRelicScRsp {
	bool nkmgammogbe = 5;
	uint32 retcode = 13;
}

// LAOHMODLGEB (526)
message SellItemCsReq {
	ItemCostData cost_data = 3;
	bool gpppofiidog = 1;
}

// GGKHKAKGOLF (507)
message SellItemScRsp {
	ItemList return_item_list = 13;
	uint32 retcode = 4;
}

// RechargeSuccNotify (553)
message RechargeSuccNotify {
	uint64 MonthCardOutdateTime = 14;
	string ProductId = 1;
	ItemList ItemList = 15;
	string ChannelOrderNo = 2;
}

// ENGHAHLMAML (590)
message ExchangeHcoinCsReq {
	uint32 num = 12;
}

// ExchangeHcoinScRsp (559)
message ExchangeHcoinScRsp {
	uint32 retcode = 2;
	uint32 Num = 8;
}

// LAJLPECBHDP (529)
message AddEquipmentScNotify {
	uint32 gcomeogcken = 7;
}

// FMDKAALHAFL (550)
message GetRecyleTimeCsReq {
	repeated uint32 logpfngfilm = 13;
}

// IINMIJDFPJM (548)
message GetRecyleTimeScRsp {
	repeated Material0 bplaencojnn = 10;
	uint32 retcode = 5;
}

message NKNMCFALIGM {
	uint32 formula_id = 9;
	uint32 aoibomnegea = 10;
}

// CLDFOHGLLBB (588)
message ComposeLimitNumCompleteNotify {
	repeated NKNMCFALIGM jnjamajnlhe = 15;
}

// EGJJDBEOAEI (558)
message ComposeLimitNumUpdateNotify {
	NKNMCFALIGM japcccbhloh = 3;
}

// LEJCPIFPADI (510)
message DestroyItemCsReq {
	uint32 item_id = 12;
	uint32 item_count = 10;
	uint32 cur_item_count = 14;
}

// HKCAKPMPBNN (576)
message DestroyItemScRsp {
	uint32 retcode = 3;
	uint32 cur_item_count = 12;
}

// HDGAMHMAEBB (535)
message GetMarkItemListCsReq {
}

// ALCPNDPKIND (573)
message GetMarkItemListScRsp {
	uint32 retcode = 4;
	repeated uint32 ankcabigdbn = 8;
}

// KCPLFHMBLBK (517)
message MarkItemCsReq {
	uint32 item_id = 7;
	bool lkigjaojlep = 8;
}

// DJIJNPPOPJP (513)
message MarkItemScRsp {
	uint32 item_id = 6;
	uint32 retcode = 1;
	bool lkigjaojlep = 10;
}

// DMDAELPGMPC (521)
message CancelMarkItemNotify {
	uint32 item_id = 5;
}

// NKIBPDPMIOB (565)
message SyncTurnFoodNotify {
	repeated uint32 dooakaaicfp = 8;
	repeated TurnFoodSwitch admnoiakief = 11;
}

// DIDCIOCNIAE (508)
message SetTurnFoodSwitchCsReq {
	bool dpjehjcdbcm = 1;
	TurnFoodSwitch nifnpblkjbe = 7;
}

// KOFOFDCPONC (518)
message SetTurnFoodSwitchScRsp {
	uint32 retcode = 11;
	TurnFoodSwitch nifnpblkjbe = 4;
	bool dpjehjcdbcm = 3;
}

// GMGBAJMPIME (537)
message GeneralVirtualItemDataNotify {
	bool pgfachcoiej = 6;
	repeated PileItem gpbmhebnofh = 11;
}

message RelicFilterPlanIcon {
	bool IsAvatarIcon = 3;
	uint32 IconId = 6;
}

message RelicFilterPlan {
	uint32 SlotIndex = 2;
	string Name = 1;
	RelicFilterPlanSettings Settings = 15;
	RelicFilterPlanIcon Icon = 8;
	int64 UpdateTimestamp = 13;
	bool IsMarked = 4;
	uint32 AvatarIdOnCreate = 9;
}

// BBMLCBOJJPE (600)
message GetRelicFilterPlanCsReq {
}

// GetRelicFilterPlanScRsp (541)
message GetRelicFilterPlanScRsp {
	uint32 retcode = 5;
	repeated RelicFilterPlan RelicFilterPlanList = 13;
}

// AddRelicFilterPlanCsReq (594)
message AddRelicFilterPlanCsReq {
	RelicFilterPlanIcon Icon = 2;
	RelicFilterPlanSettings Settings = 1;
	bool IsMarked = 5;
	uint32 AvatarIdOnCreate = 7;
	string Name = 15;
}

// AddRelicFilterPlanScRsp (592)
message AddRelicFilterPlanScRsp {
	RelicFilterPlan Plan = 5;
	uint32 retcode = 3;
}

// ModifyRelicFilterPlanCsReq (560)
message ModifyRelicFilterPlanCsReq {
	oneof infoCase_ {
		string Name = 9;
		RelicFilterPlanIcon Icon = 14;
		RelicFilterPlanSettings Settings = 4;
	}
	uint32 SlotIndex = 1;
}

// ModifyRelicFilterPlanScRsp (545)
message ModifyRelicFilterPlanScRsp {
	oneof infoCase_ {
		string Name = 12;
		RelicFilterPlanIcon Icon = 9;
		RelicFilterPlanSettings Settings = 6;
	}
	uint32 retcode = 3;
	uint32 SlotIndex = 10;
	int64 UpdateTimestamp = 1;
}

// DeleteRelicFilterPlanCsReq (564)
message DeleteRelicFilterPlanCsReq {
	bool IsBatchOp = 14;
	repeated uint32 SlotIndexList = 6;
}

// PIAAAKNDLPG (572)
message DeleteRelicFilterPlanScRsp {
	uint32 retcode = 2;
	bool phjdeanebbp = 3;
	repeated uint32 mopamihdind = 11;
}

// MarkRelicFilterPlanCsReq (599)
message MarkRelicFilterPlanCsReq {
	bool IsBatchOp = 2;
	repeated uint32 SlotIndexList = 12;
	bool IsMark = 10;
}

// MarkRelicFilterPlanScRsp (503)
message MarkRelicFilterPlanScRsp {
	bool IsBatchOp = 11;
	repeated uint32 SlotIndexList = 9;
	uint32 retcode = 1;
	bool IsMark = 3;
}

// HOOOPADABIM (540)
message RelicFilterPlanClearNameScNotify {
	uint32 hhlnghknbfe = 10;
}

// FDIFMKDGDKL (561)
message RelicReforgeCsReq {
	uint32 relic_unique_id = 2;
}

// ONEJAABJCFO (530)
message RelicReforgeScRsp {
	uint32 retcode = 6;
}

// HAGNBMIGKON (533)
message RelicReforgeConfirmCsReq {
	uint32 relic_unique_id = 13;
	bool okpbfpilfmd = 1;
}

// JPAGGJLCKIM (597)
message RelicReforgeConfirmScRsp {
	uint32 retcode = 15;
}

// FEPNOPLNIBI
enum CmdJukeboxType {
	CmdJukeboxTypeNone = 0;
	CmdUnlockBackGroundMusicCsReq = 3167;
	CmdGetJukeboxDataCsReq = 3136;
	CmdTrialBackGroundMusicCsReq = 3152;
	CmdTrialBackGroundMusicScRsp = 3174;
	CmdGetJukeboxDataScRsp = 3195;
	CmdPlayBackGroundMusicCsReq = 3184;
	CmdPlayBackGroundMusicScRsp = 3127;
	CmdUnlockBackGroundMusicScRsp = 3128;
}

message MusicData {
	uint32 group_id = 6;
	uint32 id = 3;
	bool is_played = 10;
}

// NECMJOGJKFB (3136)
message GetJukeboxDataCsReq {
}

// OMPCOFKABHB (3195)
message GetJukeboxDataScRsp {
	uint32 retcode = 13;
	repeated MusicData unlocked_music_list = 3;
	uint32 current_music_id = 10;
}

// FPJPDAMHOCF (3184)
message PlayBackGroundMusicCsReq {
	uint32 play_music_id = 8;
}

// DGMDKOMABNF (3127)
message PlayBackGroundMusicScRsp {
	uint32 current_music_id = 7;
	uint32 retcode = 12;
	uint32 play_music_id = 14;
}

// NMFEGICCDHO (3167)
message UnlockBackGroundMusicCsReq {
	repeated uint32 unlock_ids = 2;
}

// GPPCFGJGKPO (3128)
message UnlockBackGroundMusicScRsp {
	repeated MusicData unlocked_music_list = 1;
	repeated uint32 iodbkgnhgpo = 5;
	uint32 retcode = 8;
}

// EANANOFFKKD (3152)
message TrialBackGroundMusicCsReq {
	uint32 iihlejhpkdm = 3;
}

// CHAJEOKOLPM (3174)
message TrialBackGroundMusicScRsp {
	uint32 retcode = 6;
	uint32 iihlejhpkdm = 1;
}

// OBEHAGOMHJI
enum CmdLineupType {
	CmdLineupTypeNone = 0;
	CmdQuitLineupCsReq = 752;
	CmdGetLineupAvatarDataScRsp = 746;
	CmdSwapLineupScRsp = 793;
	CmdSwitchLineupIndexScRsp = 775;
	CmdGetLineupAvatarDataCsReq = 743;
	CmdJoinLineupScRsp = 728;
	CmdSetLineupNameScRsp = 726;
	CmdGetCurLineupDataCsReq = 784;
	CmdChangeLineupLeaderCsReq = 725;
	CmdChangeLineupLeaderScRsp = 796;
	CmdSwitchLineupIndexCsReq = 705;
	CmdQuitLineupScRsp = 774;
	CmdGetStageLineupCsReq = 736;
	CmdReplaceLineupScRsp = 712;
	CmdGetStageLineupScRsp = 795;
	CmdSetLineupNameCsReq = 719;
	CmdJoinLineupCsReq = 767;
	CmdReplaceLineupCsReq = 759;
	CmdSwapLineupCsReq = 724;
	CmdExtraLineupDestroyNotify = 778;
	CmdVirtualLineupDestroyNotify = 790;
	CmdGetAllLineupDataCsReq = 707;
	CmdSyncLineupNotify = 734;
	CmdGetAllLineupDataScRsp = 753;
	CmdGetCurLineupDataScRsp = 727;
	CmdVirtualLineupTrialAvatarChangeScNotify = 729;
}

enum MJHBOLPLJMN {
	LINEUP_TYPE_NONE = 0;
	LINEUP_TYPE_PRESET = 1;
	LINEUP_TYPE_VIRTUAL = 2;
	LINEUP_TYPE_EXTRA = 3;
	LINEUP_TYPE_STORY_LINE = 4;
}

enum ExtraLineupType {
	LINEUP_NONE = 0;
	LINEUP_CHALLENGE = 1;
	LINEUP_ROGUE = 2;
	LINEUP_CHALLENGE_2 = 3;
	LINEUP_CHALLENGE_3 = 4;
	LINEUP_ROGUE_CHALLENGE = 5;
	LINEUP_STAGE_TRIAL = 6;
	LINEUP_ROGUE_TRIAL = 7;
	LINEUP_ACTIVITY = 8;
	LINEUP_BOXING_CLUB = 9;
	LINEUP_TREASURE_DUNGEON = 11;
	LINEUP_CHESS_ROGUE = 12;
	LINEUP_HELIOBUS = 13;
	LINEUP_TOURN_ROGUE = 14;
	LINEUP_RELIC_ROGUE = 15;
	LINEUP_ARCADE_ROGUE = 16;
	LINEUP_MAGIC_ROGUE = 17;
}

enum SyncLineupReason {
	SYNC_REASON_NONE = 0;
	SYNC_REASON_MP_ADD = 1;
	SYNC_REASON_MP_ADD_PROP_HIT = 2;
	SYNC_REASON_HP_ADD = 3;
	SYNC_REASON_HP_ADD_PROP_HIT = 4;
}

// GOGOOFBGCEH (736)
message GetStageLineupCsReq {
}

message LLBNCJKKLOA {
	uint32 stage_type = 1;
	uint32 jnaeckmjifg = 9;
}

// OPAAEFHBDIJ (795)
message GetStageLineupScRsp {
	repeated LLBNCJKKLOA epfhooeidam = 10;
	uint32 retcode = 6;
}

message LineupAvatar {
	uint32 id = 3;
	uint32 slot_type = 4;
	uint32 hp = 14;
	AmountInfo sp = 10;
	uint32 satiety = 6;
	AvatarType avatar_type = 8;
}

message LineupInfo {
	bool pjbjnfnbjon = 6;
	repeated uint32 jnmdgcjhcjj = 10;
	repeated uint32 iddndgkoilc = 8;
	uint32 index = 5;
	uint32 plane_id = 7;
	uint32 game_story_line_id = 13;
	repeated uint32 omagmokjhnm = 11;
	bool is_virtual = 1;
	ExtraLineupType extra_lineup_type = 14;
	uint32 leader_slot = 12;
	uint32 mp = 3;
	string name = 15;
	uint32 max_mp = 9;
	repeated LineupAvatar avatar_list = 4;
}

// PHKDDBDJDLF (784)
message GetCurLineupDataCsReq {
}

// IKJMEIJPDEB (727)
message GetCurLineupDataScRsp {
	LineupInfo lineup = 3;
	uint32 retcode = 7;
}

// EJNJNOOPBIL (767)
message JoinLineupCsReq {
	uint32 index = 5;
	AvatarType avatar_type = 12;
	uint32 plane_id = 13;
	uint32 slot_type = 6;
	bool is_virtual = 10;
	ExtraLineupType extra_lineup_type = 14;
	uint32 base_avatar_id = 4;
}

// HPHGFBOKADB (728)
message JoinLineupScRsp {
	uint32 retcode = 13;
}

// LDGJDICJNMP (752)
message QuitLineupCsReq {
	uint32 index = 5;
	uint32 plane_id = 7;
	bool is_virtual = 12;
	AvatarType avatar_type = 1;
	uint32 base_avatar_id = 11;
	ExtraLineupType extra_lineup_type = 8;
}

// IPCJBKOELAN (774)
message QuitLineupScRsp {
	bool is_mainline = 15;
	uint32 plane_id = 4;
	uint32 retcode = 2;
	uint32 base_avatar_id = 3;
	bool is_virtual = 9;
}

// ECKELIAJIDG (724)
message SwapLineupCsReq {
	uint32 plane_id = 8;
	uint32 jipdggjfkch = 10;
	uint32 index = 11;
	uint32 coiggidecno = 1;
	bool is_virtual = 13;
	ExtraLineupType extra_lineup_type = 12;
}

// GGPLHOGCOAB (793)
message SwapLineupScRsp {
	uint32 retcode = 14;
}

// SyncLineupNotify (734)
message SyncLineupNotify {
	LineupInfo Lineup = 14;
	repeated SyncLineupReason ReasonList = 12;
}

// NFLMLALJCLA (743)
message GetLineupAvatarDataCsReq {
}

message LineupAvatarData {
	uint32 hp = 4;
	AvatarType avatar_type = 9;
	uint32 id = 7;
}

// HCMPOEKADPP (746)
message GetLineupAvatarDataScRsp {
	repeated LineupAvatarData avatar_data_list = 7;
	uint32 retcode = 5;
}

// OEOOFOHAABK (725)
message ChangeLineupLeaderCsReq {
	uint32 slot_type = 2;
}

// KGALGPILNAC (796)
message ChangeLineupLeaderScRsp {
	uint32 slot_type = 6;
	uint32 retcode = 2;
}

// IBGFGNACNCK (705)
message SwitchLineupIndexCsReq {
	uint32 index = 7;
}

// LIOHMBGBGMF (775)
message SwitchLineupIndexScRsp {
	uint32 index = 7;
	uint32 retcode = 15;
}

// DCHGJAHMMCN (719)
message SetLineupNameCsReq {
	string name = 2;
	uint32 index = 3;
}

// KGKDENLKNNI (726)
message SetLineupNameScRsp {
	string name = 15;
	uint32 retcode = 7;
	uint32 index = 6;
}

// MLFOLKMJNCM (707)
message GetAllLineupDataCsReq {
}

// CEBOPGNBEIJ (753)
message GetAllLineupDataScRsp {
	uint32 retcode = 12;
	uint32 cur_index = 1;
	repeated LineupInfo lineup_list = 8;
}

// HPGCMLHNKNJ (790)
message VirtualLineupDestroyNotify {
	uint32 plane_id = 13;
}

message LineupSlotInfo {
	uint32 id = 3;
	uint32 slot_type = 4;
	AvatarType avatar_type = 14;
}

// CNHBCLCAFEE (759)
message ReplaceLineupCsReq {
	uint32 game_story_line_id = 7;
	uint32 index = 14;
	uint32 leader_slot = 11;
	repeated LineupSlotInfo replace_slot_list = 5;
	bool is_virtual = 15;
	ExtraLineupType extra_lineup_type = 4;
	uint32 plane_id = 8;
}

// IJENHEDMOFD (712)
message ReplaceLineupScRsp {
	uint32 retcode = 10;
}

// KMFGKHGJCJB (778)
message ExtraLineupDestroyNotify {
	ExtraLineupType extra_lineup_type = 5;
}

// DLGLFJLNGDC (729)
message VirtualLineupTrialAvatarChangeScNotify {
	bool clgklcheoea = 1;
	uint32 plane_id = 6;
	repeated uint32 aaeaaeonboe = 8;
	repeated uint32 cgkfopjcgln = 9;
}

// ELFNPNMOPJH
enum CmdLobbyType {
	CmdLobbyTypeNone = 0;
	CmdLobbyBeginCsReq = 7365;
	CmdLobbyInviteScRsp = 7360;
	CmdLobbySyncInfoScNotify = 7395;
	CmdLobbyInviteCsReq = 7378;
	CmdLobbyKickOutScRsp = 7396;
	CmdLobbyQuitCsReq = 7398;
	CmdLobbyQuitScRsp = 7363;
	CmdLobbyCreateScRsp = 7400;
	CmdLobbyKickOutCsReq = 7397;
	CmdLobbyModifyPlayerInfoScRsp = 7393;
	CmdLobbyGetInfoCsReq = 7354;
	CmdLobbyGetInfoScRsp = 7390;
	CmdLobbyModifyPlayerInfoCsReq = 7359;
	CmdLobbyBeginScRsp = 7399;
	CmdLobbyInviteScNotify = 7367;
	CmdLobbyJoinCsReq = 7380;
	CmdLobbyJoinScRsp = 7373;
	CmdLobbyCreateCsReq = 7362;
}

// FNOCLGGIIIG (7362)
message LobbyCreateCsReq {
	EMPBNBJLDNI lajonmoiofh = 7;
	FightGameMode mggmpkighbm = 3;
}

// DAAIMMBENHK (7400)
message LobbyCreateScRsp {
	uint64 room_id = 11;
	uint32 retcode = 5;
	repeated GDOHNMGABGE lhifalkbalm = 3;
	FightGameMode mggmpkighbm = 12;
}

// JLKAJPJOADM (7378)
message LobbyInviteCsReq {
	repeated uint32 uid_list = 9;
}

// OBFDGBIIOBB (7360)
message LobbyInviteScRsp {
	uint32 retcode = 7;
	repeated uint32 uid_list = 11;
}

// DCOHMBAMOBH (7380)
message LobbyJoinCsReq {
	EMPBNBJLDNI lajonmoiofh = 7;
	uint64 room_id = 10;
}

// IEPOEJDEGED (7373)
message LobbyJoinScRsp {
	FightGameMode mggmpkighbm = 9;
	repeated GDOHNMGABGE lhifalkbalm = 14;
	uint32 retcode = 11;
	uint64 room_id = 7;
}

// MKGOIALKOMD (7398)
message LobbyQuitCsReq {
}

// MFAMPLHMLOO (7363)
message LobbyQuitScRsp {
	uint32 retcode = 14;
}

// ICHCBKMEGEJ (7365)
message LobbyBeginCsReq {
}

// KDCBCJIJNLN (7399)
message LobbyBeginScRsp {
	uint32 retcode = 5;
	repeated GDOHNMGABGE lhifalkbalm = 6;
}

// DEODIGDOFAI (7359)
message LobbyModifyPlayerInfoCsReq {
	uint32 golcpaploig = 11;
	EMPBNBJLDNI lajonmoiofh = 15;
	LobbyModifyType type = 6;
}

// EBPJOAGIGJD (7393)
message LobbyModifyPlayerInfoScRsp {
	uint32 retcode = 4;
}

// KKDJHKFFJKE (7395)
message LobbySyncInfoScNotify {
	uint32 uid = 3;
	LobbyModifyType type = 2;
	repeated GDOHNMGABGE lhifalkbalm = 4;
}

// IIFFOFEKMMN (7397)
message LobbyKickOutCsReq {
	uint32 uid = 9;
}

// CGPBHJPGPNF (7396)
message LobbyKickOutScRsp {
	uint32 retcode = 10;
}

// JDIJPGIFKKK (7367)
message LobbyInviteScNotify {
	uint32 sender_id = 10;
	FightGameMode mggmpkighbm = 13;
	uint32 room_id = 7;
}

// BAFAEFKIHBA (7354)
message LobbyGetInfoCsReq {
}

// IGKCDDEIKFE (7390)
message LobbyGetInfoScRsp {
	uint32 retcode = 11;
	uint64 fdboeognpfb = 7;
	FightGameMode mggmpkighbm = 10;
	uint64 room_id = 9;
	repeated GDOHNMGABGE lhifalkbalm = 8;
}

// BCGPIONAADA
enum CmdMailType {
	CmdMailTypeNone = 0;
	CmdGetMailScRsp = 895;
	CmdTakeMailAttachmentCsReq = 852;
	CmdDelMailScRsp = 828;
	CmdTakeMailAttachmentScRsp = 874;
	CmdMarkReadMailScRsp = 827;
	CmdNewMailScNotify = 824;
	CmdGetMailCsReq = 836;
	CmdDelMailCsReq = 867;
	CmdMarkReadMailCsReq = 884;
}

enum MailType {
	MAIL_TYPE_NORMAL = 0;
	MAIL_TYPE_STAR = 1;
}

// PCMOHKLLFBO (836)
message GetMailCsReq {
	uint32 alpabmakcfa = 9;
	uint32 lmngakgcgci = 5;
}

message ClientMail {
	int64 Time = 8;
	bool IsRead = 7;
	MailType MailType = 5;
	repeated string ParaList = 10;
	uint32 Id = 1;
	string Content = 15;
	string Sender = 6;
	string Title = 4;
	int64 ExpireTime = 12;
	uint32 TemplateId = 11;
	ItemList Attachment = 2;
}

// GetMailScRsp (895)
message GetMailScRsp {
	bool IsEnd = 14;
	uint32 Start = 1;
	repeated ClientMail NoticeMailList = 10;
	repeated ClientMail MailList = 2;
	uint32 retcode = 5;
	uint32 TotalNum = 9;
}

// AGGMGOLIBJP (884)
message MarkReadMailCsReq {
	uint32 id = 5;
}

// NDJEPIJNEMC (827)
message MarkReadMailScRsp {
	uint32 id = 10;
	uint32 retcode = 14;
}

// CKAOPMKFGJB (867)
message DelMailCsReq {
	repeated uint32 id_list = 9;
}

// DelMailScRsp (828)
message DelMailScRsp {
	repeated uint32 IdList = 10;
	uint32 retcode = 5;
}

// EDPILFNPOLC (852)
message TakeMailAttachmentCsReq {
	uint32 optional_reward_id = 7;
	repeated uint32 ppfhenmpoil = 9;
}

message DNBENAJMAMD {
	uint32 mail_id = 4;
	uint32 item_id = 2;
}

// TakeMailAttachmentScRsp (874)
message TakeMailAttachmentScRsp {
	repeated DNBENAJMAMD FailMailList = 12;
	ItemList Attachment = 14;
	uint32 retcode = 9;
	repeated uint32 SuccMailIdList = 7;
}

// NewMailScNotify (824)
message NewMailScNotify {
	repeated uint32 MailIdList = 10;
}

// CAMEMAHIOCC
enum CmdMapRotationType {
	CmdMapRotationTypeNone = 0;
	CmdInteractChargerCsReq = 6884;
	CmdResetMapRotationRegionScRsp = 6825;
	CmdLeaveMapRotationRegionScRsp = 6893;
	CmdRotateMapScRsp = 6874;
	CmdUpdateEnergyScNotify = 6805;
	CmdDeployRotaterScRsp = 6828;
	CmdEnterMapRotationRegionCsReq = 6836;
	CmdRemoveRotaterScRsp = 6826;
	CmdGetMapRotationDataCsReq = 6834;
	CmdUpdateRotaterScNotify = 6807;
	CmdResetMapRotationRegionCsReq = 6846;
	CmdLeaveMapRotationRegionScNotify = 6896;
	CmdEnterMapRotationRegionScRsp = 6895;
	CmdUpdateMapRotationDataScNotify = 6875;
	CmdRemoveRotaterCsReq = 6819;
	CmdDeployRotaterCsReq = 6867;
	CmdRotateMapCsReq = 6852;
	CmdGetMapRotationDataScRsp = 6843;
	CmdLeaveMapRotationRegionCsReq = 6824;
	CmdInteractChargerScRsp = 6827;
}

message CHAENBOEBOC {
	LAMKDPDMLEC kbmflpnpkoj = 10;
	bool jebfgnmgfnb = 2;
	uint32 ifdgjojkbpn = 14;
	repeated JJEJHCKMJLG dbmhdfodcdb = 13;
	int32 fdggllhcpli = 5;
	PJNIEDFALHN fpgmdipjkdj = 7;
	repeated GFNOJBNEOAA jgfohpfekbe = 3;
}

message LAMKDPDMLEC {
	uint32 pkjcfcmooje = 13;
	uint32 aecpmhpnjln = 1;
}

message PJNIEDFALHN {
	Vector dfpapjellie = 13;
	Vector4 hommaghjepk = 9;
}

// BOGLDKKADHM (6836)
message EnterMapRotationRegionCsReq {
	uint32 ifdgjojkbpn = 12;
	uint32 fdggllhcpli = 13;
	MotionInfo motion = 11;
}

// MACFGGPPOCC (6895)
message EnterMapRotationRegionScRsp {
	uint32 fdggllhcpli = 2;
	uint32 retcode = 12;
	uint32 client_pos_version = 5;
	MotionInfo motion = 10;
	LAMKDPDMLEC kbmflpnpkoj = 15;
	uint32 ifdgjojkbpn = 4;
}

message JJEJHCKMJLG {
	uint32 feofolnnldg = 4;
	uint32 group_id = 14;
}

// MFKADHFMDFH (6884)
message InteractChargerCsReq {
	JJEJHCKMJLG kaejmpakjdp = 8;
}

// KMIBLAEHPLE (6827)
message InteractChargerScRsp {
	LAMKDPDMLEC kbmflpnpkoj = 10;
	JJEJHCKMJLG kaejmpakjdp = 7;
	uint32 retcode = 14;
}

message GFNOJBNEOAA {
	uint32 group_id = 6;
	float mgkgeeplbjl = 7;
	uint32 feofolnnldg = 5;
}

// EJMBMCNGBGP (6867)
message DeployRotaterCsReq {
	GFNOJBNEOAA licnpajljbj = 15;
}

// CHMGDICEMPM (6828)
message DeployRotaterScRsp {
	LAMKDPDMLEC kbmflpnpkoj = 4;
	uint32 retcode = 13;
	GFNOJBNEOAA licnpajljbj = 3;
}

// GDDCHKCJDMB (6852)
message RotateMapCsReq {
	PJNIEDFALHN fpgmdipjkdj = 13;
	uint32 group_id = 8;
	uint32 feofolnnldg = 4;
	MotionInfo motion = 15;
}

// EKPMDCOLHMC (6874)
message RotateMapScRsp {
	uint32 retcode = 7;
	uint32 client_pos_version = 13;
	MotionInfo motion = 3;
}

// EALKPEFDAED (6824)
message LeaveMapRotationRegionCsReq {
	MotionInfo motion = 3;
}

// JNMGLPKGAHF (6893)
message LeaveMapRotationRegionScRsp {
	uint32 client_pos_version = 4;
	MotionInfo motion = 1;
	uint32 retcode = 14;
}

// NCGGAGEHGCL (6834)
message GetMapRotationDataCsReq {
}

// EFNLILEBHBJ (6843)
message GetMapRotationDataScRsp {
	uint32 retcode = 8;
	LAMKDPDMLEC kbmflpnpkoj = 15;
	PJNIEDFALHN fpgmdipjkdj = 2;
	repeated GFNOJBNEOAA jgfohpfekbe = 12;
	uint32 ifdgjojkbpn = 11;
	repeated JJEJHCKMJLG dbmhdfodcdb = 3;
	int32 fdggllhcpli = 9;
	bool goflefhokdf = 14;
}

// PLOBFPFAANJ (6846)
message ResetMapRotationRegionCsReq {
	MotionInfo motion = 13;
	PJNIEDFALHN fpgmdipjkdj = 1;
}

// LDJGOKJOFOM (6825)
message ResetMapRotationRegionScRsp {
	uint32 client_pos_version = 9;
	uint32 retcode = 7;
	MotionInfo motion = 10;
}

// DBCIBDIMPJE (6896)
message LeaveMapRotationRegionScNotify {
}

// JCPMPIOLLMH (6805)
message UpdateEnergyScNotify {
	LAMKDPDMLEC kbmflpnpkoj = 14;
}

// DPBMAMHEHGG (6875)
message UpdateMapRotationDataScNotify {
	uint32 ifdgjojkbpn = 10;
	repeated JJEJHCKMJLG dbmhdfodcdb = 7;
	PJNIEDFALHN fpgmdipjkdj = 11;
	bool goflefhokdf = 14;
	int32 fdggllhcpli = 4;
	LAMKDPDMLEC kbmflpnpkoj = 13;
	repeated GFNOJBNEOAA jgfohpfekbe = 12;
}

// IOFBMHAJINJ (6819)
message RemoveRotaterCsReq {
	GFNOJBNEOAA licnpajljbj = 5;
}

// CPIGANMJBCJ (6826)
message RemoveRotaterScRsp {
	GFNOJBNEOAA licnpajljbj = 5;
	LAMKDPDMLEC kbmflpnpkoj = 2;
	uint32 retcode = 10;
}

// OBDNFJIPIBH (6807)
message UpdateRotaterScNotify {
	repeated GFNOJBNEOAA jgfohpfekbe = 14;
}

// FDNKMPBGCKI
enum CmdMarkChestType {
	CmdMarkChestTypeNone = 0;
	CmdUpdateMarkChestCsReq = 8187;
	CmdMarkChestChangedScNotify = 8197;
	CmdGetMarkChestCsReq = 8200;
	CmdUpdateMarkChestScRsp = 8183;
	CmdGetMarkChestScRsp = 8195;
}

message KEKMJKOHBOH {
	uint32 config_id = 5;
	uint32 group_id = 3;
	uint32 floor_id = 15;
	uint32 plane_id = 10;
}

message AGMCNEJANDK {
	int64 goonpndocih = 13;
	uint32 cbahfgpjemp = 5;
	repeated KEKMJKOHBOH cjgmlcaklfi = 8;
}

// FBMODDBJHFH (8200)
message GetMarkChestCsReq {
}

// JMMPEKPEDNL (8195)
message GetMarkChestScRsp {
	repeated AGMCNEJANDK najmejjhaek = 11;
	uint32 retcode = 9;
}

// CJPLPHNOHDK (8187)
message UpdateMarkChestCsReq {
	uint32 ombecimngee = 10;
	repeated KEKMJKOHBOH cjgmlcaklfi = 8;
	uint32 cbahfgpjemp = 15;
}

// BPCEMJPNPGM (8183)
message UpdateMarkChestScRsp {
	uint32 retcode = 1;
	repeated AGMCNEJANDK najmejjhaek = 6;
	uint32 ombecimngee = 8;
	uint32 cbahfgpjemp = 14;
}

// LOMHLIIGALC (8197)
message MarkChestChangedScNotify {
	repeated AGMCNEJANDK najmejjhaek = 5;
}

// KPAJOLAAIGM
enum CmdMatchType {
	CmdMatchTypeNone = 0;
	CmdCancelMatchCsReq = 7330;
	CmdGetCrossInfoCsReq = 7349;
	CmdGetCrossInfoScRsp = 7309;
	CmdStartMatchCsReq = 7312;
	CmdMatchResultScNotify = 7315;
	CmdStartMatchScRsp = 7350;
	CmdCancelMatchScRsp = 7323;
}

// NMDOCPDFPIH (7312)
message StartMatchCsReq {
	EMPBNBJLDNI lajonmoiofh = 9;
	FightGameMode mggmpkighbm = 2;
}

// ILDKPFKIJBF (7350)
message StartMatchScRsp {
	EMPBNBJLDNI lajonmoiofh = 8;
	uint32 retcode = 1;
}

// KCEDKAFFLJA (7330)
message CancelMatchCsReq {
}

// CNNNJMPNGCL (7323)
message CancelMatchScRsp {
	uint32 retcode = 4;
}

// GOCCPIJALCG (7315)
message MatchResultScNotify {
	uint32 retcode = 7;
	repeated GDOHNMGABGE lhifalkbalm = 1;
}

// ACKMKEPADPH (7349)
message GetCrossInfoCsReq {
}

// CDKGOMMALLI (7309)
message GetCrossInfoScRsp {
	uint64 room_id = 8;
	FightGameMode mggmpkighbm = 14;
	uint32 retcode = 4;
	uint64 fdboeognpfb = 12;
}

// BEHMPIBGGIJ
enum CmdMatchThreeModuleType {
	CmdMatchThreeModuleTypeNone = 0;
	CmdMatchThreeSetBirdPosScRsp = 7409;
	CmdMatchThreeLevelEndScRsp = 7423;
	CmdMatchThreeGetDataScRsp = 7450;
	CmdMatchThreeSyncDataScNotify = 7415;
	CmdMatchThreeSetBirdPosCsReq = 7449;
	CmdMatchThreeLevelEndCsReq = 7430;
	CmdMatchThreeGetDataCsReq = 7412;
}

enum BCGIJJBIFEI {
	MatchThreeStatistics_None = 0;
	MatchThreeStatistics_First = 1;
	MatchThreeStatistics_Second = 2;
	MatchThreeStatistics_Third = 3;
	MatchThreeStatistics_Fruit = 4;
	MatchThreeStatistics_Skill = 5;
	MatchThreeStatistics_Defeat = 6;
	MatchThreeStatistics_Bomb = 7;
	MatchThreeStatistics_Damage = 8;
	MatchThreeStatistics_Energy = 9;
	MatchThreeStatistics_SwapBomb = 10;
}

// LKCJFMHBBPH (7412)
message MatchThreeGetDataCsReq {
}

message EGPJJAKFEOC {
	uint32 level_id = 8;
	uint32 hkihpndbeom = 11;
}

message DAGMFHEIMKM {
	uint32 count = 12;
	uint32 pos = 8;
	uint32 cjelhngokdc = 13;
	uint32 egjbcbeiiii = 11;
}

message AKPLEIPECMG {
	map<uint32, uint32> ngnngfdnhci = 9;
	repeated EGPJJAKFEOC ejjpilnhapp = 12;
	map<uint32, uint32> mcdcmlccabi = 4;
	repeated DAGMFHEIMKM bdeollehcjd = 14;
}

// AOFOFIGEDLM (7450)
message MatchThreeGetDataScRsp {
	uint32 retcode = 10;
	AKPLEIPECMG ikcemnhlcec = 5;
}

// NKALKGJHDIH (7430)
message MatchThreeLevelEndCsReq {
	map<uint32, uint32> mcdcmlccabi = 7;
	uint32 egjbcbeiiii = 2;
	uint32 level_id = 6;
	repeated uint32 ijmdphlongg = 9;
	string dnmmbglnjei = 1;
	uint32 cjelhngokdc = 8;
	uint32 hkihpndbeom = 15;
}

// BEOJIOEEIKE (7423)
message MatchThreeLevelEndScRsp {
	uint32 level_id = 4;
	uint32 hkihpndbeom = 9;
	uint32 retcode = 14;
}

// ABFPOHHGFJK (7415)
message MatchThreeSyncDataScNotify {
	AKPLEIPECMG ikcemnhlcec = 9;
}

// MMGJFLCPBNC (7449)
message MatchThreeSetBirdPosCsReq {
	uint32 egjbcbeiiii = 5;
	uint32 pos = 7;
}

// GJCNPPHIHDN (7409)
message MatchThreeSetBirdPosScRsp {
	uint32 pos = 2;
	uint32 egjbcbeiiii = 10;
	uint32 retcode = 1;
}

// KEJHBDJFLLH
enum CmdMessageType {
	CmdMessageTypeNone = 0;
	CmdGetNpcStatusCsReq = 2784;
	CmdFinishItemIdScRsp = 2728;
	CmdGetNpcMessageGroupScRsp = 2795;
	CmdGetMissionMessageInfoCsReq = 2734;
	CmdFinishSectionIdScRsp = 2774;
	CmdFinishItemIdCsReq = 2767;
	CmdGetNpcStatusScRsp = 2727;
	CmdFinishPerformSectionIdCsReq = 2724;
	CmdGetNpcMessageGroupCsReq = 2736;
	CmdFinishPerformSectionIdScRsp = 2793;
	CmdFinishSectionIdCsReq = 2752;
	CmdGetMissionMessageInfoScRsp = 2743;
}

// GHFFINBPNIN (2736)
message GetNpcMessageGroupCsReq {
	repeated uint32 contact_id_list = 4;
}

message MessageItem {
	uint32 text_id = 7;
	uint32 item_id = 12;
}

message MessageSection {
	uint32 id = 10;
	repeated MessageItem item_list = 13;
	repeated uint32 message_item_list = 7;
	MessageSectionStatus status = 1;
	uint32 frozen_item_id = 4;
}

message MessageGroup {
	MessageGroupStatus status = 3;
	uint32 message_section_id = 4;
	uint32 id = 5;
	repeated MessageSection message_section_list = 15;
	int64 refresh_time = 6;
}

// GMEJKNDMANG (2795)
message GetNpcMessageGroupScRsp {
	repeated MessageGroup message_group_list = 8;
	uint32 retcode = 10;
}

// IGMAEBHLHCD (2784)
message GetNpcStatusCsReq {
}

message NpcStatus {
	bool is_finish = 2;
	uint32 npc_id = 12;
}

message GroupStatus {
	MessageGroupStatus group_status = 14;
	uint32 group_id = 10;
	int64 refresh_time = 11;
}

message SectionStatus {
	MessageSectionStatus section_status = 12;
	uint32 section_id = 2;
}

// NCMBLCDBCEN (2727)
message GetNpcStatusScRsp {
	uint32 retcode = 7;
	repeated NpcStatus npc_status_list = 10;
}

// JJFGMELPDCB (2767)
message FinishItemIdCsReq {
	uint32 item_id = 8;
	uint32 text_id = 5;
}

// KAHIFNEJBDE (2728)
message FinishItemIdScRsp {
	uint32 retcode = 2;
	uint32 text_id = 4;
	uint32 item_id = 3;
}

// MJGOGKDAPGP (2752)
message FinishSectionIdCsReq {
	uint32 section_id = 11;
}

// DKDBPAADAIM (2774)
message FinishSectionIdScRsp {
	uint32 section_id = 4;
	uint32 retcode = 5;
	ItemList reward = 9;
}

// FLPBBLJLBBC (2724)
message FinishPerformSectionIdCsReq {
	uint32 section_id = 5;
	repeated MessageItem item_list = 4;
}

// AEDAMKIMAHB (2793)
message FinishPerformSectionIdScRsp {
	uint32 section_id = 9;
	repeated MessageItem item_list = 7;
	uint32 retcode = 10;
	ItemList reward = 11;
}

// ENINGCKHBOH (2734)
message GetMissionMessageInfoCsReq {
}

// FKBKHFGKEKL (2743)
message GetMissionMessageInfoScRsp {
	map<uint32, uint32> kecoljabafm = 4;
	uint32 retcode = 10;
}

// BLIHALAFNMI
enum CmdMiscModuleType {
	CmdMiscModuleTypeNone = 0;
	CmdTriggerVoiceCsReq = 4146;
	CmdCancelCacheNotifyCsReq = 4124;
	CmdSecurityReportCsReq = 4134;
	CmdDifficultyAdjustmentGetDataCsReq = 4188;
	CmdMazeKillDirectCsReq = 4135;
	CmdSubmitOrigamiItemCsReq = 4196;
	CmdMazeKillDirectScRsp = 4173;
	CmdUpdateGunPlayDataScRsp = 4148;
	CmdGetGunPlayDataCsReq = 4178;
	CmdShareScRsp = 4195;
	CmdDifficultyAdjustmentUpdateDataScRsp = 4176;
	CmdGetMovieRacingDataScRsp = 4190;
	CmdGetMovieRacingDataCsReq = 4153;
	CmdSecurityReportScRsp = 4143;
	CmdGetGunPlayDataScRsp = 4129;
	CmdGetShareDataCsReq = 4184;
	CmdTakePictureCsReq = 4167;
	CmdTriggerVoiceScRsp = 4125;
	CmdUpdateMovieRacingDataScRsp = 4112;
	CmdSubmitOrigamiItemScRsp = 4105;
	CmdShareCsReq = 4136;
	CmdTakePictureScRsp = 4128;
	CmdUpdateMovieRacingDataCsReq = 4159;
	CmdGetShareDataScRsp = 4127;
	CmdDifficultyAdjustmentUpdateDataCsReq = 4110;
	CmdDifficultyAdjustmentGetDataScRsp = 4158;
	CmdUpdateGunPlayDataCsReq = 4150;
	CmdCancelCacheNotifyScRsp = 4193;
}

enum IHHMHLDLFHN {
	CACHE_NOTIFY_TYPE_NONE = 0;
	CACHE_NOTIFY_TYPE_RECYCLE = 1;
	CACHE_NOTIFY_TYPE_RECHARGE = 2;
}

enum NMLCFENPMNB {
	MOVIE_RACING_OVER_TAKE = 0;
	MOVIE_RACING_OVER_TAKE_ENDLESS = 1;
	MOVIE_RACING_SHOOTING = 2;
	MOVIE_RACING_SHOOTING_ENDLESS = 3;
}

enum AHCCEBCOHJJ {
	DIFFICULTY_AJUSTMENT_TYPE_DEFAULT = 0;
	DIFFICULTY_AJUSTMENT_TYPE_EASY = 1;
}

enum PIKBNAHDDFL {
	DIFFICULTY_AJUSTMENT_SOURCE_NONE = 0;
	DIFFICULTY_AJUSTMENT_SOURCE_RAID = 1;
	DIFFICULTY_AJUSTMENT_SOURCE_EVENT = 2;
}

enum NAOLNICFDLN {
	MAZE_KILL_SOURCE_NONE = 0;
	MAZE_KILL_SOURCE_SWITCH_HAND = 1;
	MAZE_KILL_SOURCE_TIME_LINE = 2;
}

// IMNNCIDCHDL (4136)
message ShareCsReq {
	uint32 ieheogbijfe = 13;
}

message LNAGMOLCNOH {
	uint32 ieheogbijfe = 9;
	uint32 ejlemgknokp = 12;
}

// DHDLBANOOOI (4195)
message ShareScRsp {
	ItemList reward = 13;
	LNAGMOLCNOH hiapnjhnjgm = 3;
	uint32 retcode = 1;
}

// EBGCGBMJJJF (4184)
message GetShareDataCsReq {
}

// NGBLGFBDJEN (4127)
message GetShareDataScRsp {
	repeated LNAGMOLCNOH mbogiknfmid = 9;
	uint32 retcode = 3;
}

// LBKHODKEBDK (4167)
message TakePictureCsReq {
}

// CONAGEHJMBE (4128)
message TakePictureScRsp {
	uint32 retcode = 13;
}

message NGCDDGDGNAP {
	uint32 mhbmnhkjbia = 12;
	repeated uint32 mmojnoohnbl = 15;
	uint32 type = 4;
}

// INIJIJPPANH (4146)
message TriggerVoiceCsReq {
	repeated NGCDDGDGNAP anpifnkmioa = 9;
}

// BCNLLNMOMAO (4125)
message TriggerVoiceScRsp {
	uint32 retcode = 3;
}

// MMHAOBBFJFH (4124)
message CancelCacheNotifyCsReq {
	IHHMHLDLFHN type = 6;
	repeated uint32 dnnhnhabfio = 14;
	repeated string bgemfghabba = 15;
}

// JMIHPGEEMLP (4193)
message CancelCacheNotifyScRsp {
	uint32 retcode = 13;
}

// LCADBDAGBIK (4134)
message SecurityReportCsReq {
	string egnkofplgpi = 1;
}

// BICJAACDCGG (4143)
message SecurityReportScRsp {
	uint32 retcode = 8;
}

message DFMKPMJDIPC {
	uint32 jccfflhdafm = 8;
	uint32 level = 15;
	uint32 fjhgkgkfffn = 9;
	NMLCFENPMNB type = 1;
}

// OIKAPBKNLHN (4153)
message GetMovieRacingDataCsReq {
}

// BGMOFAFJDCF (4190)
message GetMovieRacingDataScRsp {
	repeated DFMKPMJDIPC pmlmdipbchc = 11;
	uint32 retcode = 7;
}

// LKKCKNIHNHG (4159)
message UpdateMovieRacingDataCsReq {
	DFMKPMJDIPC lbepeghgfih = 5;
}

// ICIGNFHLPHG (4112)
message UpdateMovieRacingDataScRsp {
	DFMKPMJDIPC lbepeghgfih = 4;
	uint32 retcode = 15;
}

// JALAEOHMPEG (4196)
message SubmitOrigamiItemCsReq {
	uint32 bimchmdjplc = 11;
}

// FBHMCPCNKBG (4105)
message SubmitOrigamiItemScRsp {
	uint32 retcode = 3;
	uint32 bimchmdjplc = 11;
}

message GCNAPNPOPEK {
	uint32 level = 10;
	uint32 jccfflhdafm = 1;
	uint32 okmfnbohjnl = 8;
	bool nfidkghkplc = 14;
}

// ELMJEGELOEP (4178)
message GetGunPlayDataCsReq {
}

// FFFGAMCEADA (4129)
message GetGunPlayDataScRsp {
	uint32 retcode = 3;
	repeated GCNAPNPOPEK ejoegocgnoe = 14;
}

// FHMEFADJENI (4150)
message UpdateGunPlayDataCsReq {
	GCNAPNPOPEK mdgbognepji = 11;
	uint64 dnmmbglnjei = 1;
	uint32 eibmpfhoijb = 8;
	uint32 group_id = 5;
}

// HDFAEDEAKOA (4148)
message UpdateGunPlayDataScRsp {
	uint32 retcode = 12;
	GCNAPNPOPEK mdgbognepji = 6;
}

message MDHBKFGIJJL {
	uint32 id = 1;
	AHCCEBCOHJJ amafbbdilid = 11;
	PIKBNAHDDFL leeacmngdfl = 7;
}

// IEEAAPFHOMO (4188)
message DifficultyAdjustmentGetDataCsReq {
}

// AIAIHKEEBMO (4158)
message DifficultyAdjustmentGetDataScRsp {
	uint32 retcode = 3;
	repeated MDHBKFGIJJL content_package_list = 7;
}

// PBGIPOHEPJJ (4110)
message DifficultyAdjustmentUpdateDataCsReq {
	MDHBKFGIJJL data = 7;
}

// ODCNNJEENFB (4176)
message DifficultyAdjustmentUpdateDataScRsp {
	uint32 retcode = 6;
	MDHBKFGIJJL data = 13;
	repeated MDHBKFGIJJL content_package_list = 8;
}

// PDPLLIPJAHG (4135)
message MazeKillDirectCsReq {
	repeated uint32 entity_list = 10;
	uint32 iipaaljcccd = 7;
	NAOLNICFDLN leeacmngdfl = 11;
}

// CHLCOEJNKMJ (4173)
message MazeKillDirectScRsp {
	uint32 retcode = 14;
	repeated uint32 entity_list = 2;
}

// BCAMKDGIOBH
enum CmdMissionType {
	CmdMissionTypeNone = 0;
	CmdTeleportToMissionResetPointScRsp = 1248;
	CmdStartFinishMainMissionScNotify = 1258;
	CmdAcceptMainMissionCsReq = 1210;
	CmdAcceptMissionEventCsReq = 1219;
	CmdInterruptMissionEventScRsp = 1259;
	CmdFinishedMissionScNotify = 1208;
	CmdUpdateTrackMainMissionIdScRsp = 1265;
	CmdInterruptMissionEventCsReq = 1290;
	CmdSyncTaskCsReq = 1228;
	CmdSetMissionEventProgressScRsp = 1278;
	CmdSubMissionRewardScNotify = 1229;
	CmdGetMissionStatusCsReq = 1207;
	CmdSyncTaskScRsp = 1252;
	CmdGetMainMissionCustomValueScRsp = 1273;
	CmdFinishTalkMissionScRsp = 1227;
	CmdUpdateTrackMainMissionIdCsReq = 1221;
	CmdMissionRewardScNotify = 1267;
	CmdGetMainMissionCustomValueCsReq = 1235;
	CmdGetMissionDataScRsp = 1295;
	CmdFinishTalkMissionCsReq = 1284;
	CmdStartFinishSubMissionScNotify = 1288;
	CmdGetMissionEventDataCsReq = 1296;
	CmdMissionAcceptScNotify = 1217;
	CmdMissionGroupWarnScNotify = 1243;
	CmdMissionEventRewardScNotify = 1275;
	CmdAcceptMissionEventScRsp = 1226;
	CmdGetMissionStatusScRsp = 1253;
	CmdSetMissionEventProgressCsReq = 1212;
	CmdTeleportToMissionResetPointCsReq = 1250;
	CmdGetMissionDataCsReq = 1236;
	CmdGetMissionEventDataScRsp = 1205;
	CmdFinishCosumeItemMissionScRsp = 1225;
	CmdFinishCosumeItemMissionCsReq = 1246;
	CmdAcceptMainMissionScRsp = 1276;
}

enum MissionSyncRecord {
	MISSION_SYNC_RECORD_NONE = 0;
	MISSION_SYNC_RECORD_MAIN_MISSION_ACCEPT = 1;
	MISSION_SYNC_RECORD_MAIN_MISSION_START = 2;
	MISSION_SYNC_RECORD_MAIN_MISSION_FINISH = 3;
	MISSION_SYNC_RECORD_MAIN_MISSION_DELETE = 4;
	MISSION_SYNC_RECORD_MISSION_ACCEPT = 11;
	MISSION_SYNC_RECORD_MISSION_START = 12;
	MISSION_SYNC_RECORD_MISSION_FINISH = 13;
	MISSION_SYNC_RECORD_MISSION_DELETE = 14;
	MISSION_SYNC_RECORD_MISSION_PROGRESS = 15;
}

enum MPCEJBFCKFO {
	MAIN_MISSION_SYNC_NONE = 0;
	MAIN_MISSION_SYNC_MCV = 1;
}

enum TrackMainMissionUpdateReasonId {
	TRACK_MAIN_MISSION_UPDATE_NONE = 0;
	TRACK_MAIN_MISSION_UPDATE_AUTO = 1;
	TRACK_MAIN_MISSION_UPDATE_MANUAL = 2;
	TRACK_MAIN_MISSION_UPDATE_LOGIN_REPORT = 3;
}

// DEOLLDHIJAK (1236)
message GetMissionDataCsReq {
}

message IBFFCOFEENL {
	uint32 id = 8;
	uint32 cgnkhekhiml = 12;
	MissionSyncRecord type = 7;
}

message Mission {
	uint32 id = 13;
	uint32 progress = 4;
	MissionStatus status = 5;
}

message MissionCustomValue {
	uint32 index = 7;
	uint32 custom_value = 10;
}

message MissionCustomValueList {
	repeated MissionCustomValue custom_value_list = 2;
}

message MainMission {
	uint32 id = 11;
	MissionStatus status = 2;
	repeated MissionCustomValue custom_value_list = 3;
}

message BMHINPIMHAH {
	oneof KDGDJDMCMLG {
		MissionCustomValueList custom_value_list = 578;
	}
	uint32 id = 8;
}

message MainMissionCustomValue {
	uint32 main_mission_id = 4;
	MissionCustomValueList custom_value_list = 7;
}

// KLEMDDAOLPF (1295)
message GetMissionDataScRsp {
	repeated MainMission main_mission_list = 5;
	repeated Mission mission_list = 4;
	uint32 retcode = 10;
	repeated uint32 kfoglkhpahg = 14;
	uint32 track_mission_id = 13;
}

// BAJCPDEJFFH (1210)
message AcceptMainMissionCsReq {
	uint32 main_mission_id = 15;
}

// FICJJOOMMIF (1276)
message AcceptMainMissionScRsp {
	uint32 retcode = 7;
	uint32 main_mission_id = 6;
}

// DJLONLDIBGJ (1284)
message FinishTalkMissionCsReq {
	uint32 sub_mission_id = 6;
	string talk_str = 3;
	repeated MissionCustomValue custom_value_list = 8;
}

// LOJBENKOODK (1227)
message FinishTalkMissionScRsp {
	uint32 sub_mission_id = 9;
	string talk_str = 6;
	repeated MissionCustomValue custom_value_list = 7;
	uint32 retcode = 3;
}

// GJGLOCODECG (1267)
message MissionRewardScNotify {
	ItemList reward = 8;
	uint32 sub_mission_id = 12;
	uint32 main_mission_id = 10;
}

// FFNEIKODPBF (1229)
message SubMissionRewardScNotify {
	uint32 sub_mission_id = 7;
	ItemList reward = 1;
}

// CGDECKMODDA (1228)
message SyncTaskCsReq {
	string key = 1;
}

// FEOIEHMODJF (1252)
message SyncTaskScRsp {
	uint32 retcode = 8;
	string key = 6;
}

// NICHEHPFBJC (1243)
message MissionGroupWarnScNotify {
	repeated uint32 group_id_list = 3;
}

// AFODPJKGOIG (1246)
message FinishCosumeItemMissionCsReq {
	ItemList item_list = 10;
	uint32 sub_mission_id = 2;
}

// IPBMJDHILNA (1225)
message FinishCosumeItemMissionScRsp {
	uint32 retcode = 6;
	uint32 sub_mission_id = 5;
}

// HOLBMFBBKPL (1296)
message GetMissionEventDataCsReq {
}

// HGMAKMKJHOJ (1205)
message GetMissionEventDataScRsp {
	uint32 retcode = 12;
	uint32 challenge_event_id = 5;
	repeated Mission mission_event_list = 13;
}

// BBBIGEFBGMJ (1275)
message MissionEventRewardScNotify {
	ItemList reward = 2;
	uint32 mission_event_id = 8;
}

// DACMCGGONJF (1219)
message AcceptMissionEventCsReq {
	uint32 mission_event_id = 6;
}

// FAJIDEGHKLG (1226)
message AcceptMissionEventScRsp {
	uint32 retcode = 8;
	Mission ahfdnedbgmc = 1;
}

// HFBHMCCHOIO (1207)
message GetMissionStatusCsReq {
	repeated uint32 mission_event_id_list = 7;
	repeated uint32 main_mission_id_list = 8;
	repeated uint32 sub_mission_id_list = 3;
}

// GetMissionStatusScRsp (1253)
message GetMissionStatusScRsp {
	repeated uint32 DisabledMainMissionIdList = 7;
	uint32 retcode = 6;
	repeated MainMissionCustomValue MainMissionMcvList = 12;
	repeated uint32 UnfinishedMainMissionIdList = 3;
	repeated Mission MissionEventStatusList = 1;
	repeated uint32 FinishedMainMissionIdList = 13;
	repeated Mission SubMissionStatusList = 9;
	repeated uint32 CurversionFinishedMainMissionIdList = 15;
}

// JDAHPAHOJJM (1290)
message InterruptMissionEventCsReq {
	uint32 mission_event_id = 14;
}

// AABALIGDAKB (1259)
message InterruptMissionEventScRsp {
	uint32 mission_event_id = 4;
	uint32 retcode = 5;
}

// FGENEDNEHOC (1212)
message SetMissionEventProgressCsReq {
	uint32 progress = 5;
	uint32 mission_event_id = 2;
}

// BNPDKFGIBBF (1278)
message SetMissionEventProgressScRsp {
	uint32 retcode = 10;
}

// LKDCEBBPJNF (1250)
message TeleportToMissionResetPointCsReq {
}

// PNMLPCMKNPJ (1248)
message TeleportToMissionResetPointScRsp {
	uint32 client_pos_version = 1;
	MotionInfo motion = 15;
	uint32 retcode = 11;
}

// JDCHEMNDHCM (1288)
message StartFinishSubMissionScNotify {
	uint32 sub_mission_id = 9;
}

// MDJDGJDJBCP (1258)
message StartFinishMainMissionScNotify {
	uint32 main_mission_id = 9;
}

// EBHFHNIMMME (1235)
message GetMainMissionCustomValueCsReq {
	repeated uint32 main_mission_id_list = 13;
}

// HDHICLBCDLI (1273)
message GetMainMissionCustomValueScRsp {
	repeated MainMission main_mission_list = 3;
	uint32 retcode = 2;
}

// FEKEMGGODPI (1217)
message MissionAcceptScNotify {
	repeated uint32 sub_mission_id_list = 7;
}

// KGJAJBLPHFE (1221)
message UpdateTrackMainMissionIdCsReq {
	uint32 track_mission_id = 6;
	uint32 pokbilkjiae = 5;
	TrackMainMissionUpdateReasonId pjopgadpdhd = 4;
}

// KPPGGGBNABI (1265)
message UpdateTrackMainMissionIdScRsp {
	uint32 prev_track_mission_id = 15;
	uint32 track_mission_id = 11;
	uint32 retcode = 13;
}

// FAFGMGHBBAK (1208)
message FinishedMissionScNotify {
	repeated uint32 finished_main_mission_id_list = 4;
}

// PBKGAINOAJG
enum CmdMonopolyType {
	CmdMonopolyTypeNone = 0;
	CmdMonopolyGuessChooseScRsp = 7037;
	CmdMonopolyActionResultScNotify = 7084;
	CmdDailyFirstEnterMonopolyActivityScRsp = 7025;
	CmdGetMonopolyInfoScRsp = 7095;
	CmdMonopolyEventLoadUpdateScNotify = 7001;
	CmdGetMonopolyInfoCsReq = 7036;
	CmdMonopolyBuyGoodsScRsp = 7090;
	CmdGetMbtiReportCsReq = 7099;
	CmdMonopolySttUpdateScNotify = 7032;
	CmdMonopolyGetDailyInitItemCsReq = 7063;
	CmdMonopolyGetRegionProgressCsReq = 7044;
	CmdMonopolyRollDiceCsReq = 7028;
	CmdMonopolyGiveUpCurContentScRsp = 7029;
	CmdMonopolyAcceptQuizCsReq = 7021;
	CmdGetMonopolyFriendRankingListScRsp = 7060;
	CmdMonopolyQuizDurationChangeScNotify = 7039;
	CmdMonopolyConfirmRandomScRsp = 7007;
	CmdMonopolyMoveScRsp = 7024;
	CmdMonopolyCheatDiceCsReq = 7050;
	CmdMonopolyEventSelectFriendCsReq = 7040;
	CmdMonopolyClickMbtiReportCsReq = 7085;
	CmdMonopolyUpgradeAssetScRsp = 7012;
	CmdMonopolyBuyGoodsCsReq = 7053;
	CmdMonopolyConfirmRandomCsReq = 7026;
	CmdMonopolyGetRaffleTicketCsReq = 7016;
	CmdMonopolyConditionUpdateScNotify = 7015;
	CmdMonopolyGiveUpCurContentCsReq = 7078;
	CmdDailyFirstEnterMonopolyActivityCsReq = 7046;
	CmdGetSocialEventServerCacheCsReq = 7033;
	CmdDeleteSocialEventServerCacheScRsp = 7068;
	CmdDeleteSocialEventServerCacheCsReq = 7083;
	CmdMonopolyContentUpdateScNotify = 7088;
	CmdGetMonopolyDailyReportCsReq = 7038;
	CmdGetMonopolyMbtiReportRewardCsReq = 7082;
	CmdMonopolyTakePhaseRewardScRsp = 7020;
	CmdMonopolyUpgradeAssetCsReq = 7059;
	CmdMonopolyGetRafflePoolInfoScRsp = 7056;
	CmdMonopolyGetDailyInitItemScRsp = 7089;
	CmdGetSocialEventServerCacheScRsp = 7097;
	CmdMonopolyGuessChooseCsReq = 7018;
	CmdMonopolyGameRaiseRatioCsReq = 7058;
	CmdMonopolyDailySettleScNotify = 7094;
	CmdMonopolyScrachRaffleTicketCsReq = 7098;
	CmdMonopolySelectOptionCsReq = 7093;
	CmdMonopolyGameGachaCsReq = 7035;
	CmdMonopolyReRollRandomScRsp = 7019;
	CmdMonopolyTakePhaseRewardCsReq = 7009;
	CmdMonopolyCellUpdateNotify = 7027;
	CmdMonopolyGameBingoFlipCardCsReq = 7017;
	CmdMonopolyGuessBuyInformationScRsp = 7079;
	CmdMonopolyRollRandomCsReq = 7096;
	CmdMonopolyLikeCsReq = 7045;
	CmdMonopolyMoveCsReq = 7074;
	CmdMonopolyGameSettleScNotify = 7076;
	CmdMonopolyRollDiceScRsp = 7052;
	CmdMonopolyAcceptQuizScRsp = 7065;
	CmdMonopolyGuessDrawScNotify = 7081;
	CmdMonopolyLikeScRsp = 7064;
	CmdMonopolyTakeRaffleTicketRewardCsReq = 7049;
	CmdMonopolyScrachRaffleTicketScRsp = 7091;
	CmdMonopolyTakeRaffleTicketRewardScRsp = 7070;
	CmdMonopolyReRollRandomCsReq = 7075;
	CmdMonopolyClickMbtiReportScRsp = 7062;
	CmdMonopolyClickCellCsReq = 7086;
	CmdMonopolyGameBingoFlipCardScRsp = 7013;
	CmdMonopolyCheatDiceScRsp = 7048;
	CmdMonopolyLikeScNotify = 7072;
	CmdGetMonopolyFriendRankingListCsReq = 7092;
	CmdMonopolyEventSelectFriendScRsp = 7061;
	CmdMonopolyGetRegionProgressScRsp = 7023;
	CmdMonopolyGameGachaScRsp = 7073;
	CmdGetMonopolyDailyReportScRsp = 7087;
	CmdMonopolyGetRafflePoolInfoCsReq = 7069;
	CmdMonopolyGetRaffleTicketScRsp = 7047;
	CmdMonopolySelectOptionScRsp = 7034;
	CmdGetMonopolyMbtiReportRewardScRsp = 7080;
	CmdMonopolyRollRandomScRsp = 7005;
	CmdMonopolyGuessBuyInformationCsReq = 7011;
	CmdMonopolySocialEventEffectScNotify = 7030;
	CmdMonopolyClickCellScRsp = 7066;
	CmdMonopolyGameCreateScNotify = 7008;
	CmdGetMbtiReportScRsp = 7003;
	CmdMonopolyGameRaiseRatioScRsp = 7010;
}

enum NEIKGNKFGGI {
	MONOPOLY_SOCIAL_EVENT_STATUS_NONE = 0;
	MONOPOLY_SOCIAL_EVENT_STATUS_WAITING_SELECT_FRIEND = 1;
}

enum DAPBKIAMOAE {
	MONOPOLY_CELL_STATE_IDLE = 0;
	MONOPOLY_CELL_STATE_BARRIER = 1;
	MONOPOLY_CELL_STATE_GROUND = 2;
	MONOPOLY_CELL_STATE_FINISH = 3;
}

enum LMEHACAJFAC {
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_NONE = 0;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_EFFECT = 1;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_BONUS = 2;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_TAX = 3;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_ASSET_UPGRADE = 4;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_GAME_SETTLE = 5;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_BUY_GOODS = 6;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_CLICK = 7;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_SOCIAL_EVENT = 8;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_LIKE = 9;
	MONOPOLY_ACTION_RESULT_SOURCE_TYPE_QUIZ_GAME_SETTLE = 10;
}

// HKMBBHOHNDN (7036)
message GetMonopolyInfoCsReq {
}

message NOADPKLEJGA {
	bool ihbbdakogjd = 12;
	uint32 jnklgaplbcg = 9;
	uint32 item_value = 7;
	uint32 lanbekhaggb = 2;
	uint32 fgaaoaeledg = 1;
	bool mgkkfinfhgj = 14;
}

message MELIJBJPKMF {
	repeated uint32 gdjbmilobaa = 4;
	NEIKGNKFGGI dbfgedlifdn = 7;
}

message LCEFHIPLMKB {
	uint32 progress = 12;
	uint32 hibcnbpkfln = 2;
}

message BLOEOEDIKAD {
	uint64 nhonhiimpcg = 8;
	bool is_taken_reward = 12;
	bool bkfoglfcdhe = 4;
}

message NACIBCFJGKF {
	repeated LCEFHIPLMKB idahgfaiide = 14;
	repeated BLOEOEDIKAD pghnjepdmpc = 12;
	uint64 gefjfhdkknn = 8;
	uint32 mheghlglfcn = 7;
	uint64 akkodgemoah = 10;
	repeated LCEFHIPLMKB kgccokajoah = 5;
	string lggfjddaaeb = 1961;
	bool eemkjpbedbc = 6;
	uint32 faclnpllhlg = 13;
	repeated LCEFHIPLMKB ldnncklpdoi = 3;
	string fhmdalhdfaf = 769;
	uint32 gngafhellpb = 1;
	uint32 nlepajbhogl = 9;
	repeated LCEFHIPLMKB mbpfjacgbag = 4;
	uint32 oienllihdab = 2;
	uint64 ajnnaalmifl = 15;
	string ojkddpbkeen = 1582;
	uint32 fcejjhlcoim = 11;
}

message AFBGDOPLIPP {
	repeated NACIBCFJGKF abcjiognklj = 1;
}

// MOGBLAENPBG (7095)
message GetMonopolyInfoScRsp {
	MELIJBJPKMF lcdeklobidi = 2;
	GFJKKCMFEIL kifphhdkefp = 6;
	AFBGDOPLIPP okpdpgbcfdb = 9;
	BJBMLPGMACP stt = 4;
	DHIDLPCFJMA bjpllekemmb = 7;
	EAJGCPIHOBJ ijdofkaecgb = 3;
	JBNLEOPNIBH babpbdkofph = 12;
	FJAJGJHIBFI rogue_buff_info = 5;
	POILLAAGJAN ahjelpmedlk = 13;
	repeated uint32 abbfdnooifk = 11;
	OFILBNBPLGE fpgmdipjkdj = 10;
	uint32 retcode = 14;
	NOADPKLEJGA ppnhhkfdefk = 15;
}

message EAJGCPIHOBJ {
	repeated uint32 bhinblmcgme = 15;
}

// GAELBIHPPGA (7015)
message MonopolyConditionUpdateScNotify {
	EAJGCPIHOBJ ijdofkaecgb = 11;
}

message BJBMLPGMACP {
	repeated uint32 icbmhiaiemf = 5;
	repeated uint32 gjdknlalpjg = 15;
}

// AIFABIEIDKP (7032)
message MonopolySttUpdateScNotify {
	BJBMLPGMACP stt = 11;
}

message FOKNLLKICEO {
	uint32 cell_id = 11;
	DAPBKIAMOAE ipnhbcmgcke = 4;
	bool gkdmkonffng = 8;
	uint32 map_id = 5;
}

message OFILBNBPLGE {
	uint32 eipcehhpmfk = 14;
	repeated FOKNLLKICEO inpeoidjgil = 1;
	uint32 bhmijggpfnm = 6;
	FOKNLLKICEO lpfpagojilh = 11;
	repeated FOKNLLKICEO kkmbddibiip = 5;
}

// LFNFJHECMMH (7001)
message MonopolyEventLoadUpdateScNotify {
	repeated FOKNLLKICEO kkmbddibiip = 3;
	repeated FOKNLLKICEO inpeoidjgil = 1;
}

message MNMKMPMMOGN {
	uint32 event_id = 6;
}

message HCAFGMCIGIH {
	uint32 event_id = 5;
}

message MAGHEDPCPOA {
	uint32 cjbdahmahkn = 13;
	uint32 pgkfdnodhem = 11;
	repeated uint32 jipdifkknjh = 1;
	uint32 event_id = 6;
}

message DJMOGJKNMPK {
	uint32 pgkfdnodhem = 3;
	uint32 lhndhmnpclj = 4;
	uint32 niipfbkabip = 8;
	repeated uint32 jipdifkknjh = 5;
	uint32 event_id = 11;
}

message CKMHLMLLEHD {
	repeated OHJAIJKAADK lmielhpbbec = 7;
	uint32 cakaemfckfl = 8;
}

message NNGOCPDILNC {
	uint32 ejledajjddh = 13;
}

message GLGFGCLNIIL {
	uint32 shop_id = 8;
}

message DDKJLLPJNOB {
	uint32 bhfpddkkpel = 12;
}

message MEMIECBAAJA {
	uint32 ejdepkeaoli = 7;
	uint32 abdgfjelhhk = 15;
}

message OHJAIJKAADK {
	oneof NPLDLOGOGOI {
		MNMKMPMMOGN amgppoofhll = 6;
		HCAFGMCIGIH nhelbahfoih = 12;
		MAGHEDPCPOA fihpgeehmmb = 3;
		NNGOCPDILNC lojccieifpc = 2;
		GLGFGCLNIIL jlcfpkehljd = 13;
		DDKJLLPJNOB dcfncdeieom = 10;
		MEMIECBAAJA geeeemenlpm = 1;
		DJMOGJKNMPK flopgkpheop = 15;
		CKMHLMLLEHD hkofflpclog = 7;
	}
	uint32 ONKCHDEMOCF = 4;
}

message JBNLEOPNIBH {
	OHJAIJKAADK khdjjnljnmo = 9;
}

// PFAKDICOEKJ (7088)
message MonopolyContentUpdateScNotify {
	OHJAIJKAADK khdjjnljnmo = 4;
}

// BBEKCOBDPEA (7027)
message MonopolyCellUpdateNotify {
	FOKNLLKICEO lpfpagojilh = 6;
}

// IHKJAEEOMKF (7028)
message MonopolyRollDiceCsReq {
}

// OFEEBFOKCPE (7052)
message MonopolyRollDiceScRsp {
	uint32 retcode = 10;
	uint32 khghcpbdlhe = 7;
}

// MKGEPPOJDKA (7050)
message MonopolyCheatDiceCsReq {
	uint32 hdpdpaafgin = 13;
}

// NBCHFMDJJFG (7048)
message MonopolyCheatDiceScRsp {
	uint32 retcode = 2;
	uint32 hdpdpaafgin = 13;
}

// KPOFPJKKBFI (7074)
message MonopolyMoveCsReq {
	uint32 fklbhncojim = 4;
	uint32 gfmlhcbjpcb = 6;
}

// ICHAEPMJMIC (7024)
message MonopolyMoveScRsp {
	repeated FOKNLLKICEO cpaaocikdoc = 15;
	uint32 retcode = 1;
	OFILBNBPLGE fpgmdipjkdj = 12;
}

// IKNKFLNKHFH (7093)
message MonopolySelectOptionCsReq {
	uint32 cjbdahmahkn = 7;
	uint32 event_id = 11;
}

message PBOIJFBEFFB {
	uint32 cjbdahmahkn = 4;
	uint32 odmkkpbmmci = 5;
	uint32 event_id = 8;
}

// HPOMCFEBLKO (7034)
message MonopolySelectOptionScRsp {
	uint32 retcode = 11;
	repeated PBOIJFBEFFB jeimcaicclf = 8;
	OHJAIJKAADK babpbdkofph = 6;
	uint32 cjbdahmahkn = 5;
	uint32 event_id = 12;
}

// EPHGBBCLLKM (7096)
message MonopolyRollRandomCsReq {
	uint32 event_id = 14;
}

// DIOHEBHAPNM (7005)
message MonopolyRollRandomScRsp {
	uint32 retcode = 9;
	OHJAIJKAADK babpbdkofph = 10;
	uint32 event_id = 5;
}

// NJANFNIPLED (7075)
message MonopolyReRollRandomCsReq {
	uint32 event_id = 14;
}

// BGPGPFCLIAH (7019)
message MonopolyReRollRandomScRsp {
	uint32 event_id = 8;
	uint32 retcode = 3;
	OHJAIJKAADK babpbdkofph = 12;
}

// BIKAINHOIEO (7026)
message MonopolyConfirmRandomCsReq {
	uint32 event_id = 7;
}

// ENKCOBJMNMN (7007)
message MonopolyConfirmRandomScRsp {
	uint32 event_id = 7;
	uint32 retcode = 11;
	OHJAIJKAADK babpbdkofph = 6;
}

// IHKPOJHPACI (7053)
message MonopolyBuyGoodsCsReq {
	uint32 shop_id = 7;
	uint32 goods_id = 6;
}

// PKOAPAHFPJE (7090)
message MonopolyBuyGoodsScRsp {
	uint32 retcode = 15;
	uint32 shop_id = 9;
	uint32 goods_id = 14;
}

// OOKAJJECHBA (7059)
message MonopolyUpgradeAssetCsReq {
	uint32 ejledajjddh = 2;
}

// IJPNDPCINIA (7012)
message MonopolyUpgradeAssetScRsp {
	uint32 retcode = 4;
	uint32 ejledajjddh = 5;
}

// LAGDPMFMLNA (7078)
message MonopolyGiveUpCurContentCsReq {
	uint32 content_id = 1;
}

// INBOAPKHCEL (7029)
message MonopolyGiveUpCurContentScRsp {
	uint32 retcode = 3;
	uint32 content_id = 2;
}

message MonopolyActionResult {
	uint32 TriggerCellId = 1;
	uint32 ClickMapId = 8;
	uint32 EffectType = 14;
	BEAEPAPGHLP Detail = 3;
	LMEHACAJFAC SourceType = 6;
	uint32 ClickCellId = 12;
	uint32 TriggerMapId = 15;
}

// MPJCPDKGFKB (7084)
message MonopolyActionResultScNotify {
	repeated MonopolyActionResult hhopoadnecf = 4;
}

message FAMDDGEBEIB {
	uint32 npgnekmcnmn = 11;
	bool ojmpbbggefj = 15;
}

message BEAEPAPGHLP {
	oneof FOCPNBIENCN {
		DMOBDOOFMBI hadigpfdfdd = 8;
		DMOBDOOFMBI nhoobfllamn = 14;
		GEANJPFCADJ aineelnllae = 1;
		GEANJPFCADJ coiojgmchin = 6;
		HHLDOHHKIHE get_buff_list = 10;
		HHLDOHHKIHE jgedahnkogm = 13;
		BCJGDLJBGFB lnjbkcpamin = 3;
		BCJGDLJBGFB eiggabeeajn = 12;
		FAMDDGEBEIB mpdjcaplclg = 5;
		EPDNAGOCBJN chhfiefiole = 9;
		HHLDOHHKIHE nkihgllanob = 15;
		BCJGDLJBGFB dmdilnmgjmg = 11;
		NGDHPCDEHOM epcochjagfj = 4;
	}
}

message NGDHPCDEHOM {
	uint32 pekbgadgilg = 2;
}

message DMOBDOOFMBI {
	uint32 jcecgjoapmm = 10;
	uint32 kikmlgbccae = 2;
	uint32 item_id = 15;
}

message BCJGDLJBGFB {
	uint32 kbjgpelddfc = 10;
	uint32 ecgbdlbepnn = 14;
}

message EPDNAGOCBJN {
	uint32 hfjikejhlmm = 10;
	uint32 ngekjoikjef = 9;
	uint32 fighdaflmfe = 1;
	uint32 pagikofammm = 11;
}

message GJDDKMBHECO {
	oneof GCLMJJCMDNF {
		PCNPNIAJHEJ ndagifbopcp = 11;
		KPEMDIANBGO bghalkpkcoa = 1;
		LCIGGKJMKJL mgeneagklol = 8;
	}
	uint32 config_id = 2;
	uint32 JCFMBCNIHLK = 3;
	uint32 MOCLGIGGHNE = 10;
}

message DHIDLPCFJMA {
	repeated GJDDKMBHECO behmknddfeo = 7;
	GJDDKMBHECO aibnkgjdbif = 12;
	FAMDDGEBEIB eojgidpkmjm = 13;
}

// KJLPNCIDFID (7076)
message MonopolyGameSettleScNotify {
	ItemList meeafmcnjie = 9;
	ItemList item_list = 13;
	GJDDKMBHECO dcfncdeieom = 1;
}

// PILGNJBLDDB (7008)
message MonopolyGameCreateScNotify {
	GJDDKMBHECO dcfncdeieom = 8;
	FAMDDGEBEIB eojgidpkmjm = 6;
}

// EBJKOHGBAKG (7058)
message MonopolyGameRaiseRatioCsReq {
	uint32 jcfmbcnihlk = 5;
}

// MonopolyGameRaiseRatioScRsp (7010)
message MonopolyGameRaiseRatioScRsp {
	uint32 Ratio = 10;
	uint32 retcode = 4;
}

// HKMKBOAKOHO (7046)
message DailyFirstEnterMonopolyActivityCsReq {
}

// FILHMMPAECP (7025)
message DailyFirstEnterMonopolyActivityScRsp {
	GFJKKCMFEIL kifphhdkefp = 8;
	bool oegkmpeelhg = 10;
	uint32 retcode = 7;
	int64 clgngejeppf = 1;
	uint32 dcclbmapdbc = 13;
}

// FEDPAJGKLNG (7063)
message MonopolyGetDailyInitItemCsReq {
	bool cbcdplgpeak = 11;
}

// EAFPJJINGGK (7089)
message MonopolyGetDailyInitItemScRsp {
	uint32 ncoikodkhch = 15;
	uint32 retcode = 2;
	uint32 jjjmlidbein = 9;
	int64 clgngejeppf = 12;
	uint32 clmjnnfpaoa = 13;
	uint32 hmheangodhn = 6;
	uint32 hplljdaadoi = 4;
}

message PCNPNIAJHEJ {
	repeated uint32 mgolhknamii = 12;
	repeated uint32 cdlhlcninep = 14;
	bool nibcgclhilg = 5;
	repeated uint32 ndckmnplaja = 1;
	uint32 inkpcfpllnl = 13;
}

// FDHPMNIODLM (7017)
message MonopolyGameBingoFlipCardCsReq {
	uint32 khmokmcehbb = 5;
}

// LOKBMHBLEAI (7013)
message MonopolyGameBingoFlipCardScRsp {
	repeated uint32 ndckmnplaja = 15;
	uint32 retcode = 5;
	uint32 aaijabgnada = 12;
	bool nibcgclhilg = 6;
}

// ILEABJDOGFB (7035)
message MonopolyGameGachaCsReq {
}

// MonopolyGameGachaScRsp (7073)
message MonopolyGameGachaScRsp {
	uint32 retcode = 8;
	repeated uint32 ResultList = 2;
}

message ICNEDOCPBPP {
	uint32 lojnefogefn = 6;
	uint32 dlgojbmdjie = 4;
}

message KPEMDIANBGO {
	uint32 ekdpoigoncd = 2;
	repeated uint32 bjbfoakiggh = 7;
	uint32 pabihfgnpkg = 4;
	uint32 haodfemapml = 9;
	repeated ICNEDOCPBPP ikhobnldecj = 6;
	uint32 dolnfgmpogc = 10;
}

// CNOFGGKFLOK (7021)
message MonopolyAcceptQuizCsReq {
	repeated ICNEDOCPBPP ikhobnldecj = 10;
}

// BAHIKNJNHOH (7065)
message MonopolyAcceptQuizScRsp {
	uint32 retcode = 13;
	KPEMDIANBGO bghalkpkcoa = 12;
}

message MMNDNHFEFCB {
	uint32 pabihfgnpkg = 11;
	uint32 hakcedfccha = 7;
	uint32 dfehdbhllko = 12;
}

// IAKOAIIHANO (7039)
message MonopolyQuizDurationChangeScNotify {
	repeated MMNDNHFEFCB npfkmgonkfk = 2;
}

message LCIGGKJMKJL {
	bool ajheplfnonc = 2;
	uint32 cilhldkohhp = 11;
	uint32 omoodmnoloc = 3;
}

// LICFHPELKHD (7018)
message MonopolyGuessChooseCsReq {
	uint32 omoodmnoloc = 12;
}

// LEDPCCCLODN (7037)
message MonopolyGuessChooseScRsp {
	uint32 omoodmnoloc = 15;
	uint32 retcode = 1;
}

message NGHOHLDBCHP {
	uint32 ibkhmiclebj = 5;
	uint32 cilhldkohhp = 9;
	ItemList item_list = 8;
}

// KLNOCFKNAPA (7081)
message MonopolyGuessDrawScNotify {
	repeated NGHOHLDBCHP holkokaabnl = 10;
}

// EPGIJKGPHNG (7011)
message MonopolyGuessBuyInformationCsReq {
}

// MODDJBDFOOB (7079)
message MonopolyGuessBuyInformationScRsp {
	uint32 retcode = 12;
}

message GEANJPFCADJ {
	uint32 ejledajjddh = 10;
	uint32 level = 2;
	uint32 mijgknpmidl = 12;
}

message POILLAAGJAN {
	repeated GEANJPFCADJ jnlnbfgfjii = 5;
}

message GFJKKCMFEIL {
	uint32 fkdokckijah = 2;
	bool pnpnllccdkh = 7;
	uint32 kdacfdjgfcm = 9;
	uint32 hfgplbjfbpk = 11;
	uint32 lbgcgfakego = 3;
	uint32 gaahdpkdgii = 8;
	uint32 jncefjmgkgc = 14;
	uint32 aajppiegehg = 15;
	uint32 bfdoldacbol = 10;
}

// HMFAPCHOMHC (7094)
message MonopolyDailySettleScNotify {
	GFJKKCMFEIL kifphhdkefp = 5;
	uint32 dcclbmapdbc = 9;
}

message HHLDOHHKIHE {
	uint32 onkchdemocf = 12;
	uint32 dehahojljik = 14;
	uint32 buff_id = 4;
}

message FJAJGJHIBFI {
	repeated HHLDOHHKIHE buff_list = 5;
}

message CKBCAHOBKBH {
	uint32 kdacfdjgfcm = 14;
	uint32 bamfgmlflhe = 7;
	uint32 bfdoldacbol = 13;
	uint32 kmlejajfkba = 6;
	uint32 uid = 2;
}

// IJIOEPHCLMG (7092)
message GetMonopolyFriendRankingListCsReq {
}

// GDBCJPHMFPH (7060)
message GetMonopolyFriendRankingListScRsp {
	CKBCAHOBKBH opolopohlok = 3;
	uint32 retcode = 13;
	repeated CKBCAHOBKBH kkaplkkjece = 1;
}

// BMEMJHECPBC (7045)
message MonopolyLikeCsReq {
	uint32 hjaohlgpocp = 4;
}

// IEBLENKANOK (7064)
message MonopolyLikeScRsp {
	ItemList reward_list = 7;
	uint32 retcode = 13;
	uint32 hjaohlgpocp = 14;
}

// HABENCNJFDP (7072)
message MonopolyLikeScNotify {
	repeated uint32 gdjbmilobaa = 3;
	uint32 bamfgmlflhe = 8;
}

// GPLEHKGGBBF (7099)
message GetMbtiReportCsReq {
}

message DPLPMBFKIAL {
	uint32 cnt = 4;
	uint32 gofokfinddn = 6;
}

// DNMKLJPHHBG (7003)
message GetMbtiReportScRsp {
	repeated PBOIJFBEFFB jeimcaicclf = 4;
	bool palkhghnfbm = 7;
	repeated DPLPMBFKIAL lmkdkjecngg = 6;
	uint32 progress = 5;
	uint32 retcode = 2;
	int32 kgighdjlhdh = 15;
	bool is_taken_reward = 13;
	int32 gchiehlpnhc = 12;
}

// IJKIGHKCJCL (7040)
message MonopolyEventSelectFriendCsReq {
	uint32 bdndenhpded = 8;
	bool jiegfhbbkif = 5;
}

// LCAKECGNKIO (7061)
message MonopolyEventSelectFriendScRsp {
	uint32 abdgfjelhhk = 15;
	uint32 retcode = 14;
	uint32 ejdepkeaoli = 10;
	FOKNLLKICEO lpfpagojilh = 3;
}

message SocialEventServerCache {
	uint32 AddCoin = 11;
	uint32 Id = 13;
	uint32 SrcUid = 15;
	uint32 SubCoin = 7;
}

// AGEIJEAIANN (7030)
message MonopolySocialEventEffectScNotify {
	repeated SocialEventServerCache dbdehmpagbh = 5;
}

// CEICHOJPHAH (7033)
message GetSocialEventServerCacheCsReq {
}

// PGPJILAALNH (7097)
message GetSocialEventServerCacheScRsp {
	repeated SocialEventServerCache dbdehmpagbh = 4;
	uint32 retcode = 5;
}

// LEIPBMNKNJJ (7083)
message DeleteSocialEventServerCacheCsReq {
	repeated uint32 cifanhocaok = 4;
}

// JGPNKKGCLIH (7068)
message DeleteSocialEventServerCacheScRsp {
	repeated uint32 eopdoeglcii = 11;
	uint32 retcode = 1;
}

// GDGDNGNFKNN (7016)
message MonopolyGetRaffleTicketCsReq {
	uint32 fcejjhlcoim = 6;
}

// HJBLBMHBHBK (7047)
message MonopolyGetRaffleTicketScRsp {
	repeated BLOEOEDIKAD ghiccfchedf = 12;
	uint32 retcode = 11;
	uint32 fcejjhlcoim = 1;
}

// LJHIPEMCNNP (7049)
message MonopolyTakeRaffleTicketRewardCsReq {
	uint32 fcejjhlcoim = 8;
	uint64 oiplnennmmo = 1;
}

// CEIFIBCHJKN (7070)
message MonopolyTakeRaffleTicketRewardScRsp {
	uint32 retcode = 3;
	uint32 fcejjhlcoim = 9;
	uint32 oiplnennmmo = 11;
	ItemList reward_list = 10;
}

// EPGJGMNPBBD (7098)
message MonopolyScrachRaffleTicketCsReq {
	uint32 fcejjhlcoim = 15;
	uint64 oiplnennmmo = 1;
}

// EHOAHJMKKIC (7091)
message MonopolyScrachRaffleTicketScRsp {
	uint64 oiplnennmmo = 2;
	uint32 retcode = 12;
	uint32 fcejjhlcoim = 7;
}

// PJCDDNKMPMG (7044)
message MonopolyGetRegionProgressCsReq {
}

// KLEPCFDGMEJ (7023)
message MonopolyGetRegionProgressScRsp {
	uint32 kmlejajfkba = 13;
	uint32 dhkgjogokdh = 9;
	uint32 retcode = 15;
}

// BNFHAPJJEKH (7069)
message MonopolyGetRafflePoolInfoCsReq {
}

// MDDPKOHLJHC (7056)
message MonopolyGetRafflePoolInfoScRsp {
	AFBGDOPLIPP okpdpgbcfdb = 15;
	uint32 retcode = 2;
}

// CFNIFEEHLBB (7009)
message MonopolyTakePhaseRewardCsReq {
	repeated uint32 dbdhbcokfmk = 12;
}

// GPDPLHJDFNG (7020)
message MonopolyTakePhaseRewardScRsp {
	uint32 retcode = 11;
	repeated uint32 dbdhbcokfmk = 2;
	ItemList reward_list = 3;
}

// PLBEAHABGLO (7082)
message GetMonopolyMbtiReportRewardCsReq {
}

// DDMBCPALLFF (7080)
message GetMonopolyMbtiReportRewardScRsp {
	uint32 retcode = 4;
	ItemList reward_list = 8;
}

// OGHNGEBGLFK (7038)
message GetMonopolyDailyReportCsReq {
}

// GFHLODDBMFB (7087)
message GetMonopolyDailyReportScRsp {
	GFJKKCMFEIL kifphhdkefp = 7;
	uint32 retcode = 9;
}

// ENFCCLBODDC (7086)
message MonopolyClickCellCsReq {
	uint32 cell_id = 13;
	uint32 map_id = 10;
}

// BDEAELDIDCB (7066)
message MonopolyClickCellScRsp {
	uint32 map_id = 14;
	uint32 retcode = 12;
	uint32 cell_id = 11;
}

// PKNCBEAOPEM (7085)
message MonopolyClickMbtiReportCsReq {
}

// OGJGNGOJJGJ (7062)
message MonopolyClickMbtiReportScRsp {
	uint32 retcode = 1;
}

// MNIPCAPEIKH
enum CmdMultiplayerType {
	CmdMultiplayerTypeNone = 0;
	CmdMultiplayerMatch3FinishScNotify = 1024;
	CmdMultiplayerFightGameStateCsReq = 1036;
	CmdMultiplayerFightGameStateScRsp = 1095;
	CmdMultiplayerGetFightGateCsReq = 1084;
	CmdMultiplayerFightGameStartScNotify = 1052;
	CmdMultiplayerFightGameFinishScNotify = 1074;
	CmdMultiplayerGetFightGateScRsp = 1027;
	CmdMultiplayerFightGiveUpCsReq = 1067;
	CmdMultiplayerFightGiveUpScRsp = 1028;
}

// KIOHILONNPH (1036)
message MultiplayerFightGameStateCsReq {
}

// OFDEEMDILHA (1095)
message MultiplayerFightGameStateScRsp {
	repeated GDOHNMGABGE lhifalkbalm = 13;
	GCIBOEOBJJH kcpfmjcknln = 2;
	uint32 retcode = 3;
}

// MIJHNAHHILP (1084)
message MultiplayerGetFightGateCsReq {
	uint32 bjinfjnfonl = 4;
}

// DCDIIMJCLMN (1027)
message MultiplayerGetFightGateScRsp {
	uint32 retcode = 2;
	uint32 epjkijllckm = 15;
	string dmodigdlecd = 7;
	uint64 fdboeognpfb = 11;
	string lnfophgbmgb = 1;
}

// ABLHPHEJMOC (1067)
message MultiplayerFightGiveUpCsReq {
	uint64 fdboeognpfb = 1;
}

// AADPAJABHOJ (1028)
message MultiplayerFightGiveUpScRsp {
	uint32 retcode = 15;
}

// LCJNJLBNNKH (1052)
message MultiplayerFightGameStartScNotify {
	GCIBOEOBJJH kcpfmjcknln = 7;
	repeated GDOHNMGABGE lhifalkbalm = 12;
}

// MMOAODBOIIM (1074)
message MultiplayerFightGameFinishScNotify {
	GCIBOEOBJJH kcpfmjcknln = 3;
}

// NJMDBPLBJFB (1024)
message MultiplayerMatch3FinishScNotify {
	uint32 mgkmbmkkkkc = 4;
	Match3FinishReason reason = 11;
	uint32 ifoidmjnhig = 7;
	COKMEFOLDDH bnpfgbeclde = 13;
}

// BOOANOKFGBA
enum CmdMultipleDropType {
	CmdMultipleDropTypeNone = 0;
	CmdGetMultipleDropInfoCsReq = 4636;
	CmdGetPlayerReturnMultiDropInfoScRsp = 4667;
	CmdMultipleDropInfoNotify = 4628;
	CmdGetPlayerReturnMultiDropInfoCsReq = 4627;
	CmdMultipleDropInfoScNotify = 4684;
	CmdGetMultipleDropInfoScRsp = 4695;
}

// IAAGFENCICC (4636)
message GetMultipleDropInfoCsReq {
}

message GHDMAABBCDO {
	uint32 aghbpemfhjh = 14;
	uint32 id = 6;
}

// JDCEOLPLPLM (4695)
message GetMultipleDropInfoScRsp {
	uint32 retcode = 5;
	repeated ALAICPOOMMG ciiddgpgppi = 14;
	repeated GHDMAABBCDO dkhmaloophb = 8;
}

// ILBOKKKMOGO (4684)
message MultipleDropInfoScNotify {
	repeated GHDMAABBCDO dkhmaloophb = 13;
}

// CAJGKMDIFBE (4627)
message GetPlayerReturnMultiDropInfoCsReq {
}

message CBIOEOKEEFL {
	uint32 cdkafbfknoj = 9;
	uint32 lnfdinhibgk = 5;
	uint32 panel_id = 8;
	uint32 ddgpcppgmef = 10;
}

message ALAICPOOMMG {
	uint32 panel_id = 8;
	uint32 bijmeoodfgn = 2;
	uint32 kimhpmldmai = 5;
	uint32 jloijknceam = 15;
}

// KONEKKABCEG (4667)
message GetPlayerReturnMultiDropInfoScRsp {
	CBIOEOKEEFL bnadncahljp = 3;
	uint32 retcode = 15;
	repeated ALAICPOOMMG ciiddgpgppi = 7;
}

// JNKOBFFHMMA (4628)
message MultipleDropInfoNotify {
	repeated CBIOEOKEEFL aflgjhjloda = 13;
	repeated ALAICPOOMMG ciiddgpgppi = 14;
	repeated GHDMAABBCDO dkhmaloophb = 7;
}

// DKNNHKOJHKD
enum CmdMuseumType {
	CmdMuseumTypeNone = 0;
	CmdSetStuffToAreaCsReq = 4367;
	CmdRemoveStuffFromAreaCsReq = 4352;
	CmdFinishCurTurnCsReq = 4334;
	CmdBuyNpcStuffScRsp = 4327;
	CmdMuseumRandomEventQueryScRsp = 4353;
	CmdMuseumRandomEventSelectScRsp = 4359;
	CmdMuseumTakeCollectRewardScRsp = 4388;
	CmdMuseumTargetStartNotify = 4378;
	CmdGetMuseumInfoCsReq = 4336;
	CmdUpgradeAreaStatScRsp = 4305;
	CmdMuseumInfoChangedScNotify = 4375;
	CmdGetMuseumInfoScRsp = 4395;
	CmdRemoveStuffFromAreaScRsp = 4374;
	CmdMuseumFundsChangedScNotify = 4319;
	CmdUpgradeAreaCsReq = 4346;
	CmdMuseumDispatchFinishedScNotify = 4312;
	CmdGetStuffScNotify = 4324;
	CmdMuseumRandomEventStartScNotify = 4326;
	CmdMuseumRandomEventQueryCsReq = 4307;
	CmdGetExhibitScNotify = 4393;
	CmdFinishCurTurnScRsp = 4343;
	CmdMuseumRandomEventSelectCsReq = 4390;
	CmdBuyNpcStuffCsReq = 4384;
	CmdUpgradeAreaScRsp = 4325;
	CmdUpgradeAreaStatCsReq = 4396;
	CmdMuseumTargetMissionFinishNotify = 4329;
	CmdMuseumTargetRewardNotify = 4350;
	CmdMuseumTakeCollectRewardCsReq = 4348;
	CmdSetStuffToAreaScRsp = 4328;
}

enum EGJLNPAOFFN {
	MUSEUM_RANDOM_EVENT_STATE_NONE = 0;
	MUSEUM_RANDOM_EVENT_STATE_START = 1;
	MUSEUM_RANDOM_EVENT_STATE_PROCESSING = 2;
	MUSEUM_RANDOM_EVENT_STATE_FINISH = 3;
}

enum MEDPDEALGMJ {
	WORK_POS_NONE = 0;
	WORK_POS_1 = 1;
	WORK_POS_2 = 2;
	WORK_POS_3 = 3;
}

enum NOCJBEHEJBN {
	STAT_TYPE_NONE = 0;
	STAT_TYPE_ART = 1;
	STAT_TYPE_CULTURE = 2;
	STAT_TYPE_POPULAR = 3;
}

enum BMNAPJNPMBC {
	UNKNOW = 0;
	MISSION_REWARD = 1;
	EVENT_BUY_STUFF = 2;
	MARKET_BUY_STUFF = 3;
	QUEST_REWARD = 4;
	INITIAL = 5;
	PHASE_FINISH_REWARD = 6;
}

message MKNAGNGBFOI {
	MEDPDEALGMJ pos = 4;
	uint32 pomeofhemgh = 12;
}

message BJDAAPOAPAI {
	uint32 kjkpmffamfk = 11;
	uint32 level = 6;
	repeated MKNAGNGBFOI echidideccg = 13;
	uint32 cabgojfipjk = 7;
	uint32 lcafnngifnm = 1;
	uint32 aafmajbcpkb = 8;
}

message HJLGIDLKJNB {
	uint32 aennjbmdino = 3;
	bool is_finish = 9;
}

message IGPFNHKHMPK {
	uint32 bofklgcaknp = 11;
	uint32 dlhiimmfgkn = 2;
	uint32 ialfckmfdnf = 8;
	uint32 edbleiecolj = 9;
	repeated HJLGIDLKJNB eignnbnggeg = 5;
	uint32 akljpebkmoh = 13;
}

message JOOLADOGHGE {
	uint32 pomeofhemgh = 1;
	uint32 apbjmeocbfa = 11;
}

message IALALMGGDFO {
	uint32 iobcgembldo = 11;
	uint32 plonljihmbf = 1;
	uint32 fodaabppblb = 8;
	EGJLNPAOFFN state = 3;
	uint32 event_id = 2;
	uint32 ehdkddbikdk = 13;
	repeated uint32 ipjkaceapin = 15;
}

message NKMJCMMDHHJ {
	repeated uint32 jkacodgbgji = 8;
	repeated IALALMGGDFO jpgocegdlol = 11;
	uint32 ppgcbkbedng = 4;
}

// HPDJEKFBHMP (4336)
message GetMuseumInfoCsReq {
}

// EPPLAHFODIJ (4395)
message GetMuseumInfoScRsp {
	repeated uint32 fbchklngjfm = 4;
	repeated uint32 ehmiphnnfmk = 1;
	uint32 fnmjjmbpcjf = 11;
	uint32 fihpgeehmmb = 12;
	IGPFNHKHMPK dachmecjpei = 15;
	uint32 exp = 5;
	NKMJCMMDHHJ oapjalcoecf = 13;
	uint32 gcnmiifkhgi = 14;
	uint32 coin_cost = 7;
	uint32 mocheecbdij = 8;
	uint32 level = 3;
	repeated BJDAAPOAPAI hnhclcbjaim = 10;
	uint32 retcode = 6;
	repeated JOOLADOGHGE echidideccg = 2;
}

// FEKLMAMMOHB (4384)
message BuyNpcStuffCsReq {
	uint32 pomeofhemgh = 5;
}

// BPLJKJCEAHI (4327)
message BuyNpcStuffScRsp {
	uint32 retcode = 14;
	uint32 pomeofhemgh = 3;
}

// FINHNOBKOPP (4367)
message SetStuffToAreaCsReq {
	uint32 pomeofhemgh = 12;
	MEDPDEALGMJ pos = 8;
	uint32 apbjmeocbfa = 13;
}

// IKKDPHALHKF (4328)
message SetStuffToAreaScRsp {
	uint32 apbjmeocbfa = 8;
	uint32 pomeofhemgh = 7;
	MEDPDEALGMJ pos = 4;
	uint32 retcode = 11;
}

// EPGNPMDGFNI (4352)
message RemoveStuffFromAreaCsReq {
	uint32 pomeofhemgh = 6;
}

// HMBAJMJBABN (4374)
message RemoveStuffFromAreaScRsp {
	uint32 retcode = 14;
	uint32 pomeofhemgh = 13;
}

// JKPJGFLLEIB (4324)
message GetStuffScNotify {
	BMNAPJNPMBC bjmopkchelk = 10;
	uint32 pomeofhemgh = 14;
}

// GGILNFLPMEI (4393)
message GetExhibitScNotify {
	uint32 bfkiploenpo = 2;
}

// ALAGDMIHNPK (4334)
message FinishCurTurnCsReq {
	uint32 enhlfdgkfjh = 3;
}

// OJAEEDPCJFJ (4343)
message FinishCurTurnScRsp {
	uint32 retcode = 5;
	uint32 chgecnjaogg = 4;
}

// KCGLHILAEOJ (4346)
message UpgradeAreaCsReq {
	uint32 kjkpmffamfk = 9;
	uint32 level = 10;
}

// KFPBONBALDL (4325)
message UpgradeAreaScRsp {
	uint32 retcode = 4;
	uint32 level = 1;
	uint32 kjkpmffamfk = 15;
}

// NALJHILLEFB (4396)
message UpgradeAreaStatCsReq {
	uint32 kjkpmffamfk = 13;
	uint32 level = 9;
	NOCJBEHEJBN cffmojghjlm = 5;
}

// CKNFPMIEKGP (4305)
message UpgradeAreaStatScRsp {
	uint32 level = 9;
	uint32 kjkpmffamfk = 4;
	NOCJBEHEJBN cffmojghjlm = 12;
	uint32 retcode = 2;
}

// LBPKGPOJAPA (4375)
message MuseumInfoChangedScNotify {
	uint32 coin_cost = 4;
	repeated JOOLADOGHGE echidideccg = 15;
	uint32 fihpgeehmmb = 8;
	repeated uint32 ehmiphnnfmk = 2;
	uint32 fnmjjmbpcjf = 5;
	uint32 exp = 11;
	repeated BJDAAPOAPAI hnhclcbjaim = 3;
	uint32 mocheecbdij = 6;
	uint32 gcnmiifkhgi = 1;
	NKMJCMMDHHJ oapjalcoecf = 13;
	IGPFNHKHMPK dachmecjpei = 12;
	repeated uint32 fbchklngjfm = 10;
	uint32 level = 7;
}

// GECJBPBKFIL (4326)
message MuseumRandomEventStartScNotify {
	IALALMGGDFO lddcaaekfob = 3;
}

// ELCNOMHPAEL (4307)
message MuseumRandomEventQueryCsReq {
	int32 ihjjaiajenh = 10;
}

// LKMHGFFGMBJ (4353)
message MuseumRandomEventQueryScRsp {
	NKMJCMMDHHJ lddcaaekfob = 4;
	uint32 retcode = 1;
}

// AEEMGNPMJEL (4390)
message MuseumRandomEventSelectCsReq {
	uint32 fodaabppblb = 5;
	uint32 event_id = 12;
}

// JMFIEILAOPH (4359)
message MuseumRandomEventSelectScRsp {
	uint32 fodaabppblb = 15;
	uint32 event_id = 12;
	uint32 retcode = 3;
}

// LPPNOHBGCED (4319)
message MuseumFundsChangedScNotify {
	uint32 coin_cost = 3;
}

// LKKIHBBEDED (4312)
message MuseumDispatchFinishedScNotify {
	uint32 coin_cost = 12;
	uint32 obncpfmjphd = 9;
	uint32 pomeofhemgh = 10;
	uint32 ldkhjalcinj = 1;
}

// DJDBGAIFIDC (4378)
message MuseumTargetStartNotify {
	uint32 akljpebkmoh = 4;
}

// BHGCIDJAABI (4329)
message MuseumTargetMissionFinishNotify {
	repeated uint32 aennjbmdino = 13;
	uint32 akljpebkmoh = 8;
	bool lmlpekidbkb = 14;
}

// MNNJIDJCIMP (4350)
message MuseumTargetRewardNotify {
	uint32 item_count = 2;
	uint32 akljpebkmoh = 5;
	uint32 item_id = 12;
}

// NFCBNMIIENI (4348)
message MuseumTakeCollectRewardCsReq {
	uint32 item_id = 9;
}

// MINMEFEBBKL (4388)
message MuseumTakeCollectRewardScRsp {
	uint32 retcode = 1;
	ItemList reward = 4;
	uint32 item_id = 2;
}

// LOEHIBBBIPG
enum CmdMusicRhythmType {
	CmdMusicRhythmTypeNone = 0;
	CmdMusicRhythmStartLevelScRsp = 7593;
	CmdMusicRhythmFinishLevelCsReq = 7591;
	CmdMusicRhythmStartLevelCsReq = 7576;
	CmdMusicRhythmDataCsReq = 7573;
	CmdMusicRhythmFinishLevelScRsp = 7600;
	CmdMusicRhythmDataScRsp = 7585;
	CmdMusicRhythmUnlockSongNotify = 7597;
	CmdMusicRhythmSaveSongConfigDataCsReq = 7596;
	CmdMusicRhythmMaxDifficultyLevelsUnlockNotify = 7580;
	CmdMusicRhythmUnlockTrackScNotify = 7577;
	CmdMusicRhythmSaveSongConfigDataScRsp = 7592;
	CmdMusicRhythmUnlockSongSfxScNotify = 7599;
}

enum EHEAAOCPINF {
	STATUS_CLOSE = 0;
	STATUS_OPEN = 1;
}

message OPHMAKNNFII {
	bool jcmnddhikep = 6;
	uint32 nkhiafpmach = 9;
	uint32 level_id = 10;
}

message OLAHIJKAOFD {
	repeated uint32 hcpaphboaap = 13;
	repeated uint32 hiffklcdege = 10;
	uint32 lilkmfldcje = 1;
	uint32 mheppegbkfi = 12;
}

// PEAAAKAOFCE (7573)
message MusicRhythmDataCsReq {
	uint32 bjinfjnfonl = 9;
}

// BPJLBPJCLJB (7585)
message MusicRhythmDataScRsp {
	repeated uint32 hlplbkfapgc = 7;
	repeated uint32 nicllkokdbe = 5;
	uint32 cachlhchgbp = 11;
	repeated uint32 laeoakdacpk = 12;
	repeated OLAHIJKAOFD pcjbffadmfa = 3;
	uint32 ehgecpkbbai = 1;
	uint32 retcode = 14;
	repeated OPHMAKNNFII jafbhibgdoa = 10;
	bool onilpejbbek = 6;
}

// NIMAPHKNFNP (7576)
message MusicRhythmStartLevelCsReq {
	uint32 level_id = 6;
}

// CNELLLKIJIN (7593)
message MusicRhythmStartLevelScRsp {
	uint32 level_id = 9;
	uint32 retcode = 11;
	string kbeadblmilm = 15;
}

// NGHPGOEMODI (7591)
message MusicRhythmFinishLevelCsReq {
	uint32 gnciapdpobp = 6;
	uint32 score_id = 9;
	bool jcmnddhikep = 8;
}

// KHLEPGKIFJL (7600)
message MusicRhythmFinishLevelScRsp {
	uint32 retcode = 9;
	uint32 level_id = 8;
}

// ANHAJNNHBHK (7577)
message MusicRhythmUnlockTrackScNotify {
	repeated uint32 nfhjkdgdjic = 3;
}

// JMLGJDJFBPC (7596)
message MusicRhythmSaveSongConfigDataCsReq {
	OLAHIJKAOFD chigihimcph = 14;
}

// CODPGKEPIJD (7592)
message MusicRhythmSaveSongConfigDataScRsp {
	uint32 retcode = 11;
	uint32 cachlhchgbp = 1;
	uint32 nplkklbgjcd = 14;
}

// BDJDEEEMIBL (7597)
message MusicRhythmUnlockSongNotify {
	repeated uint32 ikopcepdalg = 1;
}

// ICLIEFAPIEM (7580)
message MusicRhythmMaxDifficultyLevelsUnlockNotify {
}

// EPKOEDMMAHA (7599)
message MusicRhythmUnlockSongSfxScNotify {
	repeated uint32 ikopcepdalg = 4;
}

// EHEGOBILIEP
enum CmdOfferingType {
	CmdOfferingTypeNone = 0;
	CmdSubmitOfferingItemScRsp = 6923;
	CmdTakeOfferingRewardScRsp = 6926;
	CmdTakeOfferingRewardCsReq = 6937;
	CmdGetOfferingInfoCsReq = 6940;
	CmdGetOfferingInfoScRsp = 6935;
	CmdSubmitOfferingItemCsReq = 6927;
	CmdOfferingInfoScNotify = 6925;
}

enum DPLCPCFAIMN {
	OFFERING_STATE_NONE = 0;
	OFFERING_STATE_LOCK = 1;
	OFFERING_STATE_OPEN = 2;
}

message GMFNBHECOGD {
	uint32 helpokapmhc = 10;
	repeated uint32 phofegmljde = 11;
	uint32 cdnkhdbnepb = 4;
	uint32 hngnmjjifjg = 1;
	uint32 opicfpghdfk = 7;
	DPLCPCFAIMN abkhlkemkid = 15;
}

// COCHIJBFJPB (6940)
message GetOfferingInfoCsReq {
	repeated uint32 okikoccclbg = 12;
}

// GKBJFBODOGM (6935)
message GetOfferingInfoScRsp {
	repeated GMFNBHECOGD nchmmbfmadk = 1;
	uint32 retcode = 5;
}

// LMLPCKGOKOG (6927)
message SubmitOfferingItemCsReq {
	uint32 interacted_prop_entity_id = 8;
	uint32 hngnmjjifjg = 2;
}

// GEKDMEIDENJ (6923)
message SubmitOfferingItemScRsp {
	uint32 retcode = 4;
	GMFNBHECOGD piogacbpihf = 5;
}

// JAIMDLEKNBC (6937)
message TakeOfferingRewardCsReq {
	repeated uint32 pfhlbogfblc = 7;
	uint32 hngnmjjifjg = 2;
	uint32 interacted_prop_entity_id = 11;
}

// FMKJOHLHHLA (6926)
message TakeOfferingRewardScRsp {
	ItemList reward = 10;
	GMFNBHECOGD piogacbpihf = 5;
	uint32 retcode = 12;
}

// BIPDKJMINHI (6925)
message OfferingInfoScNotify {
	GMFNBHECOGD piogacbpihf = 8;
}

// CFGDEHCCNGD
enum CmdPamMissionType {
	CmdPamMissionTypeNone = 0;
	CmdSyncAcceptedPamMissionNotify = 4084;
	CmdAcceptedPamMissionExpireCsReq = 4036;
	CmdAcceptedPamMissionExpireScRsp = 4095;
}

// OFGDIFFMAFE (4036)
message AcceptedPamMissionExpireCsReq {
	uint32 main_mission_id = 12;
}

// DOKCDGPELLI (4095)
message AcceptedPamMissionExpireScRsp {
	uint32 main_mission_id = 8;
	uint32 retcode = 11;
}

// BPMPBELFHGK (4084)
message SyncAcceptedPamMissionNotify {
	uint64 pkfmjnffjhl = 12;
	uint32 main_mission_id = 7;
}

// GHGBIADGJPC
enum CmdPamSkinType {
	CmdPamSkinTypeNone = 0;
	CmdGetPamSkinDataScRsp = 8135;
	CmdSelectPamSkinScRsp = 8123;
	CmdSelectPamSkinCsReq = 8127;
	CmdUnlockPamSkinScNotify = 8137;
	CmdGetPamSkinDataCsReq = 8140;
}

// AJGKFNJCKGD (8140)
message GetPamSkinDataCsReq {
}

// KAEFIOHINAN (8135)
message GetPamSkinDataScRsp {
	repeated uint32 unlock_skin_list = 10;
	uint32 cur_skin = 6;
	uint32 retcode = 8;
}

// OPJNEMBEBOD (8127)
message SelectPamSkinCsReq {
	uint32 pam_skin = 8;
}

// CGPDONHGPNC (8123)
message SelectPamSkinScRsp {
	uint32 cur_skin = 2;
	uint32 retcode = 3;
	uint32 set_skin = 5;
}

// HJFPKJEHHHL (8137)
message UnlockPamSkinScNotify {
	uint32 pam_skin = 9;
}

// FMAKEIGFLAK
enum CmdPetType {
	CmdPetTypeNone = 0;
	CmdSummonPetCsReq = 7616;
	CmdRecallPetScRsp = 7607;
	CmdGetPetDataCsReq = 7624;
	CmdCurPetChangedScNotify = 7606;
	CmdRecallPetCsReq = 7610;
	CmdSummonPetScRsp = 7603;
	CmdGetPetDataScRsp = 7623;
}

enum MHDABLGIHLK {
	PET_OPERATION_TYPE_NONE = 0;
	PET_OPERATION_TYPE_SUMMON = 1;
	PET_OPERATION_TYPE_RECALL = 2;
}

// MCNCLINPMLF (7624)
message GetPetDataCsReq {
}

// MFCFMLDPJMF (7623)
message GetPetDataScRsp {
	uint32 retcode = 15;
	uint32 cur_pet_id = 3;
	repeated uint32 pet_id_list = 1;
}

// EGNOLBOOGGI (7616)
message SummonPetCsReq {
	uint32 summoned_pet_id = 8;
}

// JGFHOHNIPFA (7603)
message SummonPetScRsp {
	uint32 new_pet_id = 15;
	uint32 cur_pet_id = 7;
	uint32 retcode = 3;
}

// FMEMANEKPJO (7610)
message RecallPetCsReq {
	uint32 summoned_pet_id = 1;
}

// IGKMGFGKAGL (7607)
message RecallPetScRsp {
	uint32 retcode = 7;
	uint32 new_pet_id = 5;
	uint32 cur_pet_id = 13;
}

// COLKHMLFJLF (7606)
message CurPetChangedScNotify {
	uint32 cur_pet_id = 14;
}

// PIOKOKKIGFL
enum CmdPhoneType {
	CmdPhoneTypeNone = 0;
	CmdSelectPhoneThemeScRsp = 5152;
	CmdUnlockPhoneThemeScNotify = 5174;
	CmdSelectPhoneThemeCsReq = 5128;
	CmdSelectChatBubbleScRsp = 5127;
	CmdUnlockChatBubbleScNotify = 5167;
	CmdGetPhoneDataCsReq = 5136;
	CmdSelectChatBubbleCsReq = 5184;
	CmdGetPhoneDataScRsp = 5195;
}

// JDPJHPEENEN (5136)
message GetPhoneDataCsReq {
}

// AAFHDHMIHBO (5195)
message GetPhoneDataScRsp {
	uint32 retcode = 12;
	repeated uint32 owned_phone_themes = 4;
	uint32 cur_phone_theme = 11;
	repeated uint32 owned_chat_bubbles = 5;
	uint32 cur_chat_bubble = 14;
}

// ADIACGAMFPE (5184)
message SelectChatBubbleCsReq {
	uint32 bubble_id = 8;
}

// GMEGECFDFCP (5127)
message SelectChatBubbleScRsp {
	uint32 cur_chat_bubble = 12;
	uint32 retcode = 7;
	uint32 bdfoopfkikd = 4;
}

// NJFDEHHPOKO (5167)
message UnlockChatBubbleScNotify {
	uint32 bubble_id = 2;
}

// LJJOCNGFBJF (5128)
message SelectPhoneThemeCsReq {
	uint32 theme_id = 1;
}

// PLMGBFCMBJD (5152)
message SelectPhoneThemeScRsp {
	uint32 ihamliiecmi = 10;
	uint32 retcode = 3;
	uint32 cur_phone_theme = 5;
}

// PFKHEKBMPMF (5174)
message UnlockPhoneThemeScNotify {
	uint32 theme_id = 14;
}

// FJKKIPFDIBB
enum CmdPlayerType {
	CmdPlayerTypeNone = 0;
	CmdPlayerLogoutCsReq = 84;
	CmdSetAvatarPathCsReq = 87;
	CmdGetBasicInfoScRsp = 100;
	CmdUpdatePsnSettingsInfoCsReq = 32;
	CmdSetMultipleAvatarPathsCsReq = 62;
	CmdSetLanguageScRsp = 88;
	CmdServerAnnounceNotify = 58;
	CmdPlayerGetTokenScRsp = 28;
	CmdSetMultipleAvatarPathsScRsp = 2;
	CmdReserveStaminaExchangeCsReq = 91;
	CmdGetVideoVersionKeyScRsp = 47;
	CmdMonthCardRewardNotify = 64;
	CmdPlayerHeartBeatScRsp = 3;
	CmdClientObjDownloadDataScNotify = 9;
	CmdGetSecretKeyInfoScRsp = 83;
	CmdExchangeStaminaScRsp = 96;
	CmdUpdatePlayerSettingCsReq = 69;
	CmdQueryProductInfoCsReq = 79;
	CmdAntiAddictScNotify = 26;
	CmdGmTalkScNotify = 74;
	CmdAceAntiCheaterScRsp = 45;
	CmdFeatureSwitchClosedScNotify = 61;
	CmdUpdatePlayerSettingScRsp = 56;
	CmdGetVideoVersionKeyCsReq = 16;
	CmdSetLanguageCsReq = 48;
	CmdGetLevelRewardTakenListScRsp = 59;
	CmdSetGenderScRsp = 8;
	CmdPlayerGetTokenCsReq = 67;
	CmdUnlockAvatarPathScRsp = 85;
	CmdGetSecretKeyInfoCsReq = 97;
	CmdSetNicknameCsReq = 7;
	CmdGetLevelRewardCsReq = 12;
	CmdUpdateFeatureSwitchScNotify = 55;
	CmdClientDownloadDataScNotify = 39;
	CmdGetMultiPathAvatarInfoCsReq = 66;
	CmdClientObjUploadScRsp = 1;
	CmdGetAuthkeyCsReq = 5;
	CmdExchangeStaminaCsReq = 25;
	CmdPlayerLoginCsReq = 36;
	CmdGetAuthkeyScRsp = 75;
	CmdClientObjUploadCsReq = 20;
	CmdGetGameStateServiceConfigCsReq = 6;
	CmdReserveStaminaExchangeScRsp = 44;
	CmdGmTalkCsReq = 93;
	CmdGetLevelRewardTakenListCsReq = 90;
	CmdRegionStopScNotify = 19;
	CmdSetPlayerInfoCsReq = 18;
	CmdRetcodeNotify = 72;
	CmdSetRedPointStatusScNotify = 49;
	CmdPlayerLogoutScRsp = 27;
	CmdSetNicknameScRsp = 53;
	CmdSetAvatarPathScRsp = 86;
	CmdSetPlayerInfoScRsp = 37;
	CmdPlayerLoginScRsp = 95;
	CmdGateServerScNotify = 40;
	CmdGetGameStateServiceConfigScRsp = 71;
	CmdAvatarPathChangedNotify = 89;
	CmdGetLevelRewardScRsp = 78;
	CmdAceAntiCheaterCsReq = 60;
	CmdQueryProductInfoScRsp = 81;
	CmdPlayerKickOutScNotify = 24;
	CmdSetGameplayBirthdayCsReq = 94;
	CmdUnlockAvatarPathCsReq = 15;
	CmdPlayerLoginFinishCsReq = 68;
	CmdGetBasicInfoCsReq = 22;
	CmdUpdatePsnSettingsInfoScRsp = 82;
	CmdGmTalkScRsp = 34;
	CmdPlayerHeartBeatCsReq = 99;
	CmdStaminaInfoScNotify = 23;
	CmdDailyRefreshNotify = 41;
	CmdPlayerLoginFinishScRsp = 57;
	CmdGetMultiPathAvatarInfoScRsp = 63;
	CmdSetGenderCsReq = 65;
	CmdSetGameplayBirthdayScRsp = 92;
}

enum CIEAIDLJMDJ {
	AUTHKEY_SIGN_TYPE_NONE = 0;
	AUTHKEY_SIGN_TYPE_DEFAULT = 1;
	AUTHKEY_SIGN_TYPE_RSA = 2;
}

// DBGKGGCEELN (36)
message PlayerLoginCsReq {
	string apejgcgcdnk = 1040;
	string client_version = 4;
	string gehpjdmaeeo = 3;
	string eaoiadcplni = 13;
	uint32 ejpgnpnmnme = 6;
	string keckllnpnmc = 450;
	string pggemchdkgm = 10;
	string rogue_get_info = 8;
	uint32 ghkpbpdfijh = 1261;
	string dmbaimcnhkk = 15;
	ExtraDeviceInfo hjbdiepmfcc = 1352;
	uint64 login_random = 5;
	string mjbmnloijan = 12;
	string pdciladmjij = 1933;
	string aeohjingifk = 867;
	string bokafhimcen = 1291;
	string aalpfdjnhme = 11;
	uint32 client_res_version = 9;
	string iacjlnhkfjl = 1;
	uint32 mplbcokaihj = 1090;
	PlatformType platform = 2;
	uint32 edibgljnojg = 1000;
	bool ncolnocggph = 170;
	string oohnmkaogcl = 1640;
	string signature = 14;
	LanguageType dgdpjgplkhm = 7;
	bool lnpeccbkbeb = 304;
}

// KICGDEGKJIN (95)
message PlayerLoginScRsp {
	uint64 server_timestamp_ms = 7;
	bool jddcochbnpg = 2;
	bool goepmaljcmi = 11;
	uint64 login_random = 1;
	uint32 stamina = 6;
	string lbfcfnidiae = 5;
	uint32 retcode = 13;
	string gepmpieohim = 14;
	PlayerBasicInfo basic_info = 10;
	int32 cur_timezone = 8;
}

// IJPAEDPKEMD (67)
message PlayerLogoutCsReq {
}

// OKBGMLBBIEE (67)
message PlayerGetTokenCsReq {
	uint32 fclcccnbdlb = 3;
	uint32 uid = 1;
	uint32 platform = 13;
	uint32 aodjndcpdid = 15;
	string account_uid_wrong = 2;
	uint32 ghkpbpdfijh = 9;
	string account_uid = 5;
	string token = 7;
}

// GNBHOKMKINC (28)
message PlayerGetTokenScRsp {
	uint64 secret_key_seed = 9;
	BlackInfo black_info = 1;
	uint32 uid = 15;
	string msg = 14;
	uint32 retcode = 11;
}

// BMKIJNIJMPE (74)
message GmTalkScNotify {
	string msg = 7;
}

// DMKLCGPGCHB (24)
message PlayerKickOutScNotify {
	enum KickType {
		KICK_SQUEEZED = 0;
		KICK_BLACK = 1;
		KICK_CHANGE_PWD = 2;
		KICK_LOGIN_WHITE_TIMEOUT = 3;
		KICK_ACE_ANTI_CHEATER = 4;
		KICK_BY_GM = 5;
	}
	KickType kick_type = 9;
	BlackInfo black_info = 2;
}

// AHELDCMEJPF (93)
message GmTalkCsReq {
	string msg = 5;
}

// MOIAJAKOHCF (34)
message GmTalkScRsp {
	string gmccipoejhd = 3;
	uint32 retcode = 5;
}

// CDBMFEFEOCB (22)
message GetBasicInfoCsReq {
}

message PlayerSettingInfo {
	bool ebephgldcnh = 14;
	bool kmcckimhbbj = 13;
	bool oigipmeoekb = 15;
	bool kofdeoaglgk = 4;
	bool kkhhcopengm = 5;
	bool khkaapacgjf = 6;
	bool efccddmnmlp = 1;
	bool kmacdmafffn = 8;
	bool meffkcapbfj = 10;
	bool denfljkhnfo = 12;
}

// GetBasicInfoScRsp (100)
message GetBasicInfoScRsp {
	uint32 WeekCocoonFinishedCount = 10;
	uint32 Gender = 14;
	int64 LastSetNicknameTime = 6;
	uint32 CurDay = 4;
	PlayerSettingInfo PlayerSettingInfo = 15;
	int64 NextRecoverTime = 3;
	bool IsGenderSet = 8;
	uint32 GameplayBirthday = 5;
	uint32 retcode = 2;
	uint32 ExchangeTimes = 1;
}

// FLNNHOCPLDK (25)
message ExchangeStaminaCsReq {
}

// ExchangeStaminaScRsp (96)
message ExchangeStaminaScRsp {
	uint32 StaminaAdd = 14;
	uint32 ExchangeTimes = 9;
	uint32 retcode = 1;
	int64 LastRecoverTime = 5;
	repeated ItemCost ItemCostList = 10;
}

// BGOKIBINNBK (5)
message GetAuthkeyCsReq {
	string imlhakodopd = 15;
	uint32 hdbkjpaiokk = 12;
	uint32 dlphkdbopej = 6;
}

// LGCOCFPOKIM (75)
message GetAuthkeyScRsp {
	string ddckifefchd = 1;
	uint32 dlphkdbopej = 4;
	string imlhakodopd = 2;
	uint32 hdbkjpaiokk = 8;
	uint32 retcode = 11;
}

// OHAKLIOHPIG (19)
message RegionStopScNotify {
	int64 edikgmjkmic = 4;
	int64 ggebffojfoi = 8;
}

// AntiAddictScNotify (26)
message AntiAddictScNotify {
	string Msg = 4;
	uint32 MsgType = 3;
	string Level = 12;
}

// LJJOMALPCIL (7)
message SetNicknameCsReq {
	bool is_modify = 10;
	string nickname = 9;
}

// HKMNGOLEDDM (53)
message SetNicknameScRsp {
	int64 gjkemkapjal = 9;
	uint32 retcode = 12;
	bool is_modify = 5;
}

// FCMKBAFDCJN (90)
message GetLevelRewardTakenListCsReq {
}

// EAMGBDJJLBO (59)
message GetLevelRewardTakenListScRsp {
	uint32 retcode = 12;
	repeated uint32 level_reward_taken_list = 15;
}

// GKCPBHHPHIP (12)
message GetLevelRewardCsReq {
	uint32 level = 2;
	uint32 interacted_prop_entity_id = 5;
}

// PNLBGIEIHPE (78)
message GetLevelRewardScRsp {
	uint32 retcode = 1;
	uint32 level = 15;
	ItemList reward = 5;
}

// PLGNMCNGDCP (48)
message SetLanguageCsReq {
	LanguageType dgdpjgplkhm = 4;
}

// IKFECHKNPEK (88)
message SetLanguageScRsp {
	LanguageType dgdpjgplkhm = 3;
	uint32 retcode = 13;
}

message AnnounceData {
	int64 begin_time = 4;
	uint32 bcelkcdmlhf = 7;
	uint32 config_id = 9;
	string objpeheemee = 6;
	uint32 cilojbalhef = 3;
	bool nmmjamblbfb = 15;
	int64 end_time = 5;
	string obnmjmlkdim = 14;
	string fhnbhgcamlg = 1;
}

// NLGNDPIGNHH (58)
message ServerAnnounceNotify {
	repeated AnnounceData announce_data_list = 5;
}

message Gateserver {
	int64 ggebffojfoi = 10;
	string hocmaflgeoa = 1969;
	bool unk1 = 1202;
	repeated string deneifflcma = 349;
	string pgcmeddbdch = 1699;
	string lmamanegbbn = 1609;
	string fgnndfalbln = 1725;
	string lpfhmneopol = 789;
	string galkkoiljgj = 1663;
	string amkdaaaefom = 1837;
	string ieodbfnbpce = 5;
	uint32 nnjkidddaca = 900;
	string idlpmplagme = 539;
	string ex_resource_url = 4;
	bool unk2 = 13;
	uint32 port = 15;
	string pdpjjpcpgog = 1443;
	uint32 jgonjgpgmai = 1377;
	string iafcgifnncg = 745;
	string gnbdmeiebog = 805;
	bool unk3 = 1482;
	uint32 retcode = 1;
	bool unk4 = 647;
	string cdlnbndddfj = 838;
	bool unk5 = 8;
	string ifix_url = 1859;
	bool unk6 = 263;
	string ip = 2;
	string asset_bundle_url = 14;
	string gdfkcejfimo = 197;
	bool unk7 = 1033;
	bool use_tcp = 116;
	string lua_url = 7;
	string jfkldioionh = 1121;
	bool unk9 = 397;
	string ngbhmfoledl = 1836;
	bool unk10 = 1368;
	string edfhdalmaaf = 264;
	string nffaihjplal = 829;
	string idgefnfdfdj = 194;
	string hmmlpdepaah = 87;
	string bdkcfbjplhd = 1394;
	string nedoaabgifp = 1103;
	string djbceejcpad = 97;
	string bbkknoodlcm = 181;
	string lua_version = 505;
	string mhnmehekcdg = 1841;
	string edegoipbplm = 1118;
	uint32 lenedjnhjmj = 12;
	string msg = 11;
	string cbollhmcbha = 2019;
	bool unk11 = 908;
	bool unk12 = 1436;
	uint32 iefgpeckccp = 904;
	string pnfcemakiha = 1621;
	int64 edikgmjkmic = 9;
	string mmdbkmgecee = 1965;
	string dpiipkocgdl = 6;
	bool unk13 = 164;
	bool unk14 = 790;
	uint32 nmpdjcmmckm = 3;
	string eoobpfjobbo = 1806;
	bool unk15 = 1533;
}

// EIJDEGNHMCI (40)
message GateServerScNotify {
	string felapcjmbhf = 5;
}

message MultiPathAvatarInfo {
	uint32 rank = 5;
	MultiPathAvatarType avatar_id = 3;
	uint32 path_equipment_id = 6;
	repeated AvatarSkillTree multi_path_skill_tree = 13;
	repeated EquipRelic equip_relic_list = 9;
}

// IJHLEPKAJDP (87)
message SetAvatarPathCsReq {
	MultiPathAvatarType avatar_id = 3;
}

// KEPJCJOHPKD (86)
message SetAvatarPathScRsp {
	uint32 retcode = 1;
	MultiPathAvatarType avatar_id = 3;
}

// EKPNJHDLGCI (62)
message SetMultipleAvatarPathsCsReq {
	repeated MultiPathAvatarType avatar_id_list = 9;
}

// KCBIGEJAONK (2)
message SetMultipleAvatarPathsScRsp {
	uint32 retcode = 5;
}

// DPGOBDDNKNG (66)
message GetMultiPathAvatarInfoCsReq {
}

// LEOIAFIDEMP (63)
message GetMultiPathAvatarInfoScRsp {
	uint32 retcode = 9;
	map<uint32, MultiPathAvatarType> cur_avatar_path = 1;
	repeated uint32 basic_type_id_list = 12;
	repeated MultiPathAvatarInfo multi_path_avatar_info_list = 14;
}

// FKBJCFKLFEH (15)
message UnlockAvatarPathCsReq {
	MultiPathAvatarType avatar_id = 12;
}

// FCDOGENBECN (85)
message UnlockAvatarPathScRsp {
	MultiPathAvatarType avatar_id = 15;
	uint32 retcode = 13;
	ItemList reward = 4;
	repeated uint32 basic_type_id_list = 10;
}

// NDACKJBHBAB (89)
message AvatarPathChangedNotify {
	uint32 base_avatar_id = 12;
	MultiPathAvatarType cur_multi_path_avatar_type = 15;
}

// DJGGNKGHEGB (65)
message SetGenderCsReq {
	Gender gender = 5;
}

// LAPGOAHFNGM (8)
message SetGenderScRsp {
	uint32 retcode = 4;
	repeated MultiPathAvatarInfo cur_avatar_path_info_list = 14;
	MultiPathAvatarType cur_avatar_path = 10;
}

// OMHJEMICMJD (18)
message SetPlayerInfoCsReq {
	bool is_modify = 12;
	string nickname = 3;
	Gender gender = 4;
}

// EPBEBPLEKIA (37)
message SetPlayerInfoScRsp {
	repeated MultiPathAvatarInfo cur_avatar_path_info_list = 8;
	uint32 retcode = 4;
	bool is_modify = 7;
	MultiPathAvatarType cur_avatar_path = 14;
	int64 gjkemkapjal = 1;
}

// HIBNPAJMEHO (79)
message QueryProductInfoCsReq {
}

message Product {
	uint32 mkmigimgmkk = 12;
	string pfbgihifibo = 3;
	ProductGiftType bnkpnmkeihn = 2;
	string ahbiklpckli = 8;
	uint32 cliemnmedff = 6;
	bool odbpkcdhgff = 7;
}

// HGLDMILOCFM (81)
message QueryProductInfoScRsp {
	uint32 ldmeeheegph = 12;
	uint32 retcode = 8;
	uint32 gkdbgjecghk = 9;
	uint64 omllghpolah = 3;
	repeated Product bphihgoekbb = 1;
}

// AKHMLJDKLJM (64)
message MonthCardRewardNotify {
	ItemList reward = 13;
}

// MPHHLLEEJJB (39)
message ClientDownloadDataScNotify {
	ClientDownloadData download_data = 2;
}

// FGHIJENNENO (9)
message ClientObjDownloadDataScNotify {
	ClientObjDownloadData data = 3;
}

// UpdateFeatureSwitchScNotify (55)
message UpdateFeatureSwitchScNotify {
	repeated FeatureSwitchInfo SwitchInfoList = 13;
}

// CEGMIGMKGFJ (41)
message DailyRefreshNotify {
	uint32 niophjkblhi = 12;
}

// DCKLMGOFIBE (94)
message SetGameplayBirthdayCsReq {
	uint32 birthday = 5;
}

// KAPLLMMOEII (92)
message SetGameplayBirthdayScRsp {
	uint32 birthday = 14;
	uint32 retcode = 6;
}

// IFOPFHICHDL (60)
message AceAntiCheaterCsReq {
	uint32 ahfpeboefjk = 15;
	string egnkofplgpi = 1;
}

// HIPKGBLBAPG (45)
message AceAntiCheaterScRsp {
	uint32 retcode = 1;
}

// OFOHPDAJMOJ (72)
message RetcodeNotify {
	repeated uint32 dneblhfgkdn = 2;
	uint32 retcode = 9;
}

// HFLFKHPHNFI (99)
message PlayerHeartBeatCsReq {
	uint64 client_time_ms = 6;
	ClientUploadData dopanlaafjf = 14;
	uint32 bccloioaphm = 1;
}

// DFCFNJFOENL (3)
message PlayerHeartBeatScRsp {
	uint64 server_time_ms = 1;
	uint64 client_time_ms = 8;
	uint32 retcode = 15;
	ClientDownloadData download_data = 12;
}

// PMNLBDBEJDK (61)
message FeatureSwitchClosedScNotify {
	FeatureSwitchType diplalmheao = 11;
}

message SecretKeyInfo {
	string secret_key = 8;
	SecretKeyType type = 11;
}

// KCLCKKLMMGC (97)
message GetSecretKeyInfoCsReq {
	bytes gdgackhhebj = 15;
}

// LJOAOINEMKB (83)
message GetSecretKeyInfoScRsp {
	uint32 retcode = 8;
	bytes abgkkdcikgo = 1;
	repeated SecretKeyInfo secret_info = 11;
}

// CJOECAIOMPF (68)
message PlayerLoginFinishCsReq {
}

// HPOMCFLPOKB (57)
message PlayerLoginFinishScRsp {
	uint32 retcode = 14;
}

message VideoKeyInfo {
	uint32 id = 8;
	uint64 video_key = 12;
}

// CBMOAGFCMKK (16)
message GetVideoVersionKeyCsReq {
}

// DBEDDNBLBMA (47)
message GetVideoVersionKeyScRsp {
	repeated VideoKeyInfo video_key_info_list = 10;
	repeated VideoKeyInfo activity_video_key_info_list = 3;
	uint32 retcode = 6;
}

message HOEBNNICGCH {
	uint32 aaimbolnneb = 7;
	uint32 ggdibfjkmli = 6;
	uint32 occnbblpngb = 2;
	uint32 content_id = 14;
}

// BJILMBFHELD (49)
message SetRedPointStatusScNotify {
	repeated HOEBNNICGCH fblmnhjgmci = 10;
	uint32 aaimbolnneb = 6;
	uint32 uid = 12;
	uint32 ggdibfjkmli = 15;
	uint32 content_id = 4;
}

// FCGAALNGIAB (91)
message ReserveStaminaExchangeCsReq {
	uint32 num = 4;
}

// ReserveStaminaExchangeScRsp (44)
message ReserveStaminaExchangeScRsp {
	uint32 Num = 3;
	uint32 retcode = 10;
}

// IEONGCOGOJI (23)
message StaminaInfoScNotify {
	uint32 stamina = 15;
	uint32 oalfodgnfje = 1;
	int64 pfjlcgieifa = 7;
	int64 oldmlmdcifd = 6;
}

message GJODAPFIFML {
	oneof AFENABEKGMH {
		bool meffkcapbfj = 13;
		bool kofdeoaglgk = 12;
		bool denfljkhnfo = 8;
		bool khkaapacgjf = 7;
		bool kkhhcopengm = 6;
		bool kmcckimhbbj = 11;
		bool oigipmeoekb = 1;
		bool kmacdmafffn = 15;
		bool efccddmnmlp = 2;
		bool ebephgldcnh = 10;
	}
}

// PIBBLKGIOGF (69)
message UpdatePlayerSettingCsReq {
	GJODAPFIFML gfmikbmfgfa = 5;
}

// FKFENFJGPFN (56)
message UpdatePlayerSettingScRsp {
	GJODAPFIFML gfmikbmfgfa = 8;
	uint32 retcode = 1;
}

// MDBOENGMEPE (20)
message ClientObjUploadCsReq {
	bytes dopanlaafjf = 2;
	uint32 bccloioaphm = 10;
}

// HCHMIDJOPHB (1)
message ClientObjUploadScRsp {
	uint32 retcode = 1;
	ClientObjDownloadData data = 2;
}

message ICDBLDMJNDE {
	repeated string eiipdjnjjeg = 13;
}

message HGGIAPIOCLG {
	bool jfbnedkkldc = 9;
	ICDBLDMJNDE black_list = 13;
}

message HFAMBFECKLI {
	oneof HDHAEJAFKAI {
		bool jfbnedkkldc = 1670;
		ICDBLDMJNDE hiigmjofkge = 404;
		ICDBLDMJNDE fnpnolnoffm = 846;
	}
}

// KCNHHADBEOO (32)
message UpdatePsnSettingsInfoCsReq {
	oneof MLDILKFLIPD {
		HGGIAPIOCLG opegbhopkcn = 1103;
		HFAMBFECKLI mhbfnkmfgcg = 673;
	}
}

// CKEONKDCDJG (82)
message UpdatePsnSettingsInfoScRsp {
	uint32 retcode = 11;
}

// DKPMNEKDKEF (6)
message GetGameStateServiceConfigCsReq {
}

// MLJIPDNGGAA (71)
message GetGameStateServiceConfigScRsp {
	repeated string gaenllhlhdn = 15;
	uint32 retcode = 2;
	repeated string lnlaaacodic = 10;
	repeated string pjdncmemnjh = 12;
}

// HGAFOMNPFID
enum CmdPlayerBoardType {
	CmdPlayerBoardTypeNone = 0;
	CmdSetHeadIconScRsp = 2827;
	CmdGetPlayerBoardDataCsReq = 2836;
	CmdSetAssistAvatarCsReq = 2843;
	CmdGetPlayerBoardDataScRsp = 2895;
	CmdSetDisplayAvatarScRsp = 2828;
	CmdSetSignatureScRsp = 2834;
	CmdSetHeadIconCsReq = 2884;
	CmdUnlockHeadIconScNotify = 2824;
	CmdSetIsDisplayAvatarInfoCsReq = 2852;
	CmdSetAssistAvatarScRsp = 2846;
	CmdSetSignatureCsReq = 2893;
	CmdSetDisplayAvatarCsReq = 2867;
	CmdSetIsDisplayAvatarInfoScRsp = 2874;
}

message HeadIconData {
	uint32 id = 13;
}

message DisplayAvatarData {
	uint32 avatar_id = 13;
	uint32 pos = 14;
}

message DisplayAvatarVec {
	repeated DisplayAvatarData display_avatar_list = 1;
	bool is_display = 3;
}

// CBDNFCLFKEB (2836)
message GetPlayerBoardDataCsReq {
}

// FJMGECNNNGB (2895)
message GetPlayerBoardDataScRsp {
	uint32 current_head_icon_id = 15;
	repeated HeadIconData unlocked_head_icon_list = 3;
	repeated uint32 assist_avatar_id_list = 14;
	uint32 retcode = 6;
	DisplayAvatarVec display_avatar_vec = 10;
	string signature = 11;
}

// IJHJGBHNLOF (2884)
message SetHeadIconCsReq {
	uint32 id = 2;
}

// HNLIMOMNHGG (2827)
message SetHeadIconScRsp {
	uint32 current_head_icon_id = 13;
	uint32 retcode = 9;
}

// MBFBJPKFBLK (2867)
message SetDisplayAvatarCsReq {
	repeated DisplayAvatarData display_avatar_list = 15;
}

// JJGIOGMEMJO (2828)
message SetDisplayAvatarScRsp {
	repeated DisplayAvatarData display_avatar_list = 8;
	uint32 retcode = 6;
}

// EANDJKIMKML (2852)
message SetIsDisplayAvatarInfoCsReq {
	bool is_display = 2;
}

// KOAOKMLPPNO (2874)
message SetIsDisplayAvatarInfoScRsp {
	bool is_display = 8;
	uint32 retcode = 14;
}

// PAKDGIHKGII (2893)
message SetSignatureCsReq {
	string signature = 13;
}

// HFCHJECINFE (2834)
message SetSignatureScRsp {
	string signature = 4;
	uint32 retcode = 3;
}

// HHGAHPFFENA (2843)
message SetAssistAvatarCsReq {
	uint32 avatar_id = 3;
	repeated uint32 avatar_id_list = 2;
}

// GLMAJHBLEJN (2846)
message SetAssistAvatarScRsp {
	repeated uint32 avatar_id_list = 8;
	uint32 retcode = 5;
	uint32 avatar_id = 11;
}

// GLCOKCILEPE
enum CmdPlayerReturnType {
	CmdPlayerReturnTypeNone = 0;
	CmdPlayerReturnTakeRewardCsReq = 4552;
	CmdPlayerReturnSignCsReq = 4595;
	CmdPlayerReturnStartScNotify = 4536;
	CmdPlayerReturnTakeRewardScRsp = 4574;
	CmdPlayerReturnTakePointRewardScRsp = 4528;
	CmdPlayerReturnTakePointRewardCsReq = 4567;
	CmdPlayerReturnInfoQueryCsReq = 4524;
	CmdPlayerReturnInfoQueryScRsp = 4593;
	CmdPlayerReturnPointChangeScNotify = 4527;
	CmdPlayerReturnForceFinishScNotify = 4534;
	CmdPlayerReturnSignScRsp = 4584;
}

enum HJGEEFNGKGM {
	PLAYER_RETURN_NONE = 0;
	PLAYER_RETURN_PROCESSING = 1;
	PLAYER_RETURN_FINISH = 2;
}

// DNODHEHDFJM (4536)
message PlayerReturnStartScNotify {
	uint32 dbpkhhdjpml = 1;
}

// FABPAKCICBF (4595)
message PlayerReturnSignCsReq {
	uint32 ikeoohngmon = 15;
	repeated uint32 eldncdbbema = 4;
}

// BBAGCFCMKFP (4584)
message PlayerReturnSignScRsp {
	repeated ItemList ihlecdfhmfi = 4;
	uint32 ikeoohngmon = 14;
	uint32 retcode = 8;
	repeated uint32 eldncdbbema = 15;
}

// KFMBBBBHECO (4527)
message PlayerReturnPointChangeScNotify {
	uint32 lbdmholpjke = 13;
}

// DCKNIJCKOLP (4567)
message PlayerReturnTakePointRewardCsReq {
	uint32 cihifngampc = 5;
	uint32 jmkfgfligfa = 14;
}

// NOEJNPNNKAG (4528)
message PlayerReturnTakePointRewardScRsp {
	uint32 cihifngampc = 4;
	ItemList nopncmcnfll = 5;
	uint32 jmkfgfligfa = 11;
	uint32 retcode = 14;
}

// MANFDIAAMFE (4552)
message PlayerReturnTakeRewardCsReq {
	uint32 ihjjaiajenh = 9;
}

// BFHMHBLFNCG (4574)
message PlayerReturnTakeRewardScRsp {
	uint32 retcode = 4;
}

// ADCGHDDKKAL (4524)
message PlayerReturnInfoQueryCsReq {
	uint32 ihjjaiajenh = 7;
}

message KODBOONBEBO {
	repeated uint32 pnlohhmogfp = 15;
	bool is_taken_reward = 7;
	uint32 lbdmholpjke = 4;
	uint32 mjookhjfbbh = 3;
	int64 finish_time = 13;
	uint32 jhhiighdnnk = 5;
	int64 odhloenbbjh = 8;
	HJGEEFNGKGM status = 12;
	repeated uint32 eldncdbbema = 14;
}

// IPLIILBOGKE (4593)
message PlayerReturnInfoQueryScRsp {
	uint32 retcode = 11;
	uint32 mbcfbdpfndi = 15;
	KODBOONBEBO bnkghfhhjik = 5;
}

// JPFOJLJABBC (4534)
message PlayerReturnForceFinishScNotify {
	KODBOONBEBO bnkghfhhjik = 9;
}

// MDIJOECGHAP
enum CmdPlotType {
	CmdPlotTypeNone = 0;
	CmdFinishPlotScRsp = 1195;
	CmdFinishPlotCsReq = 1136;
}

// AFOEKCAIMFG (1136)
message FinishPlotCsReq {
	uint32 foinhpjdjnn = 2;
}

// DECFCGOEOBI (1195)
message FinishPlotScRsp {
	uint32 retcode = 12;
	uint32 foinhpjdjnn = 4;
}

// MPOEAKCFPCH
enum CmdPunkLordType {
	CmdPunkLordTypeNone = 0;
	CmdStartPunkLordRaidCsReq = 3284;
	CmdGetKilledPunkLordMonsterDataScRsp = 3278;
	CmdTakeKilledPunkLordMonsterScoreCsReq = 3288;
	CmdStartPunkLordRaidScRsp = 3227;
	CmdTakeKilledPunkLordMonsterScoreScRsp = 3258;
	CmdGetKilledPunkLordMonsterDataCsReq = 3212;
	CmdSharePunkLordMonsterScRsp = 3228;
	CmdTakePunkLordPointRewardCsReq = 3246;
	CmdTakePunkLordPointRewardScRsp = 3225;
	CmdPunkLordBattleResultScNotify = 3259;
	CmdSummonPunkLordMonsterCsReq = 3252;
	CmdPunkLordRaidTimeOutScNotify = 3226;
	CmdSharePunkLordMonsterCsReq = 3267;
	CmdPunkLordMonsterKilledNotify = 3248;
	CmdGetPunkLordBattleRecordCsReq = 3276;
	CmdPunkLordMonsterInfoScNotify = 3296;
	CmdGetPunkLordMonsterDataScRsp = 3295;
	CmdSummonPunkLordMonsterScRsp = 3274;
	CmdGetPunkLordMonsterDataCsReq = 3236;
	CmdGetPunkLordBattleRecordScRsp = 3235;
	CmdGetPunkLordDataCsReq = 3205;
	CmdGetPunkLordDataScRsp = 3275;
	CmdPunkLordDataChangeNotify = 3210;
}

enum DCCJJGMKHLI {
	PUNK_LORD_OPERATION_NONE = 0;
	PUNK_LORD_OPERATION_REFRESH = 1;
	PUNK_LORD_OPERATION_SHARE = 2;
	PUNK_LORD_OPERATION_START_RAID = 3;
	PUNK_LORD_OPERATION_GET_BATTLE_RECORD = 4;
}

message EHAPMGILGOM {
	PunkLordMonsterBasicInfo basic_info = 15;
	PunkLordAttackerStatus ihcjfejbgag = 4;
	uint32 ahgpjehjcbk = 3;
	PunkLordBattleRecordList gnibbgfppkf = 1;
}

// OPOFABGGLIJ (3236)
message GetPunkLordMonsterDataCsReq {
}

// IFDJGEFGFOM (3295)
message GetPunkLordMonsterDataScRsp {
	uint32 retcode = 1;
	repeated EHAPMGILGOM hnjbacmifpm = 6;
}

// GKJLNLGEAOC (3284)
message StartPunkLordRaidCsReq {
	uint32 uid = 15;
	bool jcjjembfkgb = 4;
	uint32 monster_id = 9;
}

// CGPFLMNIHJH (3227)
message StartPunkLordRaidScRsp {
	uint32 retcode = 11;
	bool jcjjembfkgb = 12;
	CHMBNFJJIJN scene = 3;
	EHAPMGILGOM pjldilloflo = 13;
	int64 cikjdahmijn = 7;
	repeated uint32 ghofcpilhnb = 4;
}

// GDKKAKIMEFC (3267)
message SharePunkLordMonsterCsReq {
	uint32 monster_id = 15;
	PunkLordShareType gagnibbldff = 11;
	uint32 uid = 10;
}

// IPGICEKFJLA (3228)
message SharePunkLordMonsterScRsp {
	uint32 uid = 8;
	PunkLordShareType gagnibbldff = 14;
	uint32 monster_id = 3;
	uint32 retcode = 1;
}

// CHBOMLPLLJL (3252)
message SummonPunkLordMonsterCsReq {
}

// IJBNDHKBIIP (3274)
message SummonPunkLordMonsterScRsp {
	EHAPMGILGOM pjldilloflo = 3;
	uint32 retcode = 4;
}

// LBICADOABDF (3246)
message TakePunkLordPointRewardCsReq {
	uint32 level = 7;
	bool hgoijnknioa = 8;
}

// HGDJKCIFBGD (3225)
message TakePunkLordPointRewardScRsp {
	ItemList reward = 14;
	bool hgoijnknioa = 6;
	uint32 level = 12;
	uint32 retcode = 8;
}

// FANNLJCGIPC (3296)
message PunkLordMonsterInfoScNotify {
	PunkLordMonsterBasicInfo basic_info = 3;
	PunkLordMonsterInfoNotifyReason reason = 14;
	PunkLordBattleRecord gnibbgfppkf = 15;
	repeated uint32 ghofcpilhnb = 2;
}

// ODLDJEEDFKH (3205)
message GetPunkLordDataCsReq {
}

// JIJMGIKGPAO (3275)
message GetPunkLordDataScRsp {
	uint32 ndefcgkbplo = 7;
	uint32 jogkppibdjn = 10;
	uint32 retcode = 3;
	repeated uint32 emghlpgepme = 6;
	uint32 cfeipccilpm = 14;
	uint32 icohfpgniih = 15;
	uint32 infcnckapfh = 1;
	int64 fegjgnibann = 4;
}

// HDFBODFDFLE (3226)
message PunkLordRaidTimeOutScNotify {
	PunkLordMonsterBasicInfo pjldilloflo = 6;
}

// ENKIMPFIEGJ (3259)
message PunkLordBattleResultScNotify {
	PunkLordBattleRecord gnibbgfppkf = 12;
	uint32 laoghkdghde = 13;
	uint32 mlnhcifndno = 5;
	uint32 jgjjhjofpll = 6;
	PunkLordMonsterBasicInfo pjldilloflo = 7;
}

message ANFCFBONBEM {
	uint32 bijlejffmim = 14;
	int64 create_time = 4;
	uint32 monster_id = 5;
	bool jcnedegkkja = 11;
	uint32 world_level = 10;
	uint32 config_id = 2;
}

// OPEMLBMKIAH (3212)
message GetKilledPunkLordMonsterDataCsReq {
}

// ENBBLABMKLN (3278)
message GetKilledPunkLordMonsterDataScRsp {
	repeated ANFCFBONBEM aeigmbjddga = 8;
	repeated PunkLordMonsterKey mckiiabekcn = 5;
	uint32 retcode = 12;
}

// HFOAJBNICAP (3248)
message PunkLordMonsterKilledNotify {
	ANFCFBONBEM afgihcakljg = 1;
}

// EOCBLHFPDBD (3288)
message TakeKilledPunkLordMonsterScoreCsReq {
	PunkLordMonsterKey babdbkncdgm = 13;
	bool bdikiinohmf = 6;
}

// LNDCPHBIAOE (3258)
message TakeKilledPunkLordMonsterScoreScRsp {
	uint32 retcode = 8;
	uint32 score_id = 6;
	repeated PunkLordMonsterKey ichpmapjodo = 1;
	bool bdikiinohmf = 15;
}

// KDGEKJOPEMA (3210)
message PunkLordDataChangeNotify {
	uint32 infcnckapfh = 4;
	uint32 icohfpgniih = 12;
	uint32 ndefcgkbplo = 5;
}

// GHIIJMALPIL (3276)
message GetPunkLordBattleRecordCsReq {
	PunkLordMonsterKey babdbkncdgm = 4;
}

// HEELAKLFPIN (3235)
message GetPunkLordBattleRecordScRsp {
	uint32 retcode = 8;
	PunkLordMonsterKey babdbkncdgm = 11;
	repeated PunkLordBattleReplay oejedaefgep = 2;
	repeated PunkLordBattleRecord battle_record_list = 10;
}

// EMBMFCLDLAJ
enum CmdQuestType {
	CmdQuestTypeNone = 0;
	CmdTakeQuestOptionalRewardScRsp = 946;
	CmdQuestRecordScNotify = 924;
	CmdBatchGetQuestDataScRsp = 905;
	CmdFinishQuestScRsp = 934;
	CmdBatchGetQuestDataCsReq = 996;
	CmdGetQuestDataCsReq = 936;
	CmdGetQuestRecordScRsp = 974;
	CmdGetQuestRecordCsReq = 952;
	CmdTakeQuestOptionalRewardCsReq = 943;
	CmdTakeQuestRewardCsReq = 984;
	CmdGetQuestDataScRsp = 995;
	CmdFinishQuestCsReq = 993;
	CmdTakeQuestRewardScRsp = 927;
}

enum QuestStatus {
	QUEST_NONE = 0;
	QUEST_DOING = 1;
	QUEST_FINISH = 2;
	QUEST_CLOSE = 3;
	QUEST_DELETE = 4;
}

// BNPPOJPNGCE (936)
message GetQuestDataCsReq {
}

message Quest {
	uint32 progress = 14;
	int64 finish_time = 8;
	uint32 id = 6;
	QuestStatus status = 2;
	repeated uint32 obojidjldef = 4;
}

// JOKHADCCENG (995)
message GetQuestDataScRsp {
	repeated Quest quest_list = 11;
	uint32 total_achievement_exp = 3;
	uint32 retcode = 14;
}

// HJNEMCDAKDB (984)
message TakeQuestRewardCsReq {
	repeated uint32 succ_quest_id_list = 3;
}

// TakeQuestRewardScRsp (927)
message TakeQuestRewardScRsp {
	uint32 retcode = 14;
	ItemList Reward = 9;
	repeated uint32 SuccQuestIdList = 2;
}

// CKGHDFEMECO (943)
message TakeQuestOptionalRewardCsReq {
	uint32 quest_id = 10;
	uint32 optional_reward_id = 9;
}

// DDFLHKDDMEI (946)
message TakeQuestOptionalRewardScRsp {
	ItemList reward = 10;
	uint32 quest_id = 6;
	uint32 retcode = 7;
}

// HCOBNALHIFO (952)
message GetQuestRecordCsReq {
}

message QuestRecord {
	uint32 progress = 2;
	uint32 igjhooklmjl = 5;
}

// BHFCOKCCFFD (974)
message GetQuestRecordScRsp {
	repeated QuestRecord lopbplamilj = 15;
	uint32 retcode = 1;
}

// HKPKBECFPJK (924)
message QuestRecordScNotify {
	QuestRecord mlaciehklmi = 5;
}

// IEGGGCKOJIA (993)
message FinishQuestCsReq {
	uint32 prop_id = 7;
	uint32 quest_id = 12;
	uint32 group_id = 2;
}

// FGBMPHLELBF (934)
message FinishQuestScRsp {
	uint32 retcode = 15;
}

// IDEFLOEDIOK (996)
message BatchGetQuestDataCsReq {
	repeated uint32 quest_list = 13;
}

// AFKIHIEBIEM (905)
message BatchGetQuestDataScRsp {
	repeated Quest quest_list = 13;
	uint32 retcode = 6;
}

// JELEGLOOHHM
enum CmdRaidType {
	CmdRaidTypeNone = 0;
	CmdGetRaidInfoCsReq = 2234;
	CmdGetSaveRaidCsReq = 2296;
	CmdGetChallengeRaidInfoScRsp = 2252;
	CmdGetAllSaveRaidScRsp = 2219;
	CmdRaidInfoNotify = 2267;
	CmdDelSaveRaidScNotify = 2226;
	CmdSetClientRaidTargetCountScRsp = 2225;
	CmdSetClientRaidTargetCountCsReq = 2246;
	CmdLeaveRaidCsReq = 2284;
	CmdStartRaidScRsp = 2295;
	CmdGetRaidInfoScRsp = 2243;
	CmdLeaveRaidScRsp = 2227;
	CmdTakeChallengeRaidRewardScRsp = 2224;
	CmdRaidKickByServerScNotify = 2207;
	CmdGetAllSaveRaidCsReq = 2275;
	CmdStartRaidCsReq = 2236;
	CmdGetChallengeRaidInfoCsReq = 2228;
	CmdTakeChallengeRaidRewardCsReq = 2274;
	CmdGetSaveRaidScRsp = 2205;
	CmdChallengeRaidNotify = 2293;
}

enum MFCKNJHDIGG {
	RAID_STATUS_NONE = 0;
	RAID_STATUS_DOING = 1;
	RAID_STATUS_FINISH = 2;
	RAID_STATUS_FAILED = 3;
}

enum MOKLOLKLKGJ {
	RAID_TARGET_STATUS_NONE = 0;
	RAID_TARGET_STATUS_DOING = 1;
	RAID_TARGET_STATUS_FINISH = 2;
}

enum GJPNLJACAMN {
	RAID_KICK_REASON_NONE = 0;
	RAID_KICK_REASON_ACTIVITY_SCHEDULE_FINISH = 1;
}

message CHMBNFJJIJN {
	SceneInfo nmjmmdadklf = 1;
	LineupInfo lineup = 6;
	uint32 world_level = 9;
	uint32 nbljpgfhdfi = 15;
}

// JMOIJNKFBCF (2236)
message StartRaidCsReq {
	uint32 prop_entity_id = 1;
	uint32 is_save = 11;
	uint32 world_level = 2;
	uint32 nbljpgfhdfi = 12;
	repeated uint32 avatar_list = 7;
}

// LGHFKOLHMOJ (2295)
message StartRaidScRsp {
	CHMBNFJJIJN scene = 15;
	uint32 retcode = 5;
}

// MCAJNBLPGMK (2284)
message LeaveRaidCsReq {
	bool is_save = 2;
	uint32 nbljpgfhdfi = 12;
}

// BFPGGDCEGOO (2227)
message LeaveRaidScRsp {
	uint32 retcode = 7;
}

message BCPDMEMPLBM {
	MOKLOLKLKGJ ofdkcplnjnd = 1;
	uint32 nhjjcppfegf = 15;
	uint32 bmjckoiomgp = 4;
}

// LFMGJBJPILL (2267)
message RaidInfoNotify {
	uint32 nbljpgfhdfi = 12;
	repeated BCPDMEMPLBM cjjaedialng = 3;
	ItemList item_list = 8;
	uint64 oelfpeocock = 14;
	MFCKNJHDIGG status = 5;
	uint32 world_level = 13;
}

message HMJENOAHIHE {
	uint32 nbljpgfhdfi = 6;
	uint32 max_score = 15;
}

message PNLGMICNEKB {
	repeated uint32 hadkcjbfgmd = 3;
	uint32 world_level = 13;
	uint32 nbljpgfhdfi = 12;
}

// CFHCDMNNNPO (2234)
message GetRaidInfoCsReq {
}

// GetRaidInfoScRsp (2243)
message GetRaidInfoScRsp {
	repeated HMJENOAHIHE ChallengeRaidList = 5;
	uint32 retcode = 13;
	repeated uint32 ChallengeTakenRewardIdList = 3;
	repeated PNLGMICNEKB FinishedRaidInfoList = 11;
}

// KNDDHLMOKJK (2228)
message GetChallengeRaidInfoCsReq {
}

// JEEMPEAFBII (2252)
message GetChallengeRaidInfoScRsp {
	uint32 retcode = 6;
	repeated uint32 oknnlacihpf = 8;
	repeated HMJENOAHIHE cilpbablffc = 11;
}

// DIIGNJJGBPI (2274)
message TakeChallengeRaidRewardCsReq {
	uint32 hkaojpkpjoi = 13;
}

// GFKDHLMAAAI (2224)
message TakeChallengeRaidRewardScRsp {
	ItemList reward = 11;
	uint32 hkaojpkpjoi = 1;
	uint32 retcode = 3;
}

// APANHNGHKDM (2293)
message ChallengeRaidNotify {
	HMJENOAHIHE cggefekkbag = 3;
}

// LILDBCEGOGA (2246)
message SetClientRaidTargetCountCsReq {
	uint32 progress = 6;
	uint32 anfnchcllcm = 11;
}

// EPLAGFHGHAG (2225)
message SetClientRaidTargetCountScRsp {
	uint32 retcode = 15;
	uint32 anfnchcllcm = 2;
	uint32 progress = 9;
}

// DGCHLHOAAEK (2296)
message GetSaveRaidCsReq {
	uint32 nbljpgfhdfi = 6;
	uint32 world_level = 8;
}

// GMFLKHHFIIO (2205)
message GetSaveRaidScRsp {
	repeated BCPDMEMPLBM cjjaedialng = 7;
	uint32 retcode = 11;
	bool is_save = 3;
	uint32 nbljpgfhdfi = 10;
	uint32 world_level = 6;
}

message ADJFEHGFFHE {
	uint32 world_level = 9;
	uint32 nbljpgfhdfi = 8;
	repeated BCPDMEMPLBM cjjaedialng = 10;
}

// LOMHNHELKFJ (2275)
message GetAllSaveRaidCsReq {
}

// DNPNIPIDEHG (2219)
message GetAllSaveRaidScRsp {
	repeated ADJFEHGFFHE plkjlkobgof = 14;
	uint32 retcode = 5;
}

// OLLOPBLJHKI (2226)
message DelSaveRaidScNotify {
	uint32 nbljpgfhdfi = 2;
	uint32 world_level = 6;
}

// NGCCLJHBFAH (2207)
message RaidKickByServerScNotify {
	LineupInfo lineup = 2;
	GJPNLJACAMN reason = 9;
	uint32 world_level = 4;
	uint32 nbljpgfhdfi = 5;
	SceneInfo scene = 1;
}

// JGDDBJKCHOL
enum CmdRaidCollectionType {
	CmdRaidCollectionTypeNone = 0;
	CmdRaidCollectionDataScRsp = 6955;
	CmdRaidCollectionDataScNotify = 6947;
	CmdRaidCollectionEnterNextRaidCsReq = 6943;
	CmdRaidCollectionEnterNextRaidScRsp = 6957;
	CmdRaidCollectionDataCsReq = 6960;
}

message GGBLNFPGCBN {
	uint32 ighenedpecf = 7;
}

// CMALDCLAIDN (6960)
message RaidCollectionDataCsReq {
}

// LJBPFIEBLAP (6955)
message RaidCollectionDataScRsp {
	uint32 retcode = 15;
	repeated GGBLNFPGCBN challenge_list = 1;
}

// FLLLFJPNOOO (6947)
message RaidCollectionDataScNotify {
	GGBLNFPGCBN collection_info = 3;
}

// OLOHGCCGNAI (6943)
message RaidCollectionEnterNextRaidCsReq {
	repeated uint32 avatar_list = 7;
	uint32 nbljpgfhdfi = 8;
	uint32 world_level = 5;
	uint32 is_save = 14;
}

// NHPACOHBECF (6957)
message RaidCollectionEnterNextRaidScRsp {
	uint32 retcode = 1;
	CHMBNFJJIJN scene = 11;
}

// DJANENLMJEO
enum CmdRecommendType {
	CMD_RECOMMEND_TYPE_NONE = 0;
	CmdGetBigDataRecommendScRsp = 2443;
	CmdGetChallengeRecommendLineupListScRsp = 2449;
	CmdRelicAvatarRecommendScRsp = 2423;
	CmdRelicRecommendScRsp = 2450;
	CmdGetChallengeRecommendLineupListCsReq = 2415;
	CmdRelicAvatarRecommendCsReq = 2430;
	CmdRelicRecommendCsReq = 2412;
	CmdGetBigDataRecommendCsReq = 2409;
}

enum JHIPGPGHHMG {
	BIG_DATA_RECOMMEND_TYPE_NONE = 0;
	BIG_DATA_RECOMMEND_TYPE_EQUIPMENT = 1;
	BIG_DATA_RECOMMEND_TYPE_RELIC_SUIT = 2;
}

message HANHAPJMLEJ {
	uint32 pmioddoiepl = 4;
	uint32 kcbmlnoafji = 12;
	uint32 jmjhcanmige = 3;
}

message FLCMIIMLNNL {
	uint32 bgpkljfkbbk = 5;
	uint32 kcbmlnoafji = 2;
}

// AJNADODJJGO (2412)
message RelicRecommendCsReq {
	uint32 avatar_id = 9;
}

// HAIEHIALJGB (2450)
message RelicRecommendScRsp {
	repeated FLCMIIMLNNL lfhnbiaiaog = 13;
	repeated FLCMIIMLNNL bnaebnbledn = 6;
	repeated HANHAPJMLEJ phiekfagmgb = 15;
	uint32 retcode = 11;
	repeated FLCMIIMLNNL gcbacjgkgmk = 1;
	bool gilcobajpon = 10;
	repeated HANHAPJMLEJ lidiljpejdo = 5;
	repeated FLCMIIMLNNL amgaennclke = 12;
	uint32 avatar_id = 8;
}

// EJGFAALGFGB (2430)
message RelicAvatarRecommendCsReq {
	uint32 djlmajbojnb = 12;
}

// ELDPCGFDLBB (2423)
message RelicAvatarRecommendScRsp {
	bool gilcobajpon = 11;
	uint32 djlmajbojnb = 14;
	repeated uint32 avatar_id_list = 4;
	uint32 retcode = 7;
}

// APHHHIHOIBF (2415)
message GetChallengeRecommendLineupListCsReq {
	uint32 challenge_id = 8;
}

message LOBALPNNPNL {
	repeated uint32 second_half_lineup = 13;
	uint32 jnjngdigboo = 5;
	repeated uint32 first_half_lineup = 7;
	uint32 gjpjnpcbmmb = 4;
}

// OEPEFKHNEIH (2449)
message GetChallengeRecommendLineupListScRsp {
	uint32 challenge_id = 8;
	uint32 retcode = 15;
	repeated LOBALPNNPNL hobeflekpfg = 12;
}

message FCKKNINNGCJ {
	uint32 odmkkpbmmci = 12;
	uint32 gcomeogcken = 13;
}

message BHNNEGIBCMO {
	repeated FCKKNINNGCJ equipment_list = 15;
}

message PDNGBNFBAAP {
	uint32 jhkdckggokc = 7;
	uint32 fioamhokijd = 1;
	uint32 dnogbebbegf = 3;
}

message LEEBHHKEEHG {
	repeated PDNGBNFBAAP pgldfgnofnd = 15;
}

// KAPJJHPFFLC (2409)
message GetBigDataRecommendCsReq {
	JHIPGPGHHMG jcifnoldcge = 11;
	uint32 jlnhhdnlcgn = 2;
}

// IKOPBAKBJME (2443)
message GetBigDataRecommendScRsp {
	oneof BALFFGGDJMP {
		BHNNEGIBCMO gbopcboopko = 8;
		LEEBHHKEEHG kcijkeeadjj = 5;
	}
	uint32 retcode = 13;
	uint32 JLNHHDNLCGN = 6;
	bool GILCOBAJPON = 15;
	JHIPGPGHHMG JCIFNOLDCGE = 11;
}

// JFHPBANEDEG
enum CmdRedDotType {
	CmdRedDotTypeNone = 0;
	CmdUpdateRedDotDataCsReq = 5984;
	CmdGetSingleRedDotParamGroupScRsp = 5928;
	CmdGetAllRedDotDataCsReq = 5936;
	CmdGetAllRedDotDataScRsp = 5995;
	CmdUpdateRedDotDataScRsp = 5927;
	CmdGetSingleRedDotParamGroupCsReq = 5967;
}

enum HCNPGHIGOBG {
	UPDATE_REDDOT_NONE = 0;
	UPDATE_REDDOT_ADD = 1;
	UPDATE_REDDOT_REPLACE = 2;
}

message GILLJCMPGMN {
	repeated uint32 adddadefdha = 7;
}

message MDPAPLMJLIC {
	uint32 panel_id = 14;
	map<uint32, GILLJCMPGMN> gbfmghfnlbg = 5;
	uint32 objjenbpjpm = 8;
}

// JPHDBCNLAAM (5936)
message GetAllRedDotDataCsReq {
}

// FIKHOKHLNFL (5995)
message GetAllRedDotDataScRsp {
	uint32 retcode = 13;
	repeated MDPAPLMJLIC fmljdojmkpp = 5;
}

// EGNJIPLNHLO (5984)
message UpdateRedDotDataCsReq {
	uint32 group_id = 4;
	uint32 panel_id = 3;
	repeated uint32 switch_list = 13;
	HCNPGHIGOBG hihiobdbnda = 5;
	uint32 objjenbpjpm = 8;
}

// BIOBDPCNKLI (5927)
message UpdateRedDotDataScRsp {
	uint32 objjenbpjpm = 3;
	uint32 retcode = 2;
	uint32 panel_id = 9;
	uint32 group_id = 8;
}

// AILOOFLOENM (5967)
message GetSingleRedDotParamGroupCsReq {
	uint32 panel_id = 8;
	uint32 group_id = 10;
	uint32 objjenbpjpm = 15;
}

// FENOHLMMEDC (5928)
message GetSingleRedDotParamGroupScRsp {
	uint32 group_id = 1;
	uint32 objjenbpjpm = 15;
	uint32 panel_id = 8;
	GILLJCMPGMN ejbjakmjapd = 4;
	uint32 retcode = 12;
}

// JINBPAPJGKK
enum CmdRelicSmartWearType {
	CmdRelicSmartWearTypeNone = 0;
	CmdRelicSmartWearGetPlanCsReq = 8270;
	CmdRelicSmartWearDeletePlanCsReq = 8255;
	CmdRelicSmartWearGetPlanScRsp = 8265;
	CmdRelicSmartWearAddPlanScRsp = 8253;
	CmdRelicSmartWearUpdatePlanScRsp = 8256;
	CmdRelicSmartWearUpdatePlanCsReq = 8267;
	CmdRelicSmartWearAddPlanCsReq = 8257;
	CmdRelicSmartWearDeletePlanScRsp = 8260;
}

message CPJHGCECOIE {
	uint32 avatar_id = 5;
	uint32 unique_id = 14;
	repeated uint32 pmjibdkmdmh = 2;
	repeated uint32 pdjopkemagf = 9;
}

// PLJBPFKACMK (8270)
message RelicSmartWearGetPlanCsReq {
	uint32 avatar_id = 1;
}

// IHBIBAAIFND (8265)
message RelicSmartWearGetPlanScRsp {
	repeated CPJHGCECOIE dgdhihmomie = 11;
	uint32 retcode = 10;
	uint32 avatar_id = 14;
}

// LJNEJAAMBIB (8257)
message RelicSmartWearAddPlanCsReq {
	CPJHGCECOIE mbgncggbepp = 6;
}

// FNADNJHEAFH (8253)
message RelicSmartWearAddPlanScRsp {
	CPJHGCECOIE mbgncggbepp = 13;
	uint32 retcode = 1;
}

// MPNCFLHHIOC (8267)
message RelicSmartWearUpdatePlanCsReq {
	CPJHGCECOIE mbgncggbepp = 10;
}

// KGEAHBCMOKK (8256)
message RelicSmartWearUpdatePlanScRsp {
	uint32 retcode = 12;
	CPJHGCECOIE mbgncggbepp = 7;
}

// FEJJBDAADCN (8255)
message RelicSmartWearDeletePlanCsReq {
	uint32 unique_id = 11;
}

// JABEGHHHAEI (8260)
message RelicSmartWearDeletePlanScRsp {
	uint32 retcode = 9;
	uint32 unique_id = 8;
}

// IPHBICDPAIO
enum CmdReplayType {
	CmdReplayTypeNone = 0;
	CmdGetPlayerReplayInfoScRsp = 3527;
	CmdGetReplayTokenCsReq = 3536;
	CmdGetReplayTokenScRsp = 3595;
	CmdGetPlayerReplayInfoCsReq = 3584;
}

// KNLBOBPLHJO (3536)
message GetReplayTokenCsReq {
	uint32 stage_id = 2;
	string lkpjfgebdad = 4;
	uint32 acocbgccece = 12;
	ReplayType replay_type = 8;
	string jpcpdnplbom = 9;
	uint32 inepcgkdobl = 10;
}

// JEBCNIBMLMM (3595)
message GetReplayTokenScRsp {
	ReplayType replay_type = 1;
	uint32 stage_id = 14;
	string token = 4;
	string jpcpdnplbom = 6;
	uint32 retcode = 3;
}

// MABBFPAGPGA (3584)
message GetPlayerReplayInfoCsReq {
}

// CNPKLLMJHKD (3527)
message GetPlayerReplayInfoScRsp {
	uint32 retcode = 9;
	repeated ReplayInfo nhccmihkbkc = 11;
}

// FEJOCAOBGMJ
enum CmdRndOptionType {
	CmdRndOptionTypeNone = 0;
	CmdDailyFirstMeetPamScRsp = 3427;
	CmdGetRndOptionCsReq = 3436;
	CmdDailyFirstMeetPamCsReq = 3484;
	CmdGetRndOptionScRsp = 3495;
}

// KPBPEDCDHFG (3436)
message GetRndOptionCsReq {
	uint32 id = 10;
}

// FPJFKDDHGPP (3495)
message GetRndOptionScRsp {
	uint32 retcode = 2;
	repeated uint32 kmmkekkbcmf = 7;
}

// HCPKLMFGKDK (3484)
message DailyFirstMeetPamCsReq {
}

// JEDDODFNFOM (3427)
message DailyFirstMeetPamScRsp {
	uint32 retcode = 9;
}

// FNOHMCEBKCC
enum CmdRogueType {
	CmdRogueTypeNone = 0;
	CmdSyncRogueStatusScNotify = 1854;
	CmdGetRogueScoreRewardInfoScRsp = 1820;
	CmdGetRogueScoreRewardInfoCsReq = 1809;
	CmdReviveRogueAvatarCsReq = 1826;
	CmdStartRogueScRsp = 1827;
	CmdSyncRogueGetItemScNotify = 1870;
	CmdQuitRogueCsReq = 1876;
	CmdTakeRogueScoreRewardScRsp = 1890;
	CmdFinishAeonDialogueGroupScRsp = 1889;
	CmdExchangeRogueRewardKeyCsReq = 1899;
	CmdGetRogueInfoCsReq = 1836;
	CmdTakeRogueAeonLevelRewardCsReq = 1898;
	CmdLeaveRogueScRsp = 1874;
	CmdGetRogueTalentInfoScRsp = 1885;
	CmdEnableRogueTalentScRsp = 1802;
	CmdSyncRogueFinishScNotify = 1896;
	CmdSyncRogueAeonScNotify = 1847;
	CmdSyncRogueExploreWinScNotify = 1817;
	CmdGetRogueInitialScoreCsReq = 1837;
	CmdQuitRogueScRsp = 1835;
	CmdGetRogueBuffEnhanceInfoScRsp = 1812;
	CmdOpenRogueChestScRsp = 1872;
	CmdEnhanceRogueBuffCsReq = 1878;
	CmdEnterRogueMapRoomScRsp = 1818;
	CmdSyncRogueAeonLevelUpRewardScNotify = 1856;
	CmdExchangeRogueRewardKeyScRsp = 1803;
	CmdLeaveRogueCsReq = 1852;
	CmdPickRogueAvatarCsReq = 1805;
	CmdTakeRogueAeonLevelRewardScRsp = 1891;
	CmdStartRogueCsReq = 1884;
	CmdTakeRogueScoreRewardCsReq = 1853;
	CmdEnhanceRogueBuffScRsp = 1829;
	CmdEnterRogueCsReq = 1867;
	CmdEnterRogueScRsp = 1828;
	CmdSyncRogueReviveInfoScNotify = 1810;
	CmdGetRogueAeonInfoScRsp = 1866;
	CmdSyncRogueSeasonFinishScNotify = 1813;
	CmdOpenRogueChestCsReq = 1864;
	CmdGetRogueAeonInfoCsReq = 1886;
	CmdSyncRogueAreaUnlockScNotify = 1849;
	CmdGetRogueInfoScRsp = 1895;
	CmdEnableRogueTalentCsReq = 1862;
	CmdGetRogueBuffEnhanceInfoCsReq = 1859;
	CmdSyncRogueVirtualItemInfoScNotify = 1877;
	CmdSyncRogueRewardInfoScNotify = 1814;
	CmdFinishAeonDialogueGroupCsReq = 1863;
	CmdSyncRogueMapRoomScNotify = 1879;
	CmdSyncRoguePickAvatarInfoScNotify = 1851;
	CmdEnterRogueMapRoomCsReq = 1808;
	CmdPickRogueAvatarScRsp = 1875;
	CmdReviveRogueAvatarScRsp = 1807;
	CmdGetRogueTalentInfoCsReq = 1815;
	CmdGetRogueInitialScoreScRsp = 1811;
}

enum KDGNMFLKFLL {
	ROGUE_STATUS_NONE = 0;
	ROGUE_STATUS_DOING = 1;
	ROGUE_STATUS_PENDING = 2;
	ROGUE_STATUS_ENDLESS = 3;
	ROGUE_STATUS_FINISH = 4;
}

enum HCDEHKDJBAE {
	ROGUE_ROOM_STATUS_NONE = 0;
	ROGUE_ROOM_STATUS_LOCK = 1;
	ROGUE_ROOM_STATUS_UNLOCK = 2;
	ROGUE_ROOM_STATUS_PLAY = 3;
	ROGUE_ROOM_STATUS_FINISH = 4;
}

enum EHDDMOAIFBD {
	ROGUE_AREA_STATUS_LOCK = 0;
	ROGUE_AREA_STATUS_UNLOCK = 1;
	ROGUE_AREA_STATUS_FIRST_PASS = 2;
	ROGUE_AREA_STATUS_CLOSE = 3;
}

enum CMFLJCHIDGC {
	ROGUE_BUFF_SOURCE_TYPE_NONE = 0;
	ROGUE_BUFF_SOURCE_TYPE_SELECT = 1;
	ROGUE_BUFF_SOURCE_TYPE_ENHANCE = 2;
	ROGUE_BUFF_SOURCE_TYPE_MIRACLE = 3;
	ROGUE_BUFF_SOURCE_TYPE_DIALOGUE = 4;
	ROGUE_BUFF_SOURCE_TYPE_BONUS = 5;
	ROGUE_BUFF_SOURCE_TYPE_MAZE_SKILL = 6;
	ROGUE_BUFF_SOURCE_TYPE_SHOP = 7;
	ROGUE_BUFF_SOURCE_TYPE_LEVEL_MECHANISM = 8;
	ROGUE_BUFF_SOURCE_TYPE_ENDLESS_LEVEL_START = 9;
}

enum IJEDMNDOPFK {
	ROGUE_MIRACLE_SOURCE_TYPE_NONE = 0;
	ROGUE_MIRACLE_SOURCE_TYPE_SELECT = 1;
	ROGUE_MIRACLE_SOURCE_TYPE_DIALOGUE = 2;
	ROGUE_MIRACLE_SOURCE_TYPE_BONUS = 3;
	ROGUE_MIRACLE_SOURCE_TYPE_USE = 4;
	ROGUE_MIRACLE_SOURCE_TYPE_RESET = 5;
	ROGUE_MIRACLE_SOURCE_TYPE_REPLACE = 6;
	ROGUE_MIRACLE_SOURCE_TYPE_TRADE = 7;
	ROGUE_MIRACLE_SOURCE_TYPE_GET = 8;
	ROGUE_MIRACLE_SOURCE_TYPE_SHOP = 9;
	ROGUE_MIRACLE_SOURCE_TYPE_MAZE_SKILL = 10;
	ROGUE_MIRACLE_SOURCE_TYPE_LEVEL_MECHANISM = 11;
	ROGUE_MIRACLE_SOURCE_TYPE_ENDLESS_LEVEL_START = 12;
}

enum RogueDialogueResult {
	ROGUE_DIALOGUE_RESULT_SUCC = 0;
	ROGUE_DIALOGUE_RESULT_FAIL = 1;
}

message RogueBuff {
	uint32 level = 3;
	uint32 buff_id = 13;
}

message RogueBuffList {
	repeated RogueBuff buff_list = 6;
}

message RogueMapInfo {
	uint32 ajcmleeeaae = 11;
	uint32 room_id = 1;
	HCDEHKDJBAE gelbnibonef = 7;
	uint32 lmojjcecokp = 12;
	HCDEHKDJBAE hagnknhjidi = 4;
}

message RogueArea {
	uint32 map_id = 6;
	repeated RogueMapInfo njdedckpmed = 10;
	uint32 enimojgdain = 8;
	uint32 pcibkdlkimf = 5;
	uint32 kjkpmffamfk = 3;
}

message FGBNPHLEDEN {
	uint32 map_id = 4;
	bool ahffgclfffi = 3;
	KDGNMFLKFLL bfmgambnkka = 14;
	uint32 hcggmkcmpjm = 1;
	uint32 kjkpmffamfk = 11;
	EHDDMOAIFBD nkpapgdknml = 12;
}

message DCABGEIHPNI {
	repeated uint32 neelaopaldp = 7;
	repeated RogueBuff maze_buff_list = 8;
	uint32 acopdfakfld = 1;
	ItemCostData epdccpmacbo = 12;
	KEEOBDAFNLJ leeacmngdfl = 4;
	bool dkecomcnabe = 3;
	uint32 hbdkeieafkl = 9;
	uint32 okdccjgcnma = 14;
	uint32 hbgefombgad = 15;
	uint32 fdfkncgpfhh = 11;
	uint32 nngafmpjbnb = 13;
	uint32 opfgedljcbl = 10;
	uint32 ifodphlhikb = 5;
}

message DBJAGGACOFN {
	repeated RogueBuff mocggnbapca = 7;
	RogueBuff get_buff_list = 10;
}

message PHENJCJMAED {
	uint32 select_hint_id = 7;
	repeated RogueBuff fcmlpecgmkh = 1;
	repeated RogueBuff jleahlnobnd = 10;
}

message RogueBuffEnhanceInfo {
	float cebbblfacbe = 8;
	ItemCostData cost_data = 15;
	uint32 buff_id = 14;
}

message RogueBuffEnhanceInfoList {
	repeated RogueBuffEnhanceInfo lebaaijchoh = 8;
}

message RogueMiracle {
	uint32 cur_times = 2;
	uint32 miracle_id = 7;
	uint32 jloijknceam = 1;
	uint32 hhlnghknbfe = 10;
	map<uint32, uint32> eebncinfdmb = 8;
}

message RogueMiracleInfo {
	uint32 edijohdchkn = 14;
	uint32 ccepgehcmcg = 8;
	repeated RogueMiracle miracle_list = 11;
}

message LFNPAFFLGDO {
	repeated uint32 miracle_handbook_list = 12;
	RogueMiracleInfo game_miracle_info = 15;
}

message PADMNLKPOND {
	repeated uint32 iogngoniiep = 14;
}

message ANELLCMEFNG {
	repeated uint32 lokhiihcfec = 15;
}

message KKOOPMOMFMN {
	oneof KOLMCKFGPII {
		ItemList ihkkjkhfihh = 15;
		RogueBuffList fnopmfbbppo = 4;
	}
	uint32 IKFOHIMFFIO = 9;
}

message RogueReviveInfo {
	uint32 clgnbcjagcl = 15;
	repeated uint32 ggnjhinnbkh = 7;
	uint32 nbdneodpgol = 10;
	ItemCostData rogue_revive_cost = 13;
}

message CLJLMKMADAJ {
	uint32 dnbjpopcghn = 4;
}

message RogueVirtualItemInfo {
	uint32 opfgedljcbl = 10;
	uint32 eldcfilbekd = 12;
	uint32 cpdcbffipmp = 8;
	uint32 laaiblohmde = 5;
}

message RogueInfo {
	RogueGetInfo rogue_get_info = 196;
	RogueCurrentInfo rogue_current_info = 675;
}

message RogueGetInfo {
	RogueAreaInfo gkebdmbajaj = 3;
	RogueGetVirtualItemInfo lmpnoceabnh = 6;
	RogueScoreRewardInfo aliiifglpda = 7;
	RogueAeonInfo ijopankcekj = 1;
	RogueSeasonInfo noomdkekgmj = 5;
}

message RogueCurrentInfo {
	bool hppclaodclc = 4;
	KDGNMFLKFLL status = 2;
	BLIMEDCMHMN mjkpcdjjeml = 6;
	RogueBuffInfo rogue_buff_info = 10;
	GameMiracleInfo game_miracle_info = 12;
	GameAeonInfo ijopankcekj = 9;
	RogueModuleInfo gokmadggocb = 11;
	RogueArea fpgmdipjkdj = 14;
	RogueLineupInfo eelbepmnpgi = 13;
	DEFIBAENEFF lcfanolipij = 1;
}

message RogueSeasonInfo {
	uint32 jckbapagjlo = 4;
	int64 begin_time = 7;
	int64 end_time = 8;
}

message RogueAreaInfo {
	repeated FGBNPHLEDEN odmgnjmjbhj = 2;
}

message RogueAeonInfo {
	uint32 fggcobnafmf = 10;
	bool plpnpndghcp = 7;
	uint32 jmhnblglkle = 5;
	repeated uint32 aeon_id_list = 1;
}

message RogueGetVirtualItemInfo {
	uint32 kgehnbcjegb = 15;
	uint32 adbdepodloi = 4;
}

message RogueBuffInfo {
	repeated RogueBuff maze_buff_list = 13;
}

message GameMiracleInfo {
	RogueMiracleInfo game_miracle_info = 6;
}

message RogueLineupInfo {
	repeated uint32 eljinbjeael = 7;
	RogueReviveInfo revive_info = 12;
	repeated uint32 jnmdgcjhcjj = 9;
	repeated uint32 base_avatar_id_list = 4;
}

message AJGEDEFENFA {
	ANELLCMEFNG gafafknadag = 10;
}

message GameAeonInfo {
	bool plpnpndghcp = 13;
	uint32 fggcobnafmf = 2;
	uint32 game_aeon_id = 4;
}

message RogueModuleInfo {
	repeated uint32 nbmbafkhnce = 7;
}

message OKGDOHANOLD {
	uint32 game_aeon_id = 14;
	bool plpnpndghcp = 15;
	repeated uint32 aeon_id_list = 10;
	uint32 jmhnblglkle = 1;
	uint32 fggcobnafmf = 9;
}

message RogueExploreScore {
	uint32 ikhioiiojha = 11;
	uint32 score_id = 15;
	uint32 dnobhlepfee = 4;
}

message RogueExploreScoreInfo {
	repeated RogueExploreScore ledhadhhcad = 1;
	uint32 aaijabgnada = 8;
	float kfjibjojdjj = 4;
}

message RogueRecordAvatar {
	AvatarType avatar_type = 3;
	uint32 level = 12;
	uint32 slot = 15;
	uint32 id = 7;
}

message RogueRecordInfo {
	repeated RogueBuff buff_list = 8;
	repeated uint32 miracle_list = 6;
	repeated RogueRecordAvatar avatar_list = 7;
}

message RogueFinishInfo {
	ItemList mnoieilbicl = 13;
	uint32 mimbjfhijjb = 654;
	bool bbfhpgpdehm = 14;
	uint32 kjkpmffamfk = 288;
	uint32 adbdepodloi = 4;
	ItemList cnldeecifde = 1;
	RogueScoreRewardInfo fglomhfmldm = 6;
	ItemList ebaiffmakkk = 15;
	RogueRecordInfo nmbommjjmmb = 7;
	uint32 dnpnnnmfink = 3;
	uint32 score_id = 8;
	uint32 bnbojmljihd = 11;
	bool is_win = 5;
	RogueExploreScoreInfo dfegoaaiemd = 10;
	uint32 aaoibecdcee = 12;
	JPMECEBAHOA ffmkohimdgk = 9;
	RogueScoreRewardInfo nbdcgoegfph = 2;
}

message RogueScoreRewardInfo {
	bool kfeeldmahpi = 6;
	int64 pmbibicpbbm = 5;
	repeated uint32 fpgafncbiog = 15;
	uint32 naabmdbcank = 8;
	bool cohjakffemb = 10;
	uint32 fcejjhlcoim = 3;
	int64 igniakdcchp = 11;
}

message INIBDHGOMEP {
	uint32 eecemipjjgh = 11;
	uint32 exp = 13;
	uint32 aeon_id = 6;
	uint32 level = 5;
}

message RogueDialogueEventParam {
	int32 IntValue = 7;
	float Ratio = 3;
	bool IsValid = 10;
	uint32 DialogueEventId = 5;
	uint32 ArgId = 11;
}

message DialogueEvent {
	uint32 talk_dialogue_id = 11;
	uint32 aeon_talk_id = 9;
	uint32 game_mode_type = 12;
	repeated uint32 npcgbahogfa = 8;
	repeated RogueDialogueEventParam dialogue_event_param_list = 6;
	uint32 event_unique_id = 15;
}

message CMELHCNKJAD {
	oneof KOLMCKFGPII {
		ItemList ihkkjkhfihh = 14;
	}
	RogueDialogueResult MLDCBHAMCLK = 11;
	repeated uint32 FBHPFCFCGIF = 2;
}

// LENHOCMBDNO (1836)
message GetRogueInfoCsReq {
}

// CHHMEDOBHDC (1895)
message GetRogueInfoScRsp {
	uint32 retcode = 15;
	RogueInfo rogue_game_info = 12;
}

// DELEEPCLOPO (1884)
message StartRogueCsReq {
	repeated uint32 hobkomgbibl = 4;
	repeated uint32 base_avatar_id_list = 15;
	uint32 interacted_prop_entity_id = 3;
	uint32 kjkpmffamfk = 1;
	uint32 aeon_id = 14;
	repeated uint32 eljinbjeael = 9;
}

// ONECEBBDFJL (1827)
message StartRogueScRsp {
	LineupInfo lineup = 8;
	uint32 retcode = 3;
	RogueInfo rogue_game_info = 2;
	CHAENBOEBOC kdjlefeaiep = 4;
	SceneInfo scene = 11;
}

// LGIIPIDBLFH (1867)
message EnterRogueCsReq {
	uint32 interacted_prop_entity_id = 15;
	uint32 kjkpmffamfk = 14;
}

// IJGFDDDLKBE (1828)
message EnterRogueScRsp {
	CHAENBOEBOC kdjlefeaiep = 1;
	uint32 retcode = 12;
	SceneInfo scene = 7;
	RogueInfo rogue_game_info = 10;
	LineupInfo lineup = 15;
}

// PDJEMGOECHJ (1852)
message LeaveRogueCsReq {
}

// DPDMHGJAAEA (1874)
message LeaveRogueScRsp {
	SceneInfo scene = 7;
	CHAENBOEBOC kdjlefeaiep = 2;
	LineupInfo lineup = 9;
	RogueInfo rogue_game_info = 3;
	uint32 retcode = 12;
}

// GMJEGFMHPAA (1896)
message SyncRogueFinishScNotify {
	RogueFinishInfo rogue_finish_info = 14;
}

// OLFJNGJFEDK (1805)
message PickRogueAvatarCsReq {
	repeated uint32 eljinbjeael = 7;
	repeated uint32 base_avatar_id_list = 6;
	uint32 prop_entity_id = 9;
}

// OJAFIOPJAML (1875)
message PickRogueAvatarScRsp {
	uint32 retcode = 15;
	repeated uint32 eljinbjeael = 3;
	repeated uint32 base_avatar_id_list = 6;
}

// OAMGODOKKCL (1826)
message ReviveRogueAvatarCsReq {
	uint32 base_avatar_id = 9;
	uint32 interacted_prop_entity_id = 8;
	repeated uint32 eljinbjeael = 4;
	repeated uint32 base_avatar_id_list = 5;
}

// GIELPINBFDF (1807)
message ReviveRogueAvatarScRsp {
	RogueReviveInfo revive_info = 7;
	uint32 retcode = 11;
	uint32 base_avatar_id = 1;
	repeated uint32 eljinbjeael = 3;
	repeated uint32 base_avatar_id_list = 5;
	uint32 hogklindolb = 10;
}

// MBODOKFKPLI (1810)
message SyncRogueReviveInfoScNotify {
	RogueReviveInfo revive_info = 2;
}

// FNAGBFFKNLE (1859)
message GetRogueBuffEnhanceInfoCsReq {
}

// PAPLDOAEKNN (1812)
message GetRogueBuffEnhanceInfoScRsp {
	uint32 retcode = 1;
	RogueBuffEnhanceInfoList npbamcnhafj = 7;
}

// DBEPGGDLFOK (1878)
message EnhanceRogueBuffCsReq {
	uint32 maze_buff_id = 10;
}

// JNLKKEGIJON (1829)
message EnhanceRogueBuffScRsp {
	uint32 retcode = 5;
	bool is_succ = 8;
	RogueBuff iileadjpaem = 6;
}

// IHNHDIJMJAD (1876)
message QuitRogueCsReq {
	uint32 kjkpmffamfk = 4;
}

// NFNAIHODBIE (1835)
message QuitRogueScRsp {
	RogueFinishInfo rogue_finish_info = 13;
	RogueInfo rogue_game_info = 3;
	uint32 retcode = 8;
}

// GPIMFJEIIAP (1817)
message SyncRogueExploreWinScNotify {
	bool hppclaodclc = 12;
}

// ENAODGOELIO (1813)
message SyncRogueSeasonFinishScNotify {
	RogueScoreRewardInfo aliiifglpda = 13;
	RogueFinishInfo rogue_finish_info = 5;
	bool belnaehamco = 8;
	LineupInfo lineup = 11;
	SceneInfo scene = 10;
}

// OJODCLNCEDE (1808)
message EnterRogueMapRoomCsReq {
	uint32 lmojjcecokp = 6;
	uint32 room_id = 9;
}

// MNCOPJBHGNF (1818)
message EnterRogueMapRoomScRsp {
	uint32 pcibkdlkimf = 7;
	uint32 retcode = 11;
	SceneInfo scene = 12;
	CHAENBOEBOC kdjlefeaiep = 8;
	LineupInfo lineup = 14;
}

// DFAPLIHGOBH (1879)
message SyncRogueMapRoomScNotify {
	RogueMapInfo chneblikcgp = 12;
	uint32 map_id = 9;
}

// GOOABBBFKPD (1864)
message OpenRogueChestCsReq {
	uint32 interacted_prop_entity_id = 1;
	bool onhhplekhki = 11;
}

// INEBGMGFGOF (1872)
message OpenRogueChestScRsp {
	ItemList reward = 7;
	ItemList ieinoefbllp = 14;
	uint32 retcode = 5;
}

// DDPBCPMBEKK (1899)
message ExchangeRogueRewardKeyCsReq {
	uint32 count = 6;
}

// ExchangeRogueRewardKeyScRsp (1803)
message ExchangeRogueRewardKeyScRsp {
	uint32 retcode = 15;
	uint32 Count = 6;
}

// OLGLGJDCOOO (1849)
message SyncRogueAreaUnlockScNotify {
	uint32 kjkpmffamfk = 2;
}

// PGHKALGBFEK (1870)
message SyncRogueGetItemScNotify {
	ItemList get_item_list = 1;
	ItemList liflidfoacd = 10;
}

// EJHGICDOOFP (1898)
message TakeRogueAeonLevelRewardCsReq {
	uint32 level = 2;
	uint32 aeon_id = 3;
}

// ECBAKLNPNDN (1891)
message TakeRogueAeonLevelRewardScRsp {
	ItemList reward = 14;
	uint32 aeon_id = 13;
	uint32 level = 11;
	uint32 retcode = 1;
}

// CAFJBLFEICN (1856)
message SyncRogueAeonLevelUpRewardScNotify {
	ItemList reward = 2;
	uint32 aeon_id = 4;
	uint32 level = 14;
}

// NEHEDMFJMNP (1809)
message GetRogueScoreRewardInfoCsReq {
}

// FEAPOFOMCMG (1820)
message GetRogueScoreRewardInfoScRsp {
	uint32 retcode = 2;
	RogueScoreRewardInfo lddcaaekfob = 3;
}

// DOLCIKKMHFJ (1853)
message TakeRogueScoreRewardCsReq {
	repeated uint32 kabpbmgimok = 8;
	uint32 fcejjhlcoim = 5;
}

// NBMOJDEEOKG (1890)
message TakeRogueScoreRewardScRsp {
	uint32 retcode = 3;
	uint32 fcejjhlcoim = 13;
	RogueScoreRewardInfo aliiifglpda = 6;
	ItemList reward = 7;
}

// EMOOIAIMHLA (1837)
message GetRogueInitialScoreCsReq {
}

// BEPPPGCPFNA (1811)
message GetRogueInitialScoreScRsp {
	RogueScoreRewardInfo aliiifglpda = 4;
	uint32 retcode = 14;
}

// BAGMNLGBLFK (1886)
message GetRogueAeonInfoCsReq {
}

// CDMBEDANBBN (1866)
message GetRogueAeonInfoScRsp {
	uint32 retcode = 6;
	repeated INIBDHGOMEP aipoefndcbm = 10;
}

// KKKHCDJJLGK (1863)
message FinishAeonDialogueGroupCsReq {
	uint32 aeon_id = 15;
}

// BFEOIJJAFPO (1889)
message FinishAeonDialogueGroupScRsp {
	ItemList reward = 4;
	INIBDHGOMEP ijopankcekj = 2;
	uint32 retcode = 13;
}

// LOHAKINNCHH (1815)
message GetRogueTalentInfoCsReq {
}

// BJFKGHOKIPK (1885)
message GetRogueTalentInfoScRsp {
	uint32 retcode = 2;
	KFDDOFKHKDJ lgofoilnonl = 10;
}

// DJFFLBJDPHH (1862)
message EnableRogueTalentCsReq {
	uint32 talent_id = 1;
}

// NOCEIFOAOPN (1802)
message EnableRogueTalentScRsp {
	uint32 retcode = 11;
	KFDDOFKHKDJ lgofoilnonl = 5;
}

// HNCPKLOACIK (1877)
message SyncRogueVirtualItemInfoScNotify {
	RogueVirtualItemInfo lmpnoceabnh = 13;
}

// LJEPOJCMJHA (1854)
message SyncRogueStatusScNotify {
	KDGNMFLKFLL status = 10;
	bool ledfhapodcl = 12;
}

// JNJJMEEPHPG (1814)
message SyncRogueRewardInfoScNotify {
	RogueScoreRewardInfo aliiifglpda = 13;
}

// BNLANCBBNAK (1851)
message SyncRoguePickAvatarInfoScNotify {
	repeated uint32 eljinbjeael = 13;
	repeated uint32 base_avatar_id_list = 4;
}

// LHBBCEGHOLK (1847)
message SyncRogueAeonScNotify {
	OKGDOHANOLD ojkfmicckfh = 10;
}

// FKNFLIELBIH
enum CmdRogueArcadeType {
	CmdRogueArcadeTypeNone = 0;
	CmdRogueArcadeRestartScRsp = 7699;
	CmdRogueArcadeLeaveScRsp = 7673;
	CmdRogueArcadeStartScRsp = 7700;
	CmdRogueArcadeGetInfoCsReq = 7659;
	CmdRogueArcadeLeaveCsReq = 7680;
	CmdRogueArcadeStartCsReq = 7662;
	CmdRogueArcadeGetInfoScRsp = 7693;
	CmdRogueArcadeRestartCsReq = 7665;
}

message OFJKOLCKPJL {
	SceneInfo scene = 14;
	LineupInfo lineup = 9;
	CHAENBOEBOC kdjlefeaiep = 11;
}

// HCOGPCGEJDI (7662)
message RogueArcadeStartCsReq {
	repeated uint32 base_avatar_id_list = 13;
	uint32 room_id = 4;
}

// EDKOKDJENFH (7700)
message RogueArcadeStartScRsp {
	OFJKOLCKPJL kjbiggihkdp = 6;
	uint32 room_id = 2;
	uint32 retcode = 11;
}

// BBGILOHHHEC (7680)
message RogueArcadeLeaveCsReq {
}

// IHPBCPLLNGH (7673)
message RogueArcadeLeaveScRsp {
	uint32 retcode = 3;
	OFJKOLCKPJL kjbiggihkdp = 9;
}

// CFOHFEOEJIJ (7665)
message RogueArcadeRestartCsReq {
}

// FCCFOJLIGGC (7699)
message RogueArcadeRestartScRsp {
	OFJKOLCKPJL kjbiggihkdp = 14;
	uint32 retcode = 4;
}

// HCOCMLOFMBA (7659)
message RogueArcadeGetInfoCsReq {
}

// EHMGEGMCJCN (7693)
message RogueArcadeGetInfoScRsp {
	uint32 retcode = 14;
	uint32 room_id = 8;
}

// BHEKMDANBNN
enum CmdRogueCommonType {
	CmdRogueCommonTypeNone = 0;
	CmdCommonRogueQueryCsReq = 5664;
	CmdTakeRogueEventHandbookRewardScRsp = 5679;
	CmdBuyRogueShopMiracleScRsp = 5624;
	CmdSyncRogueCommonPendingActionScNotify = 5639;
	CmdRogueNpcDisappearScRsp = 5646;
	CmdTakeRogueMiracleHandbookRewardCsReq = 5618;
	CmdUpdateRogueAdventureRoomScoreCsReq = 5655;
	CmdPrepareRogueAdventureRoomScRsp = 5684;
	CmdGetRogueExhibitionScRsp = 5656;
	CmdCommonRogueComponentUpdateScNotify = 5657;
	CmdSyncRogueCommonVirtualItemInfoScNotify = 5700;
	CmdSyncRogueCommonDialogueDataScNotify = 5683;
	CmdGetRogueCommonDialogueDataCsReq = 5603;
	CmdRogueWorkbenchHandleFuncScRsp = 5670;
	CmdEnhanceCommonRogueBuffCsReq = 5659;
	CmdSelectRogueCommonDialogueOptionCsReq = 5661;
	CmdRogueWorkbenchGetInfoCsReq = 5616;
	CmdRogueDebugMessageScNotify = 5615;
	CmdBuyRogueShopBuffCsReq = 5693;
	CmdUpdateRogueAdventureRoomScoreScRsp = 5622;
	CmdSetRogueExhibitionCsReq = 5609;
	CmdRogueGetGambleInfoScRsp = 5687;
	CmdGetRogueHandbookDataCsReq = 5621;
	CmdRogueWorkbenchGetInfoScRsp = 5647;
	CmdGetRogueAdventureRoomInfoCsReq = 5625;
	CmdGetRogueShopMiracleInfoScRsp = 5667;
	CmdRogueWorkbenchSelectFuncCsReq = 5663;
	CmdRogueWorkbenchHandleFuncCsReq = 5649;
	CmdHandleRogueCommonPendingActionScRsp = 5645;
	CmdGetEnhanceCommonRogueBuffInfoCsReq = 5653;
	CmdSelectRogueCommonDialogueOptionScRsp = 5630;
	CmdHandleRogueCommonPendingActionCsReq = 5660;
	CmdExchangeRogueBuffWithMiracleScRsp = 5607;
	CmdGetEnhanceCommonRogueBuffInfoScRsp = 5690;
	CmdGetRogueHandbookDataScRsp = 5665;
	CmdSyncRogueCommonDialogueOptionFinishScNotify = 5668;
	CmdRogueGetGambleInfoCsReq = 5638;
	CmdGetRogueExhibitionCsReq = 5669;
	CmdFinishRogueCommonDialogueScRsp = 5697;
	CmdSyncRogueHandbookDataUpdateScNotify = 5608;
	CmdCommonRogueQueryScRsp = 5672;
	CmdRogueNpcDisappearCsReq = 5643;
	CmdRogueDoGambleCsReq = 5686;
	CmdGetRogueAdventureRoomInfoScRsp = 5696;
	CmdBuyRogueShopBuffScRsp = 5634;
	CmdSetRogueCollectionCsReq = 5644;
	CmdSyncRogueAdventureRoomInfoScNotify = 5636;
	CmdRogueDoGambleScRsp = 5666;
	CmdSetRogueExhibitionScRsp = 5620;
	CmdPrepareRogueAdventureRoomCsReq = 5695;
	CmdStopRogueAdventureRoomScRsp = 5629;
	CmdStopRogueAdventureRoomCsReq = 5678;
	CmdEnhanceCommonRogueBuffScRsp = 5612;
	CmdBuyRogueShopMiracleCsReq = 5674;
	CmdGetRogueCollectionCsReq = 5698;
	CmdGetRogueShopBuffInfoScRsp = 5652;
	CmdGetRogueCollectionScRsp = 5691;
	CmdGetRogueCommonDialogueDataScRsp = 5640;
	CmdRogueWorkbenchSelectFuncScRsp = 5689;
	CmdSyncRogueCommonActionResultScNotify = 5681;
	CmdSetRogueCollectionScRsp = 5623;
	CmdGetRogueShopBuffInfoCsReq = 5628;
	CmdTakeRogueMiracleHandbookRewardScRsp = 5637;
	CmdFinishRogueCommonDialogueCsReq = 5633;
	CmdTakeRogueEventHandbookRewardCsReq = 5611;
	CmdExchangeRogueBuffWithMiracleCsReq = 5626;
	CmdGetRogueShopMiracleInfoCsReq = 5627;
	CmdCommonRogueUpdateScNotify = 5699;
}

enum OADKAPPEJKG {
	ROGUE_ADVENTURE_ROOM_STATUS_NONE = 0;
	ROGUE_ADVENTURE_ROOM_STATUS_PREPARE = 1;
	ROGUE_ADVENTURE_ROOM_STATUS_STARTED = 2;
	ROGUE_ADVENTURE_ROOM_STATUS_STOPPED = 3;
}

enum KEEOBDAFNLJ {
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_NONE = 0;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_DICE_ROLL = 1;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_AEON = 2;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_BOARD_EVENT = 3;
	ROGUE_COMMON_BUFF_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4;
}

enum PICJAPDOECK {
	ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE = 0;
	ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT = 1;
	ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON = 2;
	ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION = 3;
	ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION = 4;
	ROGUE_UNLOCK_FUNTION_TYPE_TOURN_GOD_MODE = 5;
}

enum OIJNFMCBFJC {
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_NONE = 0;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_DICE_ROLL = 1;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_AEON = 2;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_BOARD_EVENT = 3;
	ROGUE_COMMON_MIRACLE_SELECT_SOURCE_TYPE_LEVEL_MECHANISM = 4;
}

enum GCMGGECDIOJ {
	ROGUE_COMMON_BUFF_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_BUFF_DISPLAY_TYPE_ADD = 1;
	ROGUE_COMMON_BUFF_DISPLAY_TYPE_REMOVE = 2;
}

enum IGOHAIPAGPO {
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_ADD = 1;
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REMOVE = 2;
	ROGUE_COMMON_MIRACLE_DISPLAY_TYPE_REPAIR = 3;
}

enum HPGFJNJAJDG {
	ROGUE_COMMON_ITEM_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_ITEM_DISPLAY_TYPE_ADD = 1;
	ROGUE_COMMON_ITEM_DISPLAY_TYPE_REMOVE = 2;
}

enum FFPMAPKBKML {
	ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_NONE = 0;
	ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_SINGLE = 1;
	ROGUE_COMMON_ACTION_RESULT_DISPLAY_TYPE_MULTI = 2;
}

enum FLKJIFADEDB {
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_NONE = 0;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SELECT = 1;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_ENHANCE = 2;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MIRACLE = 3;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DIALOGUE = 4;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BONUS = 5;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_SHOP = 6;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_DICE = 7;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_AEON = 8;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BOARD_EVENT = 9;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAZE_SKILL = 10;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_LEVEL_MECHANISM = 11;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_BUFF = 12;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_REFORGE = 13;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_COMPOSE = 14;
	ROGUE_COMMON_ACTION_RESULT_SOURCE_TYPE_MAGIC_UNIT_REFORGE = 15;
}

enum HEAEHFOIEGK {
	ROGUE_TALENT_STATUS_LOCK = 0;
	ROGUE_TALENT_STATUS_UNLOCK = 1;
	ROGUE_TALENT_STATUS_ENABLE = 2;
}

enum NMJIPIPDBLN {
	ROGUE_COLLECTION_OPERATE_NONE = 0;
	ROGUE_COLLECTION_OPERATE_SET = 1;
	ROGUE_COLLECTION_OPERATE_UNSET = 2;
}

enum MKNFFJFABCN {
	ROGUE_BOOTH_NONE = 0;
	ROGUE_BOOTH_EMPTY = 1;
	ROGUE_BOOTH_DISPLAY = 2;
}

enum PFJJMIDEBEH {
	ROGUE_COLLECTION_NONE = 0;
	ROGUE_COLLECTION_UNLOCKED = 1;
	ROGUE_COLLECTION_DISPLAY = 2;
}

enum CBCJBGJAKGJ {
	ROGUE_EXHIBITION_NONE = 0;
	ROGUE_EXHIBITION_UNLOCKED = 1;
	ROGUE_EXHIBITION_DISPLAY = 2;
}

enum AMJCKJDMHMG {
	ROGUE_DEBUG_MESSAGE_TYPE_NONE = 0;
	ROGUE_DEBUG_MESSAGE_TYPE_DEBUG = 1;
	ROGUE_DEBUG_MESSAGE_TYPE_INFO = 2;
	ROGUE_DEBUG_MESSAGE_TYPE_WARN = 3;
	ROGUE_DEBUG_MESSAGE_TYPE_ERROR = 4;
}

message RogueCommonBuff {
	uint32 buff_level = 7;
	uint32 buff_id = 11;
}

message ChessRogueBuff {
	repeated RogueCommonBuff buff_list = 3;
}

message RogueCommonBuffSelectInfo {
	uint32 SourceCurCount = 10;
	uint32 SourceTotalCount = 1;
	bool CanRoll = 12;
	uint32 SourceHintId = 11;
	uint32 RollBuffCount = 8;
	uint32 RollBuffMaxCount = 6;
	ItemCostData RollBuffCostData = 4;
	uint32 RollBuffFreeCount = 7;
	uint32 CertainSelectBuffId = 9;
	repeated uint32 HandbookUnlockBuffIdList = 2;
	repeated RogueCommonBuff SelectBuffList = 5;
	KEEOBDAFNLJ SourceType = 15;
	repeated uint32 FirstBuffTypeList = 14;
}

message ODGADHGEGPD {
	uint32 kanfgjbjaec = 4;
}

message PHPIBBBICJH {
}

message GBMLHMCDPBP {
}

message NLGKLJMCKJI {
	RogueCommonBuffSelectInfo nemhmhfoloa = 2;
}

message IDNDFHBDJBE {
	uint32 buff_id = 12;
	ItemCostData cost_data = 10;
}

message CFANNKOKNCA {
	repeated IDNDFHBDJBE lebaaijchoh = 13;
}

message CNDKKPMOILG {
	repeated RogueCommonBuff fcmlpecgmkh = 8;
	repeated RogueCommonBuff jleahlnobnd = 14;
	uint32 select_hint_id = 3;
}

message EPCHDIJLFCC {
	uint32 select_hint_id = 9;
	repeated RogueCommonBuff jleahlnobnd = 2;
}

message EEPPFEODLPN {
	uint32 gnenemdhbhe = 14;
}

message GOIFEOIBPEG {
}

message PLFJJDAEMCO {
	uint32 select_hint_id = 5;
	repeated RogueCommonBuff ihllemfcbcc = 9;
}

message GHJMKHCAPLE {
	uint32 kanfgjbjaec = 7;
}

message EADHAPHKOGD {
}

message DHKJEJGGNOI {
	repeated RogueCommonBuff hgalbeelddd = 13;
	uint32 select_hint_id = 12;
}

message MLNLEPKOFDB {
	uint32 kanfgjbjaec = 12;
}

message NEHJEOBGHPC {
}

message EAAMMPJFKIB {
	ChessRogueBuff hnebbkenpnp = 3;
}

message IBJMINGEPGN {
	uint32 cur_times = 13;
	map<uint32, uint32> eebncinfdmb = 5;
	uint32 miracle_id = 4;
	uint32 jloijknceam = 15;
}

message GJECGAOKFAA {
	bool plgibhocdgp = 9;
	IBJMINGEPGN mfejcmlaboj = 7;
	uint32 ommldpoomeg = 5;
}

message BGPBGJPKPOB {
	IBJMINGEPGN bpgeldjgkgj = 4;
}

message GPCDJOAONAJ {
	uint32 miracle_id = 11;
}

message IGLBMOEBKJF {
	uint32 fgmocmegann = 9;
	IBJMINGEPGN bpgeldjgkgj = 14;
}

message ONFBPLEPJJA {
	IBJMINGEPGN bpgeldjgkgj = 11;
}

message NGNGNOJJHGF {
	uint32 ommldpoomeg = 10;
	IBJMINGEPGN mfejcmlaboj = 14;
}

message DBEBNMKMHAN {
	IBJMINGEPGN bpgeldjgkgj = 11;
}

message BKLLPGCEECM {
	repeated IBJMINGEPGN miracle_list = 6;
}

message OKKAKMHNPLK {
	repeated uint32 mlalnfgmgke = 5;
	repeated uint32 miracle_handbook_list = 13;
	uint32 select_hint_id = 15;
}

message IDDEDGOENKP {
	uint32 njjkphhigci = 14;
}

message MEOPDLNGIEI {
}

message LJLCHOEHGPE {
	repeated uint32 iogngoniiep = 8;
}

message MJECKLDALOL {
	repeated uint32 fajofpmmjmc = 5;
	uint32 select_hint_id = 8;
}

message LOMNOALJIAN {
	uint32 bmpkebpmfgc = 3;
}

message NMLDGHKCKGP {
}

message NABFAFAKJBH {
	uint32 select_hint_id = 6;
	repeated uint32 eamjadlajoa = 3;
}

message KMPOHDALDHA {
	uint32 cmpeakhpjpo = 8;
}

message MEIMJCGKOOO {
}

message BBKMOPPLBEP {
	repeated uint32 mmeieogmoeg = 5;
	uint32 select_hint_id = 1;
}

message DFAFNDLFBLF {
	uint32 oeopbhmlndl = 11;
}

message GFMIABFJFIH {
}

message POODPJEIPOM {
	repeated uint32 kkcffejoebj = 11;
	uint32 select_hint_id = 7;
}

message ANGDGEIHHPG {
	uint32 fpoalgnogbf = 2;
}

message EFEIEKOICCJ {
}

message AMGLLIELKEF {
	uint32 select_hint_id = 15;
	repeated uint32 pamapagbbjf = 13;
}

message LOBLGOHDMAF {
	uint32 njjkphhigci = 3;
}

message OBNMHGOMLLM {
}

message MGPDLCDDBCB {
	repeated uint32 pamapagbbjf = 10;
	uint32 select_hint_id = 15;
}

message IAOHGLNLNHM {
	uint32 njjkphhigci = 1;
}

message CHPBCNADMAM {
}

message NOEIGMCEGOI {
	uint32 gnhndidcami = 5;
}

message BGOCBECHHEB {
}

message GFMELEMCJNA {
	BKLLPGCEECM hlkakjhdfpc = 5;
}

message IFEFOFLJNML {
	repeated uint32 lokhiihcfec = 6;
}

message BLIMEDCMHMN {
	uint32 khmnkdaahae = 4;
	uint32 lapkefiaale = 9;
	uint32 mpnjdflkced = 13;
	uint32 laicmbgpjfc = 15;
}

message ALENDKFOAJH {
	uint32 knpgfikpmfc = 6;
	uint32 num = 12;
}

message PDKPLLPFAGH {
	AvatarType avatar_type = 14;
	uint32 avatar_id = 10;
}

message RogueSyncContextBoardEvent {
	uint32 ModifierEffectType = 10;
	uint32 BoardEventId = 2;
}

message EHDLILNCHIP {
	ItemList item_list = 9;
}

message LPOOPBGNGLD {
	EHDLILNCHIP nbeiknagdpj = 5;
	RogueSyncContextBoardEvent bgicmiboiil = 15;
}

message AHNKHFFEAOE {
}

message JHPOMFGMBJE {
	int32 count = 7;
}

message GJMODKBMMLC {
	uint32 miracle_id = 5;
}

message FCDKEBOHBFC {
}

message RogueAdventureRoomGameplayWolfGunTarget {
	oneof targetImplCase_ {
		AHNKHFFEAOE TargetNone = 12;
		JHPOMFGMBJE TargetCoin = 1;
		GJMODKBMMLC TargetMiracle = 10;
		FCDKEBOHBFC TargetRuanmei = 15;
	}
}

message BMBPBHMOABJ {
	uint32 ljcckmkcjhh = 2;
	repeated RogueAdventureRoomGameplayWolfGunTarget battle_target_list = 10;
}

message GDBIEMNFEBD {
	oneof info_case {
		BMBPBHMOABJ ggkpilogemk = 14;
	}
}

message KMHADINCFOC {
	uint32 monmadbkako = 6;
	GDBIEMNFEBD hfgddeokcdg = 13;
	uint32 score_id = 3;
	double dheejefhjhd = 15;
	uint32 kngnokpaefc = 8;
	uint32 status = 11;
}

// MDHFGAIOEBP (5636)
message SyncRogueAdventureRoomInfoScNotify {
	KMHADINCFOC ggajgdededh = 2;
}

// BCEBGCMFHBL (5695)
message PrepareRogueAdventureRoomCsReq {
}

// JJMOMOCDJIN (5684)
message PrepareRogueAdventureRoomScRsp {
	uint32 retcode = 14;
	KMHADINCFOC ggajgdededh = 13;
}

// GGHHBPFEJIL (5678)
message StopRogueAdventureRoomCsReq {
	uint32 najdbeddkpl = 2;
	repeated uint32 fpbhkpdnbii = 7;
}

// HIHCHEFEGLN (5629)
message StopRogueAdventureRoomScRsp {
	uint32 retcode = 13;
	KMHADINCFOC ggajgdededh = 14;
}

// JJHAFDMKJAH (5625)
message GetRogueAdventureRoomInfoCsReq {
}

// AMOHEPEPHJK (5696)
message GetRogueAdventureRoomInfoScRsp {
	uint32 retcode = 11;
	KMHADINCFOC ggajgdededh = 13;
}

// KHHDHGAJLFL (5655)
message UpdateRogueAdventureRoomScoreCsReq {
	uint32 dpokcfkndig = 4;
	uint32 score_id = 2;
}

// CHNALEHJHIG (5622)
message UpdateRogueAdventureRoomScoreScRsp {
	uint32 retcode = 10;
	KMHADINCFOC ggajgdededh = 8;
}

message JMBHANNDICG {
	ItemCostData cost_data = 3;
	ItemCostData olhbjhgjnnl = 12;
	bool acdebpiglna = 9;
	uint32 miracle_id = 1;
	bool migbcikndfl = 11;
}

message KMIAKMOGMEI {
	uint32 pmhpllpnoec = 6;
	ItemCostData olhbjhgjnnl = 14;
	bool acdebpiglna = 8;
	ItemCostData cost_data = 7;
	uint32 buff_id = 9;
	bool migbcikndfl = 2;
}

message BEEMLAMLJEJ {
	repeated JMBHANNDICG miracle_list = 6;
}

message HKECICAPIII {
	repeated KMIAKMOGMEI buff_list = 3;
}

// GIONJMDBDLO (5628)
message GetRogueShopBuffInfoCsReq {
	bool elnccecchmg = 15;
	uint32 interacted_prop_entity_id = 5;
}

// DLOJJEOFHBH (5652)
message GetRogueShopBuffInfoScRsp {
	ItemCostData aoegljjmhop = 9;
	HKECICAPIII rogue_buff_info = 1;
	uint32 retcode = 15;
	bool ppjfbjmdiie = 5;
}

// OEFMFCFBFJO (5627)
message GetRogueShopMiracleInfoCsReq {
	bool elnccecchmg = 7;
	uint32 interacted_prop_entity_id = 4;
}

// BGLIIOFIBHP (5667)
message GetRogueShopMiracleInfoScRsp {
	bool ppjfbjmdiie = 7;
	BEEMLAMLJEJ game_miracle_info = 6;
	ItemCostData aoegljjmhop = 4;
	uint32 retcode = 3;
}

message NGCBABPKAKB {
	uint32 interacted_prop_entity_id = 9;
	uint32 miracle_id = 13;
}

// DIEDKIIGKNK (5674)
message BuyRogueShopMiracleCsReq {
	uint32 interacted_prop_entity_id = 3;
	repeated uint32 buff_id_list = 8;
}

// PAOHONNKLNA (5624)
message BuyRogueShopMiracleScRsp {
	BEEMLAMLJEJ game_miracle_info = 15;
	uint32 retcode = 3;
}

// LLPPDEAMJKD (5634)
message BuyRogueShopBuffScRsp {
	uint32 retcode = 13;
	HKECICAPIII rogue_buff_info = 4;
}

// DDPMCFKJINJ (5626)
message ExchangeRogueBuffWithMiracleCsReq {
	uint32 interacted_prop_entity_id = 5;
	uint32 miracle_id = 8;
}

// JFGHGEEIMIH (5607)
message ExchangeRogueBuffWithMiracleScRsp {
	uint32 retcode = 10;
	RogueCommonBuff jlbkiechnbh = 1;
}

// MNHCGMEFKKD (5643)
message RogueNpcDisappearCsReq {
	uint32 oeopaonkghk = 14;
}

// EDONFKCDCEE (5646)
message RogueNpcDisappearScRsp {
	uint32 retcode = 6;
}

// FPNNPADHOCM (5659)
message EnhanceCommonRogueBuffCsReq {
	uint32 maze_buff_id = 15;
	uint32 interacted_prop_entity_id = 3;
}

// IGJBGIBIGFN (5612)
message EnhanceCommonRogueBuffScRsp {
	RogueCommonBuff iileadjpaem = 14;
	uint32 retcode = 10;
	bool is_succ = 8;
}

// LGPFIFBDJBP (5653)
message GetEnhanceCommonRogueBuffInfoCsReq {
	uint32 interacted_prop_entity_id = 7;
}

// GetEnhanceCommonRogueBuffInfoScRsp (5690)
message GetEnhanceCommonRogueBuffInfoScRsp {
	uint32 retcode = 3;
	repeated uint32 EnhancedBuffIdList = 15;
}

// HDOMHIBKDAN (5681)
message SyncRogueCommonActionResultScNotify {
	repeated GFJNOJLDKGD nnjpjhjbbch = 10;
	uint32 nkpdmckfppp = 5;
	FFPMAPKBKML knpgfikpmfc = 3;
}

message GFJNOJLDKGD {
	AAIKKEGJJOO jgmnmdafjke = 12;
	FLKJIFADEDB source = 14;
}

message HIDIBJJAOJN {
	uint32 key = 9;
	int32 phfllpmpmnh = 3;
}

message NOLHMEAMPAB {
	repeated HIDIBJJAOJN aaeckehlnen = 9;
	uint32 formula_id = 15;
	bool mbaipcchdci = 12;
}

message LECLNNBLPHC {
	map<uint32, int32> abghhlggkik = 13;
}

message OOEMGAIDAAN {
	NOLHMEAMPAB hoinnilnheb = 10;
}

message AMEPABDIPIO {
	NOLHMEAMPAB hoinnilnheb = 2;
}

message CHGDLEHJBFI {
	NOLHMEAMPAB hoinnilnheb = 13;
}

message EMMMIFCLONE {
	NOLHMEAMPAB hoinnilnheb = 1;
}

message MAJBCDFADLI {
	LECLNNBLPHC value = 12;
}

message OMJCICFMBEH {
	repeated NOLHMEAMPAB idihemiednb = 12;
	LECLNNBLPHC iengpcnjdkm = 5;
}

message HIDEGCMNFKC {
	uint32 mhpooooiohd = 5;
}

message FCKAIEIDBJO {
	uint32 mhpooooiohd = 2;
}

message FANHHMLOGPI {
	map<uint32, bool> adkambbjndi = 1;
}

message AAIKKEGJJOO {
	oneof info_case {
		ALENDKFOAJH ejdepkeaoli = 6;
		ALENDKFOAJH cckalcbjnhi = 11;
		RogueCommonBuff get_buff_list = 1069;
		RogueCommonBuff jgedahnkogm = 692;
		BGPBGJPKPOB cgkigaobbej = 580;
		GPCDJOAONAJ bcogpmadmmj = 1581;
		IGLBMOEBKJF lhfdiebcljd = 1976;
		ONFBPLEPJJA jmkbcjhfdcn = 1155;
		NGNGNOJJHGF angkgkhhhop = 1862;
		DBEBNMKMHAN lcmohgdidjo = 49;
		PDKPLLPFAGH nndndfineck = 688;
		OOEMGAIDAAN difldnonoan = 1371;
		AMEPABDIPIO epllhncfmjf = 154;
		CHGDLEHJBFI clgjpppliif = 887;
		EMMMIFCLONE ndebjhfhfnf = 570;
		MAJBCDFADLI ldfblmifmln = 1021;
		HIDEGCMNFKC ocolnpkhpmo = 99;
		FCKAIEIDBJO nppomcpppic = 173;
		FBBEILGMEFP cmhfcgofkfg = 1376;
		NNMBLEJFEHH fgmbfdccmik = 1493;
		GAGFNEONPOM aibdohnjbdm = 332;
		OOKFHBFLPEB fgnhnkcnpnd = 563;
		OOKFHBFLPEB pdgeojpbpij = 1985;
		OOKFHBFLPEB bodlmenokll = 1847;
		DBKPLONPCHJ epbegeaiihn = 822;
		FFPNGIAFAEA hhohkbfjjap = 1363;
	}
}

message RogueFormulaSelectInfo {
	uint32 HintId = 5;
	uint32 RollFormulaMaxCount = 2;
	bool CanRoll = 8;
	uint32 RollFormulaCount = 1;
	uint32 RollFormulaFreeCount = 11;
	ItemCostData RollFormulaCostData = 13;
	repeated uint32 SelectFormulaIdList = 9;
	repeated uint32 HandbookUnlockFormulaIdList = 6;
}

message JCEDKLHEEJI {
	uint32 ipbdjpopjdo = 5;
}

message AHEHGEPOKOG {
}

message MEAOBGAGCBP {
	repeated uint32 menfageobgi = 13;
	uint32 select_hint_id = 1;
}

message JEPHNACILDJ {
	uint32 ipbdjpopjdo = 6;
}

message JDMPBBDAKEJ {
}

message LKOEBDLAAOO {
}

message DMODDCHONNG {
	RogueFormulaSelectInfo abjgbmelghm = 7;
}

message PNAPDEOOIMO {
	RogueFormulaSelectInfo abjgbmelghm = 6;
}

message DCLCNFBOOKH {
	uint32 ipbdjpopjdo = 4;
}

message CJBBLJMEGID {
}

message AFLBELCPOMC {
	uint32 fchmhgfcjfg = 2;
}

message DECHFLECCDM {
	uint32 iofeedemhko = 6;
	uint32 slot = 1;
	uint32 type = 13;
}

message IAMINGHLBDJ {
	uint32 level = 12;
	uint32 scepter_id = 2;
}

message DBKPLONPCHJ {
	repeated AAKGCJPOJDF pmmnaigcbeo = 14;
	repeated DECHFLECCDM odangogedca = 1;
	IAMINGHLBDJ bgfhgkmpfnh = 5;
	map<uint32, uint32> trench_count = 7;
}

message AAKGCJPOJDF {
	uint32 level = 10;
	uint32 magic_unit_id = 9;
}

message OOKFHBFLPEB {
	AAKGCJPOJDF cfjmobmclbi = 4;
	uint32 unique_id = 14;
}

message FBBEILGMEFP {
	DBKPLONPCHJ cihhdlnpaln = 1;
}

message NNMBLEJFEHH {
	DBKPLONPCHJ cihhdlnpaln = 7;
}

message GAGFNEONPOM {
	DBKPLONPCHJ cihhdlnpaln = 1;
}

message PGMNMGOKHIG {
	OOKFHBFLPEB ekgnfjonkml = 6;
}

message BKBKILCCNGC {
	OOKFHBFLPEB jialocpokfj = 15;
}

message HDAFNKCLLOL {
	uint32 nngafmpjbnb = 12;
	repeated AAKGCJPOJDF gdphcdoehlb = 2;
	uint32 hbgefombgad = 1;
	AAKGCJPOJDF aobagedoinn = 9;
	uint32 select_hint_id = 8;
}

message BLBALBLMNHF {
	repeated OOKFHBFLPEB gdphcdoehlb = 1;
	uint32 select_hint_id = 2;
}

message IGKLJMIEAIJ {
	AAKGCJPOJDF iflnonnbbck = 10;
}

message LDBCELODHMC {
	OOKFHBFLPEB iflnonnbbck = 11;
}

message LNMAIMBKDMD {
}

message PCMDGMJGIFO {
}

message GKNHNCDPMLN {
}

message FHOENKJOPIK {
}

message FFPNGIAFAEA {
	OOKFHBFLPEB pabncehfipl = 4;
	repeated uint32 mfnldjahpje = 11;
}

message PGOOGPIPEDJ {
	uint32 select_hint_id = 8;
	repeated IAMINGHLBDJ amhffamcgnn = 12;
}

message DNNIABNANIA {
	IAMINGHLBDJ lmcpchmpjbp = 11;
	bool nomcgdfjmai = 12;
}

message KBGOKEFOEFD {
}

message JLMDLKMKPEM {
}

message NBNJNEMFNJJ {
	IAMINGHLBDJ makghkojddl = 1;
}

message CHBGHLCIELJ {
	IAMINGHLBDJ anbiefamcan = 2;
	bool aabmlmegojc = 15;
}

message EKMEOLCFFDA {
}

message CIAGAEFNFNI {
	uint32 event_unique_id = 13;
}

message HLGLPHAPMCL {
	bool is_win = 5;
	uint32 battle_event_id = 14;
}

message HGNCCBHGKME {
	uint32 event_unique_id = 1;
}

// GBFKPHNAGFE (5639)
message SyncRogueCommonPendingActionScNotify {
	uint32 nkpdmckfppp = 14;
	DEFIBAENEFF boamjekjjle = 15;
}

message DEFIBAENEFF {
	uint32 fhopjnkmnpb = 5;
	FDEMONEGBII jgmnmdafjke = 10;
}

message FDEMONEGBII {
	oneof info_case {
		RogueCommonBuffSelectInfo nemhmhfoloa = 693;
		EPCHDIJLFCC kdgcimnghab = 862;
		PLFJJDAEMCO lgemaenmhnd = 447;
		DHKJEJGGNOI naphkfhdagp = 1765;
		OKKAKMHNPLK jjfmedlbogi = 1092;
		LJLCHOEHGPE mehhnaiihpl = 1083;
		MJECKLDALOL ddbbbecjpcg = 1330;
		NABFAFAKJBH ponchmeecoa = 96;
		BBKMOPPLBEP aibipofhgee = 735;
		POODPJEIPOM dgnnihbfmhj = 1390;
		AMGLLIELKEF hkpbaamjkfl = 646;
		MGPDLCDDBCB dlpelppmgkc = 762;
		IFEFOFLJNML gafafknadag = 1270;
		RogueFormulaSelectInfo abjgbmelghm = 1372;
		MEAOBGAGCBP ngadllokkcm = 1264;
		PNAPDEOOIMO blolfkeojep = 1376;
		HDAFNKCLLOL bijhchjpipl = 1682;
		PGOOGPIPEDJ obndbhfeeoh = 1971;
		NBNJNEMFNJJ lfbdkadlooo = 1129;
		HDAFNKCLLOL chmlbdeocpn = 654;
		HDAFNKCLLOL llhghnhajgd = 416;
		HDAFNKCLLOL hjpbjhkfeeb = 94;
		BLBALBLMNHF hkaifndcloe = 371;
		BLBALBLMNHF aobjjgabphe = 359;
		BLBALBLMNHF goikbmgmacb = 1813;
		CIAGAEFNFNI djgfkgbbhgc = 1604;
	}
}

// BHPNEJPDKLL (5660)
message HandleRogueCommonPendingActionCsReq {
	oneof info_case {
		ODGADHGEGPD mebmdeggldb = 1158;
		EEPPFEODLPN aecoknofgpo = 1990;
		GHJMKHCAPLE iabmlahdafo = 1546;
		GBMLHMCDPBP hcigfcppglb = 868;
		MLNLEPKOFDB mjfbfeacpbf = 1486;
		IDDEDGOENKP fmoffmkngik = 144;
		LOMNOALJIAN bjpjgljfcle = 329;
		KMPOHDALDHA adnljefpdga = 1388;
		DFAFNDLFBLF nmfpjhlahel = 220;
		ANGDGEIHHPG kjbfifomgdo = 425;
		LOBLGOHDMAF dpjcfbfcngf = 1680;
		IAOHGLNLNHM hibihiadoad = 69;
		NOEIGMCEGOI glgfadaibcf = 714;
		JCEDKLHEEJI hdngljedjam = 1893;
		LKOEBDLAAOO ejmlopfgjhm = 1409;
		JEPHNACILDJ mhigcbbgdpb = 1796;
		DCLCNFBOOKH mbjehcbgkfi = 1738;
		IGKLJMIEAIJ gimccaneodd = 1860;
		DNNIABNANIA aeffimiheje = 1639;
		CHBGHLCIELJ dnfgmfjando = 1012;
		IGKLJMIEAIJ agfbkjfdedn = 1479;
		IGKLJMIEAIJ oeabhoacgmp = 1723;
		IGKLJMIEAIJ hdiodgbgmfi = 1060;
		LDBCELODHMC oihfpkgljpp = 1560;
		LDBCELODHMC lihjgjnlalb = 214;
		LDBCELODHMC aggeokjmhmn = 1066;
		AFLBELCPOMC jamfeigfcma = 512;
		HLGLPHAPMCL kmmnaoinbnp = 112471;
		HGNCCBHGKME mffnlcjjjid = 99577;
	}
	uint32 LODFDJGPEMN = 13;
}

// GODMDHLPBLL (5645)
message HandleRogueCommonPendingActionScRsp {
	oneof info_case {
		PHPIBBBICJH jjdplecbajf = 330;
		GOIFEOIBPEG ohlglcipjpl = 1165;
		EADHAPHKOGD aopeopnlimi = 632;
		NLGKLJMCKJI ajhphdnjbkk = 607;
		NEHJEOBGHPC ekbehdkfmce = 658;
		MEOPDLNGIEI egckkhcnbbb = 555;
		NMLDGHKCKGP baacaloodpb = 485;
		MEIMJCGKOOO gbglakcigfe = 85;
		GFMIABFJFIH becipbiaaec = 864;
		EFEIEKOICCJ ommlcopcfjb = 888;
		OBNMHGOMLLM mjoonnbdkoa = 905;
		CHPBCNADMAM edkgldkaepg = 2033;
		BGOCBECHHEB ebmgibbidhd = 369;
		AHEHGEPOKOG ienpeagjikp = 453;
		DMODDCHONNG daoijbdfeed = 471;
		JDMPBBDAKEJ eondldklnmp = 2036;
		CJBBLJMEGID dcmfbcppmkm = 370;
		LNMAIMBKDMD kgnbinbghkh = 729;
		KBGOKEFOEFD fdoakcamhno = 142;
		EKMEOLCFFDA okcgifdpleo = 863;
		PCMDGMJGIFO jebknpibfce = 1796;
		GKNHNCDPMLN bgfnndhdble = 1383;
		FHOENKJOPIK fmcfhnfkefg = 1974;
		JLMDLKMKPEM dlhgdkljood = 1678;
	}
	uint32 LODFDJGPEMN = 1;
	uint32 retcode = 14;
	uint32 FHOPJNKMNPB = 11;
}

message CEJLMKNDFPM {
	uint32 maze_buff_id = 8;
}

message BFLIMEGCDIN {
	bool ahffgclfffi = 12;
	uint32 aohjimphjif = 1;
}

message LOCCIAJBHEE {
	bool ahffgclfffi = 15;
	uint32 ladoionempd = 4;
}

message JOIEMKPMMGN {
	uint32 aeon_id = 12;
	uint32 eecemipjjgh = 14;
	uint32 exp = 13;
	repeated uint32 opgbkmppjmp = 7;
	uint32 level = 15;
	repeated uint32 bocjbbdemfi = 8;
}

message JBGNJNJEOIL {
	IAMINGHLBDJ mobjjpmiaab = 11;
}

message AFCBFFDAHEB {
	uint32 meoonfgocdh = 10;
	uint32 magic_unit_id = 3;
}

message NPPDODOIOED {
	repeated LOCCIAJBHEE jpgocegdlol = 3;
	repeated CEJLMKNDFPM buff_list = 7;
	repeated JOIEMKPMMGN aipoefndcbm = 11;
	repeated BFLIMEGCDIN miracle_list = 9;
}

// IOEHIHAAGIF (5621)
message GetRogueHandbookDataCsReq {
}

// GetRogueHandbookDataScRsp (5665)
message GetRogueHandbookDataScRsp {
	uint32 retcode = 1;
	NPPDODOIOED HandbookInfo = 14;
}

// EDCKDPDHFFJ (5608)
message SyncRogueHandbookDataUpdateScNotify {
	repeated LOCCIAJBHEE geehfpkamjo = 8;
	repeated BFLIMEGCDIN nbjbajgpfkk = 6;
	repeated JBGNJNJEOIL boioigdhnnj = 9;
	repeated CEJLMKNDFPM jojbdjhnahk = 7;
	repeated AFCBFFDAHEB lmmhcdenlmh = 12;
}

// HMIFEMPGMDC (5618)
message TakeRogueMiracleHandbookRewardCsReq {
	repeated uint32 cofoaclbnfl = 10;
}

// CHOEIJEPBBC (5637)
message TakeRogueMiracleHandbookRewardScRsp {
	uint32 retcode = 2;
	repeated uint32 bggonigegkm = 12;
	ItemList reward = 5;
}

// JNPMJEGDDNL (5611)
message TakeRogueEventHandbookRewardCsReq {
	repeated uint32 accpehfpkab = 4;
}

// DOEJEEHNBCF (5679)
message TakeRogueEventHandbookRewardScRsp {
	uint32 retcode = 3;
	ItemList reward = 13;
	repeated uint32 gkmfiajmnlm = 11;
}

message MJJAIIIDPPD {
	map<uint32, uint32> oibidbhlpem = 2;
}

message DLIJGIEGJKP {
	uint32 game_aeon_id = 14;
	EBOIOIKFLFJ oakngnkalpi = 3;
	int32 hhdabofomec = 7;
}

message NMJNDPHGIOF {
	repeated uint32 hdagdlocpfi = 9;
}

message BFEJLAJIPNG {
	repeated uint32 avatar_id_list = 11;
	ItemCostData rogue_revive_cost = 8;
}

message IDONDCHFKHG {
	oneof FDAKMDPLIOJ {
		EAAMMPJFKIB rogue_buff_info = 6;
		GFMELEMCJNA game_miracle_info = 15;
		MJJAIIIDPPD gjfhlpnajee = 10;
		DLIJGIEGJKP ijopankcekj = 2;
		NMJNDPHGIOF mmohllkalak = 9;
		OMJCICFMBEH lnphkafmefm = 5;
		FANHHMLOGPI ngomjkioakc = 4;
		BFEJLAJIPNG eelbepmnpgi = 14;
	}
}

message NMLFCCIFNOP {
	uint32 nkpdmckfppp = 5;
	repeated IDONDCHFKHG hcoapfagbei = 3;
	uint32 pinognekcah = 2;
	uint32 rogue_magic_battle_const = 11;
	uint32 djffjgbnmmk = 12;
}

message RogueUnlockProgress {
	bool Finish = 10;
	uint32 progress = 6;
	uint32 UnlockId = 14;
}

message ADDHMOAPICA {
	repeated RogueUnlockProgress pkjkkbechka = 4;
	HEAEHFOIEGK status = 15;
	uint32 talent_id = 12;
}

message KFDDOFKHKDJ {
	repeated ADDHMOAPICA cjoalacjeic = 6;
}

message JIBBDCKPCBJ {
	uint32 jdphkcgcdag = 8;
	uint32 gfhkpieflkm = 3;
}

// LPBEEGBKNFH (5700)
message SyncRogueCommonVirtualItemInfoScNotify {
	repeated JIBBDCKPCBJ pkkhfdajnec = 13;
}

message ELAFKBOPNIG {
	uint32 amjafadnahj = 8;
	uint32 cnlhkekemhf = 15;
	uint32 jpagdckadna = 7;
}

message NFCIPKJACMC {
	repeated PICJAPDOECK pplkdhpnmog = 8;
}

message BBIELDAHLAF {
	ELAFKBOPNIG fmmeoiaoend = 14;
	NFCIPKJACMC pajlkkdofme = 7;
}

// DBHIKLODHKG (5664)
message CommonRogueQueryCsReq {
}

// FDENABFNDJF (5672)
message CommonRogueQueryScRsp {
	uint32 fnkgaejjbbi = 7;
	uint32 retcode = 3;
	BBIELDAHLAF rogue_get_info = 6;
}

// OIKJJEAMNJO (5699)
message CommonRogueUpdateScNotify {
	oneof CLMBLKDAJHB {
		ELAFKBOPNIG fmmeoiaoend = 4;
		NFCIPKJACMC pajlkkdofme = 14;
	}
}

message IMAMAOLHJNC {
	uint32 talk_dialogue_id = 12;
	uint32 aeon_talk_id = 2;
}

message HPFNNOKPDPF {
	uint32 jnolagajcle = 6;
}

message JPIEFMHGAJL {
	uint32 jnolagajcle = 5;
}

message FDLBEOALEIL {
	uint32 formula_id = 11;
}

message HLDINEHNOML {
	uint32 jnolagajcle = 6;
}

message JLJJJICCIDG {
	uint32 lmjaeipjaom = 4;
}

message NADHCNJHLDA {
	oneof DCDBFMCEBPI {
		IMAMAOLHJNC jkcjboklofk = 5;
		HPFNNOKPDPF gdbkcodhefm = 4;
		JPIEFMHGAJL jfeplakjgbd = 15;
		FDLBEOALEIL gkojbnmdnhi = 7;
		HLDINEHNOML eaofcfhmkag = 13;
		JLJJJICCIDG bdbafjlihja = 8;
	}
}

message DGJGFBLBFPE {
	float obbacaejnmk = 3;
	int32 dhohjklfmmc = 10;
}

message FCGKPCKCJEH {
	uint32 battle_event_id = 6;
}

message GIHFGGMCHKA {
	int32 nmkmfbocbfl = 2;
}

message NNPAOMCBANA {
	oneof LMJLBPFLJPF {
		FCGKPCKCJEH gldgcnmlodl = 7;
		GIHFGGMCHKA jdbfocmjmjd = 9;
	}
}

message IPBDJPAJODO {
	DGJGFBLBFPE cgnkhekhiml = 10;
	uint32 cjbdahmahkn = 3;
	repeated NNPAOMCBANA bkpkcjjkmmj = 7;
	bool dpkmepaahin = 5;
	bool confirm = 14;
	uint32 arg_id = 2;
}

message DOKFNAEEADE {
	NADHCNJHLDA onecnikgbgl = 8;
	repeated IPBDJPAJODO mchonaccdme = 9;
	uint32 event_unique_id = 13;
}

// JOACELLIPLM (5603)
message GetRogueCommonDialogueDataCsReq {
}

// HJMNCHNCMFJ (5640)
message GetRogueCommonDialogueDataScRsp {
	repeated DOKFNAEEADE ofkghjchehe = 1;
	uint32 retcode = 7;
}

// PBHAONCEFLH (5661)
message SelectRogueCommonDialogueOptionCsReq {
	uint32 event_unique_id = 10;
	uint32 cjbdahmahkn = 5;
}

// HFOIPAAEIAF (5630)
message SelectRogueCommonDialogueOptionScRsp {
	uint32 cjbdahmahkn = 15;
	uint32 retcode = 4;
	repeated uint32 aplhhajibep = 1;
	DOKFNAEEADE hkpckplepol = 6;
	bool kjlfhopkppa = 5;
	uint32 event_unique_id = 3;
}

// BOFFLADEMCL (5633)
message FinishRogueCommonDialogueCsReq {
	uint32 event_unique_id = 4;
}

// EBDLFEDDCAL (5697)
message FinishRogueCommonDialogueScRsp {
	uint32 event_unique_id = 13;
	uint32 retcode = 7;
}

// MPCNKBDGLBE (5683)
message SyncRogueCommonDialogueDataScNotify {
	repeated DOKFNAEEADE ofkghjchehe = 9;
}

// HKGANFGLKGC (5668)
message SyncRogueCommonDialogueOptionFinishScNotify {
	uint32 cjbdahmahkn = 3;
	IPBDJPAJODO dnjddnocbfk = 7;
	uint32 event_unique_id = 14;
	DOKFNAEEADE hkpckplepol = 5;
}

// KNKAFCLFMHK (5657)
message CommonRogueComponentUpdateScNotify {
	uint32 nkpdmckfppp = 8;
	uint32 pinognekcah = 2;
	IDONDCHFKHG jmocnngmedg = 10;
	uint32 rogue_magic_battle_const = 5;
}

message HAHBDLFOBHB {
	uint32 djffjgbnmmk = 6;
	DEFIBAENEFF lcfanolipij = 12;
	uint32 pinognekcah = 7;
	uint32 rogue_magic_battle_const = 9;
	uint32 nkpdmckfppp = 10;
}

// HFICLNKIPLF (5663)
message RogueWorkbenchSelectFuncCsReq {
	uint32 prop_entity_id = 11;
	uint32 cbahfgpjemp = 7;
}

// HBHAPMDNBGB (5689)
message RogueWorkbenchSelectFuncScRsp {
	uint32 retcode = 9;
	uint32 cbahfgpjemp = 7;
	IIGDKLANFDC lipngbcpgon = 1;
}

// HNNIDKIKCAM (5616)
message RogueWorkbenchGetInfoCsReq {
	uint32 prop_entity_id = 14;
}

// AGGLMODAAFD (5647)
message RogueWorkbenchGetInfoScRsp {
	uint32 retcode = 9;
	map<uint32, IIGDKLANFDC> gdgcpemfknf = 6;
}

message IIGDKLANFDC {
	oneof JOKDBFJANOO {
		DHBMIPDEJMD klnibefplcl = 5;
		KDOPKHGLNBP ajpkmohnmhc = 15;
		GELDJPFIBFM fejjpbccjfd = 2;
		PCELNBJLFPN gdnalenilei = 13;
		OMEKMJONKPN iopggonmnnl = 12;
		GNLGJJFNHND mobjjpmiaab = 1;
		EMAKAJDAFKP cfjmobmclbi = 14;
		FCMHGHPOCFA glcgkninaog = 11;
		EFINDLMBMBF jeoejadogdf = 7;
		MINKLPMIELF baghnhikfdc = 4;
	}
}

message DHBMIPDEJMD {
	ItemCostData cost_data = 10;
	uint32 fadckclpeic = 7;
	bool ebapddabejo = 9;
	int32 bmcinbknmfp = 1;
	uint32 gddbplgkimf = 3;
}

message KDOPKHGLNBP {
	int32 bmcinbknmfp = 12;
	bool ebapddabejo = 3;
	uint32 gddbplgkimf = 4;
	ItemCostData cost_data = 2;
	uint32 fadckclpeic = 7;
}

message GELDJPFIBFM {
	uint32 pkjcfcmooje = 9;
	uint32 aecpmhpnjln = 11;
	map<uint32, uint32> dglleldikmi = 1;
}

message PCELNBJLFPN {
	map<uint32, bool> pncmnekmbig = 14;
	uint32 gddbplgkimf = 10;
	ItemCostData cost_data = 13;
	int32 bmcinbknmfp = 3;
}

message OMEKMJONKPN {
	int32 bmcinbknmfp = 5;
	uint32 gddbplgkimf = 10;
	ItemCostData cost_data = 6;
}

message IGBNDAHOHED {
	IAMINGHLBDJ mobjjpmiaab = 11;
	ItemCostData cost_data = 6;
	ItemCostData mgkbnfokmkj = 7;
	bool onaignfolfj = 14;
}

message GNLGJJFNHND {
	repeated IGBNDAHOHED ecapbmomfbh = 11;
}

message LGBILGFGGEI {
	bool onaignfolfj = 11;
	ItemCostData cost_data = 4;
	ItemCostData mgkbnfokmkj = 3;
	uint32 meoonfgocdh = 5;
	uint32 magic_unit_id = 6;
}

message EMAKAJDAFKP {
	repeated LGBILGFGGEI rogue_magic_unit_info_list = 3;
}

message FCMHGHPOCFA {
	int32 bmcinbknmfp = 11;
	ItemCostData cost_data = 15;
	uint32 gddbplgkimf = 13;
}

message EFINDLMBMBF {
	uint32 gddbplgkimf = 4;
	map<uint32, ItemCostData> jdigocehgko = 6;
	ItemCostData kfhpbgllikp = 15;
	int32 bmcinbknmfp = 1;
}

message NDHNEMIJPFO {
	ItemCostData cost_data = 8;
	uint32 scepter_id = 11;
}

message MINKLPMIELF {
	repeated NDHNEMIJPFO lcllikpffop = 7;
}

// PFHNEFOOBMF (5649)
message RogueWorkbenchHandleFuncCsReq {
	uint32 cbahfgpjemp = 12;
	uint32 prop_entity_id = 9;
	BCCNMFHBAIJ djfildlmkcp = 4;
}

// HIGAKKBBEBO (5670)
message RogueWorkbenchHandleFuncScRsp {
	IIGDKLANFDC lipngbcpgon = 9;
	uint32 cbahfgpjemp = 1;
	uint32 retcode = 5;
}

message BCCNMFHBAIJ {
	oneof content_case {
		CBPOHNLHLBJ klnibefplcl = 11;
		CPMCAAPFHAH ajpkmohnmhc = 2;
		HNBIBECBILH fejjpbccjfd = 7;
		MHAANJCANDO gdnalenilei = 3;
		MJMACMEEGNP iopggonmnnl = 9;
		JJPMMCJHGLH mobjjpmiaab = 10;
		PKPCIJJPIAK cfjmobmclbi = 13;
		NKNBNKGEEMH glcgkninaog = 5;
		OCJMFGFLDEE jeoejadogdf = 12;
		OMHEHLELGBN baghnhikfdc = 4;
	}
}

message CBPOHNLHLBJ {
	uint32 hjapjnhejgo = 13;
}

message CPMCAAPFHAH {
	uint32 nnpdkhobfif = 6;
}

message HNBIBECBILH {
	uint32 olofiillmbl = 14;
}

message MHAANJCANDO {
	repeated uint32 llcjpicnpin = 4;
}

message MJMACMEEGNP {
	uint32 oahipbhjpdb = 10;
}

message JJPMMCJHGLH {
	uint32 fmdfaookomg = 13;
}

message PKPCIJJPIAK {
	repeated uint32 midiaggmjme = 15;
}

message NKNBNKGEEMH {
	repeated uint32 ilcidoapppe = 15;
}

message OCJMFGFLDEE {
	uint32 magic_unit_id = 10;
}

message OMHEHLELGBN {
	uint32 scepter_id = 4;
}

message FCPMDCKIGID {
	PFJJMIDEBEH status = 14;
	uint32 gbbimdleikd = 9;
}

message FGODOIDENID {
	MKNFFJFABCN status = 1;
	uint32 pmdpbgenkmi = 7;
	uint32 gbbimdleikd = 12;
}

// MDLEIOGMLDH (5698)
message GetRogueCollectionCsReq {
}

// KCMMIPLMDMK (5691)
message GetRogueCollectionScRsp {
	repeated FGODOIDENID jmdnlhmklgc = 4;
	uint32 retcode = 6;
	repeated FCPMDCKIGID hipocmcfgdm = 5;
}

// CEPHEAGNPKN (5644)
message SetRogueCollectionCsReq {
	repeated uint32 kfdlgbpkkmd = 9;
	repeated NMJIPIPDBLN heljblhehjk = 12;
	repeated uint32 fhkdialfngj = 5;
}

// DKGHDDNJNBK (5623)
message SetRogueCollectionScRsp {
	uint32 retcode = 11;
	repeated FCPMDCKIGID hipocmcfgdm = 12;
	repeated FGODOIDENID jmdnlhmklgc = 4;
}

message LGKKHEDNCAB {
	uint32 edhcndmdlge = 3;
	CBCJBGJAKGJ status = 13;
}

message CMIEPHPMBMI {
	uint32 edhcndmdlge = 8;
	MKNFFJFABCN status = 14;
	uint32 pmdpbgenkmi = 9;
}

// KODPPPDLEHJ (5669)
message GetRogueExhibitionCsReq {
}

// HIAGIPKDMKG (5656)
message GetRogueExhibitionScRsp {
	repeated LGKKHEDNCAB nicinondmaa = 8;
	uint32 retcode = 6;
	repeated CMIEPHPMBMI ofeempjfbki = 15;
}

// ANONGOAGBNL (5609)
message SetRogueExhibitionCsReq {
	repeated uint32 meinchpnien = 13;
	repeated NMJIPIPDBLN fkiobmagjcc = 5;
	repeated uint32 gfclfeafeag = 8;
}

// AHKDILAHKIA (5620)
message SetRogueExhibitionScRsp {
	uint32 retcode = 4;
	repeated CMIEPHPMBMI ofeempjfbki = 6;
	repeated LGKKHEDNCAB nicinondmaa = 1;
}

message OMJMJIEMDFI {
	uint32 miracle_id = 12;
}

message LLHKFMLNEMP {
	uint32 mojggonnhmf = 3;
	uint32 level = 9;
}

message AKPDFLPIKBM {
	oneof PHBNDGIOBMH {
		OMJMJIEMDFI addglpfjhhd = 10;
		LLHKFMLNEMP bnglhbmigja = 1;
	}
	uint32 MOJGGONNHMF = 8;
	bool FBNKBAKIGHI = 14;
}

message PKFIDPGFEJK {
	repeated AKPDFLPIKBM docpbfdcehp = 6;
	uint32 group_id = 4;
	bool lmkogfbbofb = 9;
}

message BLKFPMIBJKO {
	uint32 hegmgooneab = 8;
	uint32 cur_times = 11;
	uint32 cpgafnjbgfi = 14;
	repeated PKFIDPGFEJK maze_group_list = 1;
	bool akdkkdnbkkb = 7;
	uint32 gncjkhcajff = 9;
	ItemCostData bihleiecnbe = 12;
}

// HFOCDPEFGEA (5638)
message RogueGetGambleInfoCsReq {
	uint32 prop_entity_id = 14;
}

// LONOLPHBNLA (5687)
message RogueGetGambleInfoScRsp {
	BLKFPMIBJKO nofjpppaike = 1;
	uint32 retcode = 15;
}

// NIOEHAPDHKM (5686)
message RogueDoGambleCsReq {
	uint32 prop_entity_id = 10;
}

// JGJDGLIDOCD (5666)
message RogueDoGambleScRsp {
	uint32 npflhnjaman = 5;
	uint32 ndbaakaojpm = 6;
	BLKFPMIBJKO nofjpppaike = 2;
	uint32 retcode = 11;
}

// KAIOMKPFEGO (5615)
message RogueDebugMessageScNotify {
	string kalfnpjbfil = 5;
	AMJCKJDMHMG type = 13;
	string mmplmiafkfc = 8;
}

// OJNIPFHNOFN
enum CmdRogueEndless {
	CmdRogueEndlessNone = 0;
	CmdTakeRogueEndlessActivityPointRewardScRsp = 6004;
	CmdTakeRogueEndlessActivityAllBonusRewardScRsp = 6007;
	CmdRogueEndlessActivityBattleEndScNotify = 6001;
	CmdGetRogueEndlessActivityDataCsReq = 6009;
	CmdEnterRogueEndlessActivityStageScRsp = 6008;
	CmdGetRogueEndlessActivityDataScRsp = 6010;
	CmdTakeRogueEndlessActivityAllBonusRewardCsReq = 6002;
	CmdEnterRogueEndlessActivityStageCsReq = 6003;
	CmdTakeRogueEndlessActivityPointRewardCsReq = 6005;
}

message KNBCDNMNPCL {
	uint32 map_id = 4;
	BKLLPGCEECM hlkakjhdfpc = 15;
	repeated uint32 eljinbjeael = 3;
	repeated uint32 base_avatar_id_list = 9;
	uint32 pndjkipdpil = 6;
	KDGNMFLKFLL status = 8;
	uint32 okhhadkimpm = 7;
	ChessRogueBuff hnebbkenpnp = 12;
	uint32 hcggmkcmpjm = 2;
}

message DMJLHJHCMEN {
	uint32 gnamjnppnfd = 5;
	uint32 knnngleajfi = 3;
	uint32 hieilpmnehj = 10;
	uint32 hkklkelgnfh = 14;
	uint32 battle_id = 6;
	uint32 hghnihofkoe = 7;
	bool jebfgnmgfnb = 13;
	uint32 celonkbfkbj = 1;
}

message ABKFIDAKCEM {
	KNBCDNMNPCL gnddelgfbkd = 3;
	DMJLHJHCMEN cinngpdeiek = 4;
	uint32 panel_id = 7;
	uint32 kjkpmffamfk = 9;
}

// LPJNHFOMMJG (6009)
message GetRogueEndlessActivityDataCsReq {
}

// OGDKEEFEOBK (6010)
message GetRogueEndlessActivityDataScRsp {
	uint32 clphjikeohp = 5;
	uint32 echiomnmfek = 13;
	repeated uint32 emghlpgepme = 14;
	repeated ABKFIDAKCEM data = 2;
	uint32 retcode = 7;
}

message LBMABCOABMB {
	AvatarType avatar_type = 9;
	uint32 avatar_id = 13;
}

// FDLIBFDANEJ (6003)
message EnterRogueEndlessActivityStageCsReq {
	repeated LBMABCOABMB avatar_list = 11;
	uint32 cfkhpfmmicb = 7;
}

// PCFKEPKJJML (6008)
message EnterRogueEndlessActivityStageScRsp {
	uint32 retcode = 3;
	DMJLHJHCMEN cinngpdeiek = 11;
	SceneBattleInfo battle_info = 13;
}

// OLADBIHNFMP (6001)
message RogueEndlessActivityBattleEndScNotify {
	DMJLHJHCMEN cinngpdeiek = 13;
}

// JOPOJIBEONJ (6005)
message TakeRogueEndlessActivityPointRewardCsReq {
	bool hgoijnknioa = 8;
	uint32 level = 15;
}

// JPPPICEMBHP (6004)
message TakeRogueEndlessActivityPointRewardScRsp {
	uint32 retcode = 15;
	uint32 echiomnmfek = 2;
	uint32 level = 3;
	bool hgoijnknioa = 9;
	ItemList reward = 4;
	repeated uint32 emghlpgepme = 12;
}

// EGADANEDHFL (6002)
message TakeRogueEndlessActivityAllBonusRewardCsReq {
}

// APKNCFMLEED (6007)
message TakeRogueEndlessActivityAllBonusRewardScRsp {
	uint32 echiomnmfek = 8;
	ItemList reward = 11;
	repeated uint32 emghlpgepme = 14;
	uint32 retcode = 1;
}

// GMOBINAGJIH
enum CmdRogueMagic {
	CmdRogueMagicNone = 0;
	CmdRogueMagicUnitReforgeCsReq = 7710;
	CmdRogueMagicLeaveCsReq = 7767;
	CmdRogueMagicSetAutoDressInMagicUnitScRsp = 7765;
	CmdRogueMagicUnitReforgeScRsp = 7776;
	CmdRogueMagicEnterRoomScRsp = 7793;
	CmdRogueMagicLevelInfoUpdateScNotify = 7746;
	CmdRogueMagicUnitComposeCsReq = 7788;
	CmdRogueMagicReviveAvatarCsReq = 7707;
	CmdRogueMagicSetAutoDressInMagicUnitCsReq = 7721;
	CmdRogueMagicQueryScRsp = 7759;
	CmdRogueMagicEnableTalentCsReq = 7717;
	CmdRogueMagicEnterCsReq = 7784;
	CmdRogueMagicGetTalentInfoCsReq = 7735;
	CmdRogueMagicStartScRsp = 7795;
	CmdRogueMagicGetTalentInfoScRsp = 7773;
	CmdRogueMagicScepterTakeOffUnitCsReq = 7750;
	CmdRogueMagicScepterDressInUnitCsReq = 7778;
	CmdRogueMagicScepterDressInUnitScRsp = 7729;
	CmdRogueMagicAreaUpdateScNotify = 7725;
	CmdRogueMagicAutoDressInMagicUnitChangeScNotify = 7781;
	CmdRogueMagicSettleCsReq = 7752;
	CmdRogueMagicScepterTakeOffUnitScRsp = 7748;
	CmdRogueMagicQueryCsReq = 7790;
	CmdRogueMagicEnterLayerCsReq = 7734;
	CmdRogueMagicEnterLayerScRsp = 7743;
	CmdRogueMagicEnterRoomCsReq = 7724;
	CmdRogueMagicAutoDressInUnitCsReq = 7737;
	CmdRogueMagicEnterScRsp = 7727;
	CmdRogueMagicUnitComposeScRsp = 7758;
	CmdRogueMagicEnableTalentScRsp = 7713;
	CmdRogueMagicStartCsReq = 7736;
	CmdRogueMagicGetMiscRealTimeDataCsReq = 7708;
	CmdRogueMagicReviveCostUpdateScNotify = 7726;
	CmdRogueMagicStoryInfoUpdateScNotify = 7779;
	CmdRogueMagicLeaveScRsp = 7728;
	CmdRogueMagicBattleFailSettleInfoScNotify = 7719;
	CmdRogueMagicSettleScRsp = 7774;
	CmdRogueMagicGetMiscRealTimeDataScRsp = 7718;
	CmdRogueMagicAutoDressInUnitScRsp = 7711;
	CmdRogueMagicReviveAvatarScRsp = 7753;
}

enum OEMKHNBECFC {
	ROGUE_MAGIC_LEVEL_STATUS_NONE = 0;
	ROGUE_MAGIC_LEVEL_STATUS_PROCESSING = 1;
	ROGUE_MAGIC_LEVEL_STATUS_FINISHED = 2;
	ROGUE_MAGIC_LEVEL_STATUS_SETTLED = 3;
}

enum ABMEPGCAPLF {
	ROGUE_MAGIC_LAYER_STATUS_NONE = 0;
	ROGUE_MAGIC_LAYER_STATUS_PROCESSING = 1;
	ROGUE_MAGIC_LAYER_STATUS_FINISH = 2;
}

enum EKCMOGEGAKP {
	ROGUE_MAGIC_ROOM_STATUS_NONE = 0;
	ROGUE_MAGIC_ROOM_STATUS_INITED = 1;
	ROGUE_MAGIC_ROOM_STATUS_PROCESSING = 2;
	ROGUE_MAGIC_ROOM_STATUS_FINISH = 3;
}

enum OPIEIIMENKF {
	ROGUE_MAGIC_SETTLE_REASON_NONE = 0;
	ROGUE_MAGIC_SETTLE_REASON_WIN = 1;
	ROGUE_MAGIC_SETTLE_REASON_FAIL = 2;
	ROGUE_MAGIC_SETTLE_REASON_INTERRUPT = 3;
}

message KLGIDKPMIBH {
	LineupInfo lineup = 13;
	SceneInfo scene = 14;
	CHAENBOEBOC kdjlefeaiep = 6;
}

message OKMMKNBMNMB {
	repeated CGJOLHIDCDE amgmpnoidlm = 14;
	uint32 dhinbnjjopf = 9;
	uint32 kchegpecmhm = 4;
	uint32 ihlgmnhbdhj = 15;
	ABMEPGCAPLF status = 6;
}

message CGJOLHIDCDE {
	uint32 room_id = 14;
	uint32 kmnomgmofil = 8;
	EKCMOGEGAKP status = 13;
	uint32 jhgncibopbe = 6;
}

message BDMOKJBDCDD {
	repeated OKMMKNBMNMB kechadngneg = 8;
	uint32 jpndkfdgnkk = 4;
	OEMKHNBECFC status = 5;
	OPIEIIMENKF reason = 10;
	uint32 nnoggmbookf = 9;
	uint32 iijcgpgamlm = 7;
}

message BOEKJLOLAJE {
	repeated OOKFHBFLPEB rogue_magic_unit_info_list = 8;
	uint32 mmnmmniadep = 7;
	repeated DBKPLONPCHJ lcllikpffop = 1;
	bool akcemflnkol = 5;
}

message MGEGFDMBKCB {
	repeated uint32 hdagdlocpfi = 5;
}

message KPOOJGLKGFK {
	uint32 pnbapafolbl = 15;
}

// JPFECAOAKIF (7736)
message RogueMagicStartCsReq {
	uint32 kjkpmffamfk = 10;
	repeated uint32 cngepabgdlm = 3;
	repeated uint32 base_avatar_id_list = 14;
	uint32 hbeedmleipi = 8;
}

message AGAOOLGMDOO {
	BDMOKJBDCDD level = 3;
	KPOOJGLKGFK eaofcfhmkag = 7;
	MGEGFDMBKCB fffdoigndfn = 8;
	GFMELEMCJNA bpgeldjgkgj = 15;
	HAHBDLFOBHB basic_info = 2;
	MJJAIIIDPPD item_value = 11;
	BFEJLAJIPNG lineup = 14;
	BOEKJLOLAJE mobjjpmiaab = 12;
}

// KGFMLLJBMOF (7795)
message RogueMagicStartScRsp {
	AGAOOLGMDOO kcfmiidppbh = 3;
	KLGIDKPMIBH kjbiggihkdp = 12;
	uint32 retcode = 8;
}

// BOMAKNHEDCN (7784)
message RogueMagicEnterCsReq {
}

// IGGLIOENFAM (7727)
message RogueMagicEnterScRsp {
	uint32 retcode = 6;
	AGAOOLGMDOO kcfmiidppbh = 3;
	KLGIDKPMIBH kjbiggihkdp = 11;
}

// HLFFJKMMPKL (7767)
message RogueMagicLeaveCsReq {
}

// DBEECLPPJHP (7728)
message RogueMagicLeaveScRsp {
	KLGIDKPMIBH kjbiggihkdp = 13;
	uint32 retcode = 2;
}

// BFONHMKPGJF (7724)
message RogueMagicEnterRoomCsReq {
	uint32 dhinbnjjopf = 6;
	uint32 lncdgojpaio = 10;
}

// LLHJCDHBOFP (7793)
message RogueMagicEnterRoomScRsp {
	KLGIDKPMIBH kjbiggihkdp = 8;
	uint32 retcode = 2;
}

// MPMACJBMBKN (7734)
message RogueMagicEnterLayerCsReq {
	uint32 lncdgojpaio = 3;
	uint32 nnoggmbookf = 10;
}

// BEPIBLKOFAE (7743)
message RogueMagicEnterLayerScRsp {
	uint32 retcode = 7;
	KLGIDKPMIBH kjbiggihkdp = 4;
}

// PJGFJKKOIML (7746)
message RogueMagicLevelInfoUpdateScNotify {
	uint32 jpndkfdgnkk = 11;
	uint32 nnoggmbookf = 4;
	repeated OKMMKNBMNMB kechadngneg = 8;
	OPIEIIMENKF reason = 6;
	uint32 iijcgpgamlm = 9;
	OEMKHNBECFC status = 13;
}

// IONCKPEBNBK (7725)
message RogueMagicAreaUpdateScNotify {
	repeated ELGAMGEDGOM cgnfacmppco = 1;
}

message GILDNBDKOLD {
	uint32 hfcmkooojai = 11;
	bool ldnbeppjjkn = 5;
}

message LAEEPLBLDCC {
	bool ldnbeppjjkn = 11;
	uint32 gpafpkbggcp = 15;
}

message ENEMOHJKMMI {
	GILDNBDKOLD enfbjbhpggn = 5;
	LineupInfo eelbepmnpgi = 2;
	AGAOOLGMDOO kcfmiidppbh = 15;
	LAEEPLBLDCC efcdmhhcedh = 7;
}

message IPEGJCOHHCM {
	repeated IAMINGHLBDJ hanofjmkpod = 8;
	repeated uint32 hgjckemffhi = 3;
	repeated uint32 lmjgindblao = 1;
	repeated AAKGCJPOJDF comhalbdnng = 7;
}

// JEDCIAEDMAM (7719)
message RogueMagicBattleFailSettleInfoScNotify {
	KLGIDKPMIBH kjbiggihkdp = 3;
	ENEMOHJKMMI inppfdjhejn = 2;
}

// ICGKKLHFOFC (7752)
message RogueMagicSettleCsReq {
}

// EGKDBNMIDEM (7774)
message RogueMagicSettleScRsp {
	IPEGJCOHHCM nnofjbbofnk = 14;
	ENEMOHJKMMI inppfdjhejn = 8;
	uint32 retcode = 4;
	ItemList oofimndjpci = 12;
	KLGIDKPMIBH kjbiggihkdp = 15;
}

// LEDKJGDBHGB (7726)
message RogueMagicReviveCostUpdateScNotify {
	ItemCostData rogue_revive_cost = 15;
}

// OEIGEKNNFGF (7707)
message RogueMagicReviveAvatarCsReq {
	uint32 interacted_prop_entity_id = 7;
	repeated uint32 base_avatar_id_list = 1;
}

// HJLGLGNFAJM (7753)
message RogueMagicReviveAvatarScRsp {
	ItemCostData rogue_revive_cost = 7;
	uint32 retcode = 14;
}

// NJHAJEPNMMO (7790)
message RogueMagicQueryCsReq {
}

message LMMKDBFDOJF {
	repeated OOKFHBFLPEB rogue_magic_unit_info_list = 1597;
	uint32 epgnjpaolnj = 13;
	uint32 mmfhmkfgeph = 12;
	uint32 mmnmmniadep = 5;
	uint32 hkmlomohflf = 7;
	uint32 iijcgpgamlm = 14;
	repeated uint32 avatar_id_list = 1790;
	repeated DBKPLONPCHJ lcllikpffop = 620;
	repeated uint32 pamapagbbjf = 872;
	uint32 opfgedljcbl = 2;
	uint32 olgfanejklm = 11;
	uint32 jgdhlnacneb = 3;
	uint32 cefbmphligi = 8;
}

message NCDFMCGOKLH {
	repeated uint32 lgnckfncafp = 958;
}

message ELGAMGEDGOM {
	bool kphgmoidfnd = 8;
	repeated uint32 aonpfedmdbf = 13;
	LMMKDBFDOJF nmbommjjmmb = 2;
	uint32 kjkpmffamfk = 4;
	uint32 lejnoloboge = 12;
	NCDFMCGOKLH dgkajmocfia = 3;
	bool is_taken_reward = 14;
	bool hdmfplocpmk = 6;
}

message ABDHKCOFEEC {
	bool kphgmoidfnd = 7;
	uint32 pmaachomgmc = 5;
}

message HGDOLNGHMIG {
	repeated uint32 fnbeacfifai = 2;
}

message NJICCNHCMDK {
	repeated uint32 nkgnmapebbe = 14;
	EAPPPCLJBCJ foobjefjagg = 10;
	repeated AFCBFFDAHEB rogue_magic_unit_info_list = 11;
	repeated JBGNJNJEOIL ecapbmomfbh = 5;
	repeated ABDHKCOFEEC afbbgjiajne = 9;
	repeated ELGAMGEDGOM cgnfacmppco = 8;
	HGDOLNGHMIG story_info = 3;
}

// LFPPEBGCDAA (7759)
message RogueMagicQueryScRsp {
	uint32 retcode = 4;
	NJICCNHCMDK rogue_get_info = 8;
	AGAOOLGMDOO kcfmiidppbh = 7;
}

// OLCLNPGDOOP (7778)
message RogueMagicScepterDressInUnitCsReq {
	uint32 dice_slot_id = 3;
	uint32 iofeedemhko = 9;
	uint32 scepter_id = 14;
}

// NAAHKJECHDO (7729)
message RogueMagicScepterDressInUnitScRsp {
	uint32 retcode = 13;
}

// OMHLJBHIMJD (7737)
message RogueMagicAutoDressInUnitCsReq {
	repeated uint32 phfhfnldopn = 13;
}

// CEKPEEBCIAA (7711)
message RogueMagicAutoDressInUnitScRsp {
	uint32 retcode = 3;
}

// PPPBMINFABK (7721)
message RogueMagicSetAutoDressInMagicUnitCsReq {
	bool dbadjbfdaan = 14;
}

// OIGFMNOPMAM (7765)
message RogueMagicSetAutoDressInMagicUnitScRsp {
	bool dbadjbfdaan = 7;
	uint32 retcode = 6;
}

// COAGCNBPEJO (7781)
message RogueMagicAutoDressInMagicUnitChangeScNotify {
	bool dbadjbfdaan = 5;
}

// PEGECFHEODH (7750)
message RogueMagicScepterTakeOffUnitCsReq {
	repeated uint32 phfhfnldopn = 10;
	uint32 scepter_id = 7;
}

// HNICMIEDHNC (7748)
message RogueMagicScepterTakeOffUnitScRsp {
	uint32 retcode = 7;
}

// IFOHCCABNDP (7788)
message RogueMagicUnitComposeCsReq {
	repeated uint32 phfhfnldopn = 11;
}

// ICPGCOGPGKA (7758)
message RogueMagicUnitComposeScRsp {
	uint32 retcode = 13;
}

// HCKDFNIFPMG (7710)
message RogueMagicUnitReforgeCsReq {
	repeated uint32 phfhfnldopn = 6;
}

// OPMILLMEJDB (7776)
message RogueMagicUnitReforgeScRsp {
	uint32 retcode = 3;
}

message EAPPPCLJBCJ {
	KFDDOFKHKDJ lgofoilnonl = 5;
	uint32 ocblnggllkc = 9;
}

// DKJFMENGOMM (7735)
message RogueMagicGetTalentInfoCsReq {
}

// JKILPDEMCCL (7773)
message RogueMagicGetTalentInfoScRsp {
	uint32 retcode = 14;
	EAPPPCLJBCJ foobjefjagg = 2;
}

// EOLOHIPEMPF (7717)
message RogueMagicEnableTalentCsReq {
	uint32 talent_id = 7;
}

// JKGMGMKOAJF (7713)
message RogueMagicEnableTalentScRsp {
	uint32 retcode = 9;
	EAPPPCLJBCJ foobjefjagg = 12;
}

// BHPFHCGCAEP (7708)
message RogueMagicGetMiscRealTimeDataCsReq {
}

// NFPIDGOACLF (7718)
message RogueMagicGetMiscRealTimeDataScRsp {
	LAEEPLBLDCC efcdmhhcedh = 7;
	uint32 retcode = 13;
	GILDNBDKOLD enfbjbhpggn = 6;
}

// NGAEMIDMMIM (7779)
message RogueMagicStoryInfoUpdateScNotify {
	uint32 fjdionepiph = 12;
}

// AIABJKPDKPN
enum CmdRogueModifierType {
	CmdRogueModifierTypeNone = 0;
	CmdRogueModifierAddNotify = 5384;
	CmdRogueModifierUpdateNotify = 5374;
	CmdRogueModifierSelectCellScRsp = 5367;
	CmdRogueModifierStageStartNotify = 5393;
	CmdRogueModifierDelNotify = 5324;
	CmdRogueModifierSelectCellCsReq = 5327;
}

enum PJDEMLINNGF {
	ROGUE_MODIFIER_SOURCE_NONE = 0;
	ROGUE_MODIFIER_SOURCE_DICE_ROLL = 1;
	ROGUE_MODIFIER_SOURCE_AEON = 2;
	ROGUE_MODIFIER_SOURCE_BOARD_EVENT = 3;
	ROGUE_MODIFIER_SOURCE_DIALOG_EVENT = 4;
	ROGUE_MODIFIER_SOURCE_MIRACLE = 5;
	ROGUE_MODIFIER_SOURCE_CELL_MARK = 6;
	ROGUE_MODIFIER_SOURCE_AEON_TALENT = 7;
	ROGUE_MODIFIER_SOURCE_BOSS_DECAY = 8;
	ROGUE_MODIFIER_SOURCE_DICE_BRANCH = 9;
}

enum OOLLLBPBIEL {
	ROGUE_MODIFIER_CONTENT_DEFINITE = 0;
	ROGUE_MODIFIER_CONTENT_RANDOM = 1;
}

message DHANHOHHGFP {
	uint32 select_cell_id = 8;
	bool confirm = 15;
	uint32 bhbhlinijpd = 12;
}

message NEGCJGMALEO {
	bool confirm = 15;
	uint32 bhbhlinijpd = 8;
	repeated uint32 dcphojemlnh = 11;
	uint32 select_cell_id = 5;
}

message KGEIBNHBPDN {
	uint32 select_cell_id = 4;
	repeated uint32 dcphojemlnh = 1;
	bool confirm = 5;
}

message AMPMPFCEHKE {
	uint32 select_cell_id = 1;
	repeated uint32 onnpombhihb = 6;
	bool confirm = 11;
	uint32 akeeeahdeec = 4;
}

message HFPPCLMMEEO {
	uint32 ihjjaiajenh = 2;
}

message IDLHPGLOIMP {
	uint32 aifolcmhmbf = 7;
}

message MLIDNIHJBAO {
	uint32 elloocpelmi = 7;
}

message MKHMHPEFDHG {
	uint32 select_cell_id = 5;
	uint32 aelgpbejjni = 8;
	bool confirm = 7;
	repeated uint32 onnpombhihb = 13;
}

message HDFKJDDINDM {
	uint32 eeephgfdnon = 4;
	uint32 epofmdpoknl = 3;
	uint32 kapdacmmjfk = 8;
}

message EEIHFCCPEAC {
	uint32 maze_buff_id = 5;
}

message MCPNKJMFDMM {
	uint32 item_count = 2;
	uint32 item_id = 4;
}

message KLMFMNOHBLK {
	uint32 fgjfkkfhhkp = 9;
	uint32 nefmhnpeoag = 8;
	uint32 num = 12;
}

message JGONDMCCMOK {
	uint32 apckciaaiee = 12;
	uint32 num = 1;
}

message HCFMJMCPFHH {
	uint32 ihjjaiajenh = 3;
}

message LALLPADHFPD {
	uint32 bhbhlinijpd = 12;
}

message FAFPIFHGGGI {
	repeated uint32 dcphojemlnh = 1;
	uint32 select_cell_id = 6;
	bool confirm = 15;
}

message KMGHLNNGPKG {
	uint32 maze_buff_id = 8;
	uint32 ehhjbcinmmh = 12;
}

message INLDKPMBPGJ {
	uint32 nppmlhhdbhe = 5;
	uint32 opgbmpjajcl = 10;
	OOLLLBPBIEL kiiikodiidp = 8;
}

message ChessRogueModifierInfo {
	uint32 select_cell_id = 15;
	repeated uint32 modifier_effect_cell_id_list = 1;
	bool confirm = 10;
}

message BBDMKMABKNC {
	uint32 ikbbgdmikio = 5;
}

message CPNDFLGMIOA {
	uint32 count = 12;
}

message RogueModifier {
	oneof info_case {
		ChessRogueModifierInfo modifier_info = 1088;
	}
	PJDEMLINNGF LEEACMNGDFL = 5;
	uint64 modifier_id = 12;
	INLDKPMBPGJ BGFHGKMPFNH = 2;
}

message EBOIOIKFLFJ {
	repeated RogueModifier pigapikfndb = 7;
}

// HCAIPIONNBJ (5384)
message RogueModifierAddNotify {
	RogueModifier onopglnhekk = 2;
}

// DBLLBIHOJIO (5327)
message RogueModifierSelectCellCsReq {
	uint32 cell_id = 9;
}

// FLEOIFOPHMM (5367)
message RogueModifierSelectCellScRsp {
	uint32 cell_id = 6;
	ItemList ihkkjkhfihh = 5;
	uint32 retcode = 2;
}

// NAAFECDJEFN (5374)
message RogueModifierUpdateNotify {
	RogueModifier onopglnhekk = 7;
}

// FGMBLHAHEFF (5324)
message RogueModifierDelNotify {
	uint64 modifier_id = 12;
}

// IMDNPLJKLPH (5393)
message RogueModifierStageStartNotify {
	PJDEMLINNGF leeacmngdfl = 4;
}

// KOBMPNNJHPL
enum CmdRogueTournType {
	CmdRogueTournTypeNone = 0;
	CmdRogueTournDeleteArchiveScRsp = 6077;
	CmdRogueTournEnterRoomCsReq = 6044;
	CmdRogueTournStartScRsp = 6027;
	CmdRogueTournEnablePermanentTalentScRsp = 6045;
	CmdRogueTournGetArchiveRepositoryCsReq = 6043;
	CmdRogueTournReEnterRogueCocoonStageCsReq = 6082;
	CmdRogueTournResetPermanentTalentCsReq = 6020;
	CmdRogueTournGetSettleInfoScRsp = 6055;
	CmdRogueTournClearArchiveNameScNotify = 6068;
	CmdRogueTournGetAllArchiveScRsp = 6022;
	CmdRogueTournLeaveRogueCocoonSceneCsReq = 6028;
	CmdRogueTournEnterRogueCocoonSceneCsReq = 6057;
	CmdRogueTournQueryCsReq = 6053;
	CmdRogueTournDifficultyCompNotify = 6086;
	CmdRogueTournTakeExpRewardCsReq = 6023;
	CmdRogueTournResetPermanentTalentScRsp = 6015;
	CmdRogueTournGetArchiveRepositoryScRsp = 6026;
	CmdRogueTournEnterScRsp = 6069;
	CmdRogueTournTakeExpRewardScRsp = 6078;
	CmdRogueTournGetCurRogueCocoonInfoScRsp = 6092;
	CmdRogueTournGetSettleInfoCsReq = 6060;
	CmdRogueTournHandBookNotify = 6032;
	CmdRogueTournLeaveScRsp = 6097;
	CmdRogueTournWeekChallengeUpdateScNotify = 6050;
	CmdRogueTournReEnterRogueCocoonStageScRsp = 6083;
	CmdRogueTournBattleFailSettleInfoScNotify = 6018;
	CmdRogueTournGetMiscRealTimeDataCsReq = 6099;
	CmdRogueTournGetAllArchiveCsReq = 6037;
	CmdRogueTournEnterRoomScRsp = 6036;
	CmdRogueTournGetMiscRealTimeDataScRsp = 6040;
	CmdRogueTournSettleScRsp = 6074;
	CmdRogueTournEnterCsReq = 6100;
	CmdRogueTournLevelInfoUpdateScNotify = 6029;
	CmdRogueTournEnablePermanentTalentCsReq = 6089;
	CmdRogueTournSettleCsReq = 6075;
	CmdRogueTournGetCurRogueCocoonInfoCsReq = 6094;
	CmdRogueTournGetPermanentTalentInfoCsReq = 6058;
	CmdRogueTournGetPermanentTalentInfoScRsp = 6046;
	CmdRogueTournExpNotify = 6051;
	CmdRogueTournReviveAvatarScRsp = 6079;
	CmdRogueTournConfirmSettleScRsp = 6013;
	CmdRogueTournConfirmSettleCsReq = 6085;
	CmdRogueTournDeleteArchiveCsReq = 6070;
	CmdRogueTournLeaveRogueCocoonSceneScRsp = 6021;
	CmdRogueTournEnterRogueCocoonSceneScRsp = 6065;
	CmdRogueTournQueryScRsp = 6093;
	CmdRogueTournLeaveCsReq = 6047;
	CmdRogueTournRenameArchiveScRsp = 6031;
	CmdRogueTournEnterLayerScRsp = 6038;
	CmdRogueTournStartCsReq = 6059;
	CmdRogueTournReviveAvatarCsReq = 6063;
	CmdRogueTournRenameArchiveCsReq = 6090;
	CmdRogueTournAreaUpdateScNotify = 6080;
	CmdRogueTournReviveCostUpdateScNotify = 6039;
	CmdRogueTournEnterLayerCsReq = 6095;
}

enum KKADGGCJBHN {
	ROGUE_TOURN_LEVEL_STATUS_NONE = 0;
	ROGUE_TOURN_LEVEL_STATUS_PROCESSING = 1;
	ROGUE_TOURN_LEVEL_STATUS_FINISHED = 2;
	ROGUE_TOURN_LEVEL_STATUS_SETTLED = 3;
}

enum ECJMDMNMJMF {
	ROGUE_TOURN_LAYER_STATUS_NONE = 0;
	ROGUE_TOURN_LAYER_STATUS_PROCESSING = 1;
	ROGUE_TOURN_LAYER_STATUS_FINISH = 2;
}

enum PDBDHHCIAAM {
	ROGUE_TOURN_ROOM_STATUS_NONE = 0;
	ROGUE_TOURN_ROOM_STATUS_INITED = 1;
	ROGUE_TOURN_ROOM_STATUS_PROCESSING = 2;
	ROGUE_TOURN_ROOM_STATUS_FINISH = 3;
}

enum LKOILBGBKEM {
	ROGUE_TOURN_SETTLE_REASON_NONE = 0;
	ROGUE_TOURN_SETTLE_REASON_WIN = 1;
	ROGUE_TOURN_SETTLE_REASON_FAIL = 2;
	ROGUE_TOURN_SETTLE_REASON_INTERRUPT = 3;
}

enum MDLBADPPHIH {
	ROGUE_TOURN_HANDBOOK_NONE = 0;
	ROGUE_TOURN_HANDBOOK_SIMPLE_MIRACLE = 1;
	ROGUE_TOURN_HANDBOOK_HEX_MIRACLE = 2;
	ROGUE_TOURN_HANDBOOK_BUFF = 3;
	ROGUE_TOURN_HANDBOOK_EVENT = 4;
	ROGUE_TOURN_HANDBOOK_FORMULA = 5;
}

message KHEJPIHJFAF {
	SceneInfo scene = 1;
	LineupInfo lineup = 11;
	CHAENBOEBOC kdjlefeaiep = 8;
}

message NFAEIMEGIHG {
	oneof info_case {
		AAIEELNIBHL mhpghphjohk = 610;
	}
	HAHBDLFOBHB JFJBEFEILCF = 4;
}

message EAGFKGAICCA {
	uint32 dppilolifom = 7;
	uint32 elielgdddho = 5;
	bool ldnbeppjjkn = 8;
	uint32 mhgljflceen = 14;
}

message FLPFHGIMEND {
	uint32 hdobidnngjk = 5;
	uint32 caegcdagmok = 6;
	uint32 gnfooeopimb = 10;
	bool ldnbeppjjkn = 8;
}

message ANGBDPLNIDK {
	uint32 eepighijpfp = 8;
	bool ldnbeppjjkn = 4;
	uint32 jimjoedaclm = 12;
}

message FOBCIMDNKPI {
	bool hgmcfbhdadl = 12;
}

message AAIEELNIBHL {
	IHKCKOAOMMA level = 1;
	PDHGDLPCLGK okbkbpjpdob = 4;
	FOBCIMDNKPI epafpejnmfb = 8;
	BFEJLAJIPNG lineup = 2;
	EAAMMPJFKIB jlbkiechnbh = 15;
	FANHHMLOGPI gnkgconlodg = 9;
	GFMELEMCJNA bpgeldjgkgj = 14;
	OMJCICFMBEH eeklhghiogb = 10;
	ODHFHOOEDPJ fffdoigndfn = 3;
	MJJAIIIDPPD item_value = 7;
}

message IHKCKOAOMMA {
	uint32 nnoggmbookf = 15;
	LKOILBGBKEM reason = 5;
	bool mfdjnofjndc = 14;
	repeated NCIOGBELNBB kechadngneg = 10;
	KKADGGCJBHN status = 12;
}

message PDHGDLPCLGK {
	uint32 glljjmlepgh = 11;
	uint32 bkapfkdkcec = 14;
}

message ODHFHOOEDPJ {
	repeated uint32 hdagdlocpfi = 5;
}

message NCIOGBELNBB {
	ECJMDMNMJMF status = 6;
	uint32 dhinbnjjopf = 12;
	repeated IOJDMDLKJNM amgmpnoidlm = 5;
	uint32 kchegpecmhm = 4;
	uint32 ihlgmnhbdhj = 10;
}

message IOJDMDLKJNM {
	uint32 kmnomgmofil = 10;
	uint32 jhgncibopbe = 13;
	PDBDHHCIAAM status = 6;
	uint32 room_id = 1;
}

// DIDFAKDAOBG (6059)
message RogueTournStartCsReq {
	repeated uint32 base_avatar_id_list = 3;
	repeated uint32 cngepabgdlm = 11;
	uint32 kjkpmffamfk = 9;
	bool mfdjnofjndc = 5;
	uint32 daflhmllkdk = 14;
}

// ADKJOEINGHN (6027)
message RogueTournStartScRsp {
	uint32 daflhmllkdk = 9;
	KHEJPIHJFAF kjbiggihkdp = 1;
	uint32 retcode = 5;
	NFAEIMEGIHG kcfmiidppbh = 7;
}

// BBCPBHCGJLI (6100)
message RogueTournEnterCsReq {
}

// OGMKLJHGDKG (6069)
message RogueTournEnterScRsp {
	KHEJPIHJFAF kjbiggihkdp = 5;
	uint32 retcode = 10;
	NFAEIMEGIHG kcfmiidppbh = 3;
}

// OHFLBDOOOKE (6047)
message RogueTournLeaveCsReq {
}

// PDMHAMFKELO (6097)
message RogueTournLeaveScRsp {
	uint32 retcode = 3;
	KHEJPIHJFAF kjbiggihkdp = 10;
}

// OOBBNHGGOLF (6075)
message RogueTournSettleCsReq {
}

message IONNOLIHAAG {
	FLPFHGIMEND enfbjbhpggn = 13;
	LineupInfo eelbepmnpgi = 6;
	ANGBDPLNIDK iohmenlmdda = 2;
	EAGFKGAICCA bglbboghhim = 10;
	NFAEIMEGIHG kcfmiidppbh = 9;
}

// JMOODNPDKFD (6074)
message RogueTournSettleScRsp {
	uint32 retcode = 8;
	KHEJPIHJFAF kjbiggihkdp = 15;
	IONNOLIHAAG inppfdjhejn = 10;
}

// PFMKDFHLPHI (6044)
message RogueTournEnterRoomCsReq {
	uint32 lncdgojpaio = 6;
	uint32 dhinbnjjopf = 10;
}

// JDDJJFIJDNI (6036)
message RogueTournEnterRoomScRsp {
	uint32 retcode = 1;
	KHEJPIHJFAF kjbiggihkdp = 4;
}

// KAHOPFDAPGN (6095)
message RogueTournEnterLayerCsReq {
	uint32 nnoggmbookf = 9;
	uint32 lncdgojpaio = 12;
}

// PAJEGOHLAOG (6038)
message RogueTournEnterLayerScRsp {
	KHEJPIHJFAF kjbiggihkdp = 5;
	uint32 retcode = 1;
}

// JJHMILEMLCC (6029)
message RogueTournLevelInfoUpdateScNotify {
	repeated NCIOGBELNBB kechadngneg = 3;
	KKADGGCJBHN status = 6;
	uint32 nnoggmbookf = 7;
	LKOILBGBKEM reason = 2;
}

// DKEFADHBBPE (6023)
message RogueTournTakeExpRewardCsReq {
	repeated uint32 dgocphdnnlf = 9;
	uint32 opalijhhpie = 8;
}

// JCAPEIIMDEC (6078)
message RogueTournTakeExpRewardScRsp {
	repeated uint32 lehpfjfghnn = 3;
	ItemList reward = 1;
	uint32 exp = 6;
	uint32 retcode = 4;
}

// BOCGLEHFBDJ (6051)
message RogueTournExpNotify {
	uint32 exp = 4;
}

// JNMLENAJOIB (6053)
message RogueTournQueryCsReq {
}

message MKBFBFBADJI {
	uint32 kjkpmffamfk = 13;
	bool hdmfplocpmk = 9;
	repeated uint32 jilabllnjcg = 4;
	bool is_taken_reward = 5;
	bool kphgmoidfnd = 3;
}

message GMFJGMBPAFF {
	uint32 daflhmllkdk = 15;
	bool fpgdlfipaen = 3;
	uint32 kbekacamfoo = 4;
	int64 end_time = 13;
}

message KLDEGAJOEHA {
	repeated uint32 lehpfjfghnn = 15;
	uint32 exp = 6;
}

message JJFPLDPDMNA {
	uint32 ejgnhkgfmae = 10;
	KFDDOFKHKDJ lgofoilnonl = 3;
}

message OLIDLOJGGNP {
	uint32 pmaachomgmc = 1;
	bool kphgmoidfnd = 5;
}

message CAEPOCNBJKF {
	uint32 opalijhhpie = 8;
	uint32 njmhcjgeogi = 15;
}

message PMDNPNKAMLG {
	repeated uint32 ddgffpgnced = 10;
	uint32 kbalpdhmbnp = 13;
	repeated uint32 kilolikclpd = 1;
	repeated uint32 accpehfpkab = 9;
	repeated uint32 bgogkamjlmb = 12;
	repeated uint32 hifacppemod = 4;
}

message KFJBKOMALBP {
	repeated NGEOMHNGDNJ kbhoeeednan = 4;
	repeated MKBFBFBADJI cgnfacmppco = 6;
	CAEPOCNBJKF noomdkekgmj = 11;
	PMDNPNKAMLG ccebhjgjhoa = 8;
	repeated OLIDLOJGGNP afbbgjiajne = 5;
	JJFPLDPDMNA pdbgflialdb = 9;
	KLDEGAJOEHA gdeacbledjk = 14;
	GMFJGMBPAFF fbilooecbad = 13;
}

// BOCOBINPNLL (6093)
message RogueTournQueryScRsp {
	uint32 retcode = 3;
	NFAEIMEGIHG kcfmiidppbh = 8;
	KFJBKOMALBP rogue_get_info = 5;
}

// NHLILEGHDAL (6080)
message RogueTournAreaUpdateScNotify {
	repeated MKBFBFBADJI cgnfacmppco = 5;
}

message NGEOMHNGDNJ {
	string name = 3;
	uint32 hhlnghknbfe = 8;
	int64 time = 13;
	CAEPOCNBJKF noomdkekgmj = 15;
	int64 end_time = 6;
	JINACBFKOEL data = 5;
	NFAEIMEGIHG kcfmiidppbh = 10;
}

message JINACBFKOEL {
	repeated IBJMINGEPGN miracle_list = 15;
	repeated RogueCommonBuff buff_list = 9;
	uint32 item_value = 6;
}

// DADHIFBFKBI (6037)
message RogueTournGetAllArchiveCsReq {
}

// FNCAMGHLGOF (6022)
message RogueTournGetAllArchiveScRsp {
	uint32 retcode = 9;
	repeated NGEOMHNGDNJ fnnlgllkicd = 7;
}

// KIBHGFGEHIP (6070)
message RogueTournDeleteArchiveCsReq {
	uint32 hhlnghknbfe = 8;
}

// ICIINGPAGEA (6077)
message RogueTournDeleteArchiveScRsp {
	uint32 hhlnghknbfe = 8;
	uint32 retcode = 1;
}

// AFHEKGKHPNB (6090)
message RogueTournRenameArchiveCsReq {
	string name = 13;
	uint32 hhlnghknbfe = 4;
}

// LMBNNHGEMAG (6031)
message RogueTournRenameArchiveScRsp {
	uint32 retcode = 13;
	uint32 hhlnghknbfe = 3;
	string name = 9;
}

// GALKGJCCNGI (6068)
message RogueTournClearArchiveNameScNotify {
	uint32 hhlnghknbfe = 12;
}

// DJCLBKKPILP (6058)
message RogueTournGetPermanentTalentInfoCsReq {
}

// KJFCAKLHPEM (6046)
message RogueTournGetPermanentTalentInfoScRsp {
	JJFPLDPDMNA pdbgflialdb = 4;
	uint32 retcode = 2;
}

// LJAPGEDNOAG (6089)
message RogueTournEnablePermanentTalentCsReq {
	uint32 talent_id = 2;
}

// EIFFFOKFLBB (6045)
message RogueTournEnablePermanentTalentScRsp {
	JJFPLDPDMNA pdbgflialdb = 8;
	uint32 retcode = 1;
}

// MKAOGOAKHEM (6020)
message RogueTournResetPermanentTalentCsReq {
}

// PFPPCBOILHI (6015)
message RogueTournResetPermanentTalentScRsp {
	uint32 retcode = 10;
	JJFPLDPDMNA pdbgflialdb = 12;
}

// EEGOHKBAHBJ (6057)
message RogueTournEnterRogueCocoonSceneCsReq {
	uint32 nofjglfkgfi = 15;
	repeated CKHGFCABIFI avatar_list = 7;
	uint32 lmccpipdhdm = 3;
	uint32 oalobbjofbi = 9;
	bool onhhplekhki = 4;
}

// GIDMHCHEPHB (6065)
message RogueTournEnterRogueCocoonSceneScRsp {
	uint32 retcode = 12;
	KHEJPIHJFAF kjbiggihkdp = 3;
}

// HOHFCCEKCFO (6028)
message RogueTournLeaveRogueCocoonSceneCsReq {
}

// KHAENIGCOML (6021)
message RogueTournLeaveRogueCocoonSceneScRsp {
	KHEJPIHJFAF kjbiggihkdp = 14;
	uint32 retcode = 6;
}

// PPEOHGJBFHI (6082)
message RogueTournReEnterRogueCocoonStageCsReq {
	bool onhhplekhki = 2;
}

// FNEJHKLLEEJ (6083)
message RogueTournReEnterRogueCocoonStageScRsp {
	SceneBattleInfo battle_info = 9;
	uint32 retcode = 2;
}

// EDPPHBOFBMG (6094)
message RogueTournGetCurRogueCocoonInfoCsReq {
}

// KNMGNGLINBL (6092)
message RogueTournGetCurRogueCocoonInfoScRsp {
	uint32 nofjglfkgfi = 11;
	uint32 oalobbjofbi = 13;
	uint32 lmccpipdhdm = 4;
	uint32 retcode = 14;
}

// NDLPHHDKMDE (6086)
message RogueTournDifficultyCompNotify {
	repeated uint32 iaacbeomean = 9;
}

// GBLFPKMOPFC (6032)
message RogueTournHandBookNotify {
	MDLBADPPHIH depcdmoipeg = 2;
	repeated uint32 aangibdkieh = 1;
}

// JJMJMGLNBDN (6060)
message RogueTournGetSettleInfoCsReq {
	uint32 kjkpmffamfk = 4;
}

// CEEPONCNCBK (6055)
message RogueTournGetSettleInfoScRsp {
	uint32 retcode = 7;
	IONNOLIHAAG inppfdjhejn = 10;
}

// DCMDOJIGCBK (6085)
message RogueTournConfirmSettleCsReq {
	string name = 9;
	uint32 hhlnghknbfe = 5;
	uint32 kjkpmffamfk = 8;
}

// DPEMEJFDIIH (6013)
message RogueTournConfirmSettleScRsp {
	KHEJPIHJFAF kjbiggihkdp = 3;
	uint32 retcode = 2;
	ItemList necgolomnlp = 11;
	NGEOMHNGDNJ bkakjnjliah = 15;
	ItemList oofimndjpci = 9;
}

// MOGEBDDGFIK (6050)
message RogueTournWeekChallengeUpdateScNotify {
	GMFJGMBPAFF fbilooecbad = 7;
}

// KLHNOLLBAMA (6099)
message RogueTournGetMiscRealTimeDataCsReq {
}

// FDNNDHOAPKN (6040)
message RogueTournGetMiscRealTimeDataScRsp {
	ANGBDPLNIDK iohmenlmdda = 14;
	EAGFKGAICCA bglbboghhim = 15;
	uint32 retcode = 3;
	FLPFHGIMEND enfbjbhpggn = 8;
}

// CCKIHNEDMBE (6043)
message RogueTournGetArchiveRepositoryCsReq {
}

// ANCAEELAFEN (6026)
message RogueTournGetArchiveRepositoryScRsp {
	repeated uint32 mmooadncgae = 8;
	uint32 retcode = 5;
	repeated uint32 gbccppmlbmh = 4;
}

// OPHJJEBHJLG (6039)
message RogueTournReviveCostUpdateScNotify {
	ItemCostData rogue_revive_cost = 1;
}

// NAKEBHJAGJL (6063)
message RogueTournReviveAvatarCsReq {
	repeated uint32 base_avatar_id_list = 12;
	uint32 interacted_prop_entity_id = 9;
}

// KELAHAHNDNH (6079)
message RogueTournReviveAvatarScRsp {
	uint32 retcode = 11;
	ItemCostData rogue_revive_cost = 9;
}

// MEJILJCOFJM (6018)
message RogueTournBattleFailSettleInfoScNotify {
	IONNOLIHAAG inppfdjhejn = 5;
	KHEJPIHJFAF kjbiggihkdp = 6;
}

// HAONOMALKLK
enum CmdRollShopType {
	CmdRollShopTypeNone = 0;
	CmdTakeRollShopRewardCsReq = 6917;
	CmdDoGachaInRollShopScRsp = 6903;
	CmdDoGachaInRollShopCsReq = 6907;
	CmdTakeRollShopRewardScRsp = 6906;
	CmdGetRollShopInfoScRsp = 6915;
	CmdGetRollShopInfoCsReq = 6920;
}

// KJCODCNOGFO (6920)
message GetRollShopInfoCsReq {
	uint32 bgnkmlpohgh = 10;
}

// JPINOKJLHJA (6915)
message GetRollShopInfoScRsp {
	repeated uint32 hfijjpiabgp = 3;
	uint32 retcode = 11;
	uint32 gacha_random = 8;
	uint32 bgnkmlpohgh = 7;
}

// KCGAONJAPCC (6907)
message DoGachaInRollShopCsReq {
	uint32 gpocphbpcbm = 15;
	uint32 bgnkmlpohgh = 11;
	uint32 gacha_random = 9;
}

// KDLCIHLHKME (6903)
message DoGachaInRollShopScRsp {
	uint32 retcode = 15;
	uint32 reward_display_type = 14;
	uint32 dncjdoodmlg = 8;
	ItemList reward = 4;
	uint32 bgnkmlpohgh = 11;
}

// IENHOMKGPEJ (6917)
message TakeRollShopRewardCsReq {
	uint32 bgnkmlpohgh = 6;
}

// TakeRollShopRewardScRsp (6906)
message TakeRollShopRewardScRsp {
	uint32 retcode = 7;
	ItemList Reward = 6;
	uint32 GroupType = 4;
	uint32 RollShopId = 12;
}

// JIFMMOBPHOE
enum CmdSceneType {
	CmdSceneTypeNone = 0;
	CmdEnterSectionScRsp = 1448;
	CmdGameplayCounterRecoverCsReq = 1482;
	CmdStartCocoonStageCsReq = 1413;
	CmdGameplayCounterCountDownCsReq = 1409;
	CmdSceneEntityTeleportCsReq = 1483;
	CmdRefreshTriggerByClientCsReq = 1415;
	CmdRefreshTriggerByClientScNotify = 1462;
	CmdSceneEntityMoveCsReq = 1436;
	CmdGetCurSceneInfoScRsp = 1474;
	CmdChangePropTimelineInfoCsReq = 1424;
	CmdGameplayCounterCountDownScRsp = 1420;
	CmdInteractPropCsReq = 1484;
	CmdGetUnlockTeleportScRsp = 1423;
	CmdGetSceneMapInfoScRsp = 1498;
	CmdRecoverAllLineupScRsp = 1473;
	CmdUnlockTeleportNotify = 1414;
	CmdSceneCastSkillCostMpCsReq = 1425;
	CmdSceneCastSkillMpUpdateScNotify = 1405;
	CmdScenePlaneEventScNotify = 1449;
	CmdSetCurInteractEntityCsReq = 1410;
	CmdSceneEntityMoveScRsp = 1495;
	CmdSetClientPausedCsReq = 1418;
	CmdSceneCastSkillScRsp = 1428;
	CmdSceneGroupRefreshScNotify = 1432;
	CmdActivateFarmElementScRsp = 1455;
	CmdSceneCastSkillCsReq = 1467;
	CmdDeleteSummonUnitScRsp = 1406;
	CmdSceneEntityMoveScNotify = 1434;
	CmdUpdateFloorSavedValueNotify = 1456;
	CmdUnlockedAreaMapScNotify = 1471;
	CmdGameplayCounterUpdateScNotify = 1401;
	CmdReEnterLastElementStageScRsp = 1497;
	CmdSavePointsInfoNotify = 1417;
	CmdEnterSectionCsReq = 1450;
	CmdSceneEntityTeleportScRsp = 1468;
	CmdSceneEnterStageScRsp = 1412;
	CmdSetGroupCustomSaveDataScRsp = 1440;
	CmdUpdateMechanismBarScNotify = 1499;
	CmdReturnLastTownScRsp = 1490;
	CmdSetClientPausedScRsp = 1437;
	CmdReturnLastTownCsReq = 1453;
	CmdGroupStateChangeCsReq = 1438;
	CmdReEnterLastElementStageCsReq = 1433;
	CmdStartCocoonStageScRsp = 1421;
	CmdEntityBindPropScRsp = 1408;
	CmdEnterSceneScRsp = 1416;
	CmdGetSceneMapInfoCsReq = 1470;
	CmdInteractPropScRsp = 1427;
	CmdSyncEntityBuffChangeListScNotify = 1446;
	CmdUpdateGroupPropertyScRsp = 1442;
	CmdSpringRefreshCsReq = 1419;
	CmdSceneReviveAfterRebattleCsReq = 1478;
	CmdSetCurInteractEntityScRsp = 1476;
	CmdSetGroupCustomSaveDataCsReq = 1403;
	CmdUpdateGroupPropertyCsReq = 1451;
	CmdSyncServerSceneChangeNotify = 1491;
	CmdRecoverAllLineupCsReq = 1435;
	CmdGroupStateChangeScNotify = 1486;
	CmdSceneReviveAfterRebattleScRsp = 1429;
	CmdDeleteSummonUnitCsReq = 1402;
	CmdEnterSceneByServerScNotify = 1447;
	CmdGroupStateChangeScRsp = 1487;
	CmdSceneCastSkillCostMpScRsp = 1496;
	CmdSpringRefreshScRsp = 1426;
	CmdSceneEnterStageCsReq = 1459;
	CmdOpenChestScNotify = 1469;
	CmdGetCurSceneInfoCsReq = 1452;
	CmdDeactivateFarmElementCsReq = 1479;
	CmdRefreshTriggerByClientScRsp = 1485;
	CmdGetEnteredSceneCsReq = 1466;
	CmdDeactivateFarmElementScRsp = 1481;
	CmdActivateFarmElementCsReq = 1439;
	CmdEnterSceneCsReq = 1457;
	CmdGetUnlockTeleportCsReq = 1444;
	CmdChangePropTimelineInfoScRsp = 1493;
	CmdEnteredSceneChangeScNotify = 1489;
	CmdLastSpringRefreshTimeNotify = 1407;
	CmdGameplayCounterRecoverScRsp = 1480;
	CmdEntityBindPropCsReq = 1465;
	CmdSceneUpdatePositionVersionNotify = 1443;
	CmdGetEnteredSceneScRsp = 1463;
}

enum SkillExtraTag {
	SCENE_CAST_SKILL_NONE = 0;
	SCENE_CAST_SKILL_PROJECTILE_HIT = 1;
	SCENE_CAST_SKILL_PROJECTILE_LIFETIME_FINISH = 2;
}

enum MonsterBattleType {
	MONSTER_BATTLE_TYPE_NONE = 0;
	MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;
	MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;
	MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;
	MONSTER_BATTLE_TYPE_NO_BATTLE = 4;
}

enum SceneEntityBuffChangeType {
	SCENE_ENTITY_BUFF_CHANGE_TYPE_DEFAULT = 0;
	SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_MAZEBUFF = 1;
	SCENE_ENTITY_BUFF_CHANGE_TYPE_ADD_ADV_MODIFIER = 2;
}

enum EnterSceneReason {
	ENTER_SCENE_REASON_NONE = 0;
	ENTER_SCENE_REASON_CHALLENGE_TIMEOUT = 1;
	ENTER_SCENE_REASON_ROGUE_TIMEOUT = 2;
	ENTER_SCENE_REASON_CHANGE_STORYLINE = 3;
	ENTER_SCENE_REASON_DIMENSION_MERGE = 4;
}

enum ChestType {
	MAP_INFO_CHEST_TYPE_NONE = 0;
	MAP_INFO_CHEST_TYPE_NORMAL = 101;
	MAP_INFO_CHEST_TYPE_CHALLENGE = 102;
	MAP_INFO_CHEST_TYPE_PUZZLE = 104;
}

enum GameplayCounterUpdateReason {
	GAMEPLAY_COUNTER_UPDATE_REASON_NONE = 0;
	GAMEPLAY_COUNTER_UPDATE_REASON_ACTIVATE = 1;
	GAMEPLAY_COUNTER_UPDATE_REASON_DEACTIVATE = 2;
	GAMEPLAY_COUNTER_UPDATE_REASON_CHANGE = 3;
}

enum SceneGroupRefreshType {
	SCENE_GROUP_REFRESH_TYPE_NONE = 0;
	SCENE_GROUP_REFRESH_TYPE_LOADED = 1;
	SCENE_GROUP_REFRESH_TYPE_UNLOAD = 2;
}

message SceneActorInfo {
	uint32 map_layer = 2;
	uint32 uid = 14;
	AvatarType avatar_type = 5;
	uint32 base_avatar_id = 8;
}

message NpcMonsterRogueInfo {
	uint32 elite_group = 5;
	uint32 rogue_monster_id = 12;
	uint32 level = 11;
	uint32 hard_level_group = 15;
	uint32 cbiaoplipkj = 7;
}

message NpcMonsterExtraInfo {
	oneof info_case {
		NpcMonsterRogueInfo rogue_game_info = 5;
	}
}

message SceneNpcMonsterInfo {
	bool khjonojkhoi = 1;
	uint32 monster_list = 7;
	uint32 scene_event_id = 8;
	uint32 world_level = 10;
	bool olmmbfofgef = 11;
	NpcMonsterExtraInfo extra_info = 13;
}

message NpcDialogueEventParam {
	uint32 rogue_dialogue_event_id = 8;
	uint32 arg_id = 12;
}

message NpcRogueGameInfo {
	bool cpjgdeldggb = 6;
	uint32 talk_dialogue_id = 8;
	bool mkaflmlnebj = 11;
	uint32 event_unique_id = 2;
	uint32 gfakeaajgbl = 5;
	uint32 aeon_talk_id = 4;
	map<uint32, uint32> oamjlnboleg = 1;
	repeated NpcDialogueEventParam dialogue_event_param_list = 7;
	bool jagdlhmdnpp = 12;
}

message BPBGDLOHKNF {
}

message BDHMAEOPIHI {
	uint32 dmmelmgmhlo = 4;
	bool is_meet = 12;
	uint32 focalaogagj = 6;
}

message NpcExtraInfo {
	oneof info_case {
		NpcRogueGameInfo rogue_game_info = 2;
		BDHMAEOPIHI hpffpibgknn = 8;
		BPBGDLOHKNF feaocmggdip = 11;
	}
}

message SceneNpcInfo {
	uint32 npc_id = 8;
	NpcExtraInfo extra_info = 9;
}

message PropRogueInfo {
	uint32 lmojjcecokp = 2;
	uint32 knnjkoimaic = 14;
	uint32 gabnjbchhpe = 10;
	uint32 room_id = 4;
}

message PropAeonInfo {
	uint32 AddExp = 1;
	uint32 AeonId = 2;
	uint32 DialogueGroupId = 11;
}

message PropChessRogueInfo {
	bool inpfpebpdlf = 12;
	bool ikggfkkboaj = 10;
}

message RogueTournDoorInfo {
	bool hcmkkiiigme = 6;
	uint32 jhgncibopbe = 2;
	uint32 dplcbcgfdho = 14;
}

message RogueMagicDoorInfo {
	uint32 jhgncibopbe = 8;
	bool hcmkkiiigme = 1;
	uint32 dplcbcgfdho = 15;
}

message WorkbenchFuncIdInfo {
	bool dpkmepaahin = 1;
	uint32 cbahfgpjemp = 6;
}

message RogueTournWorkbenchInfo {
	repeated WorkbenchFuncIdInfo kjipfmbkejl = 1;
	uint32 lplhljipmhc = 3;
}

message workbench_idRogueGambleMachineInfo {
	uint32 dekmckdjlmc = 9;
	BLKFPMIBJKO nofjpppaike = 14;
}

message RogueCurseChestInfo {
	uint32 ccfnindaogj = 12;
}

message PropExtraInfo {
	oneof infoCase_ {
		PropRogueInfo RogueInfo = 15;
		PropAeonInfo AeonInfo = 8;
		PropChessRogueInfo ChessRogueInfo = 6;
		RogueTournDoorInfo RogueTournDoorInfo = 2;
		RogueTournWorkbenchInfo RogueTournWorkbenchInfo = 11;
		workbench_idRogueGambleMachineInfo RogueGambleMachineInfo = 1;
		RogueCurseChestInfo RogueCurseChestInfo = 9;
		RogueMagicDoorInfo RogueMagicDoorInfo = 14;
	}
}

message HNEBCFCDMPC {
	bool bbcnhcejfbp = 10;
	uint32 efdiadoejob = 4;
	bytes hbblkjgckpf = 9;
}

message ScenePropInfo {
	PropExtraInfo extra_info = 10;
	uint32 prop_state = 11;
	HNEBCFCDMPC hmgcoanonll = 13;
	uint32 prop_id = 3;
	uint32 life_time_ms = 2;
	uint64 create_time_ms = 9;
	repeated string trigger_name_list = 4;
}

message SceneSummonUnitInfo {
	uint32 caster_entity_id = 4;
	int32 life_time_ms = 6;
	uint64 create_time_ms = 10;
	uint32 summon_unit_id = 13;
	repeated string trigger_name_list = 14;
	uint32 attach_entity_id = 5;
}

message SceneEntityInfo {
	SceneActorInfo actor = 11;
	SceneNpcMonsterInfo npc_monster = 9;
	SceneNpcInfo npc = 13;
	ScenePropInfo prop = 7;
	SceneSummonUnitInfo summon_unit = 4;
	uint32 entity_id = 2;
	uint32 group_id = 14;
	uint32 inst_id = 6;
	MotionInfo Motion = 10;
}

message BuffInfo {
	uint32 buff_id = 14;
	uint64 add_time_ms = 10;
	uint32 base_avatar_id = 8;
	uint32 count = 1;
	float life_time = 6;
	map<string, float> dynamic_values = 15;
	uint32 buff_summon_entity_id = 11;
	uint32 level = 3;
}

message EntityBuffInfo {
	uint32 entity_id = 14;
	repeated BuffInfo buff_list = 9;
}

message MechanismBarInfo {
	uint32 value = 15;
	uint32 lgjicbpffcf = 9;
}

message CustomSaveData {
	string save_data = 10;
	uint32 group_id = 14;
}

message DLIBJAFBHEA {
	uint32 hichlooflbd = 2;
	uint32 pbiablpekob = 15;
}

message SceneGroupInfo {
	//map<string, int32> gbnnlkibhon = 9;
	uint32 group_id = 13;
	repeated SceneEntityInfo entity_list = 10;
	uint32 state = 8;
}

message ClientGroupInfo {
	uint32 group_id = 10;
	bool is_default = 9;
	uint32 state = 12;
}

message MissionStatusBySceneInfo {
	repeated uint32 kckknnnlpdd = 1;
	repeated MainMissionCustomValue main_mission_mcv_list = 2;
	repeated Mission sub_mission_status_list = 14;
	repeated uint32 finished_main_mission_id_list = 4;
	repeated uint32 aoeodfgekko = 10;
}

message SceneInfo {
	// uint32 game_mode_type = 5;
	uint32 world_id = 5;
	repeated SceneGroupInfo scene_group_list = 1301;
	uint32 game_story_line_id = 27;
	uint32 entry_id = 14;
	repeated EntityBuffInfo entity_buff_info_list = 8;
	repeated SceneEntityInfo entity_list = 4;
	uint32 leader_entity_id = 11;
	uint32 plane_id = 10;
	repeated CustomSaveData custom_data_list = 13;
	repeated BuffInfo scene_buff_info_list = 2;
	MissionStatusBySceneInfo scene_mission_info = 1039;
	uint32 content_id = 1348;
	uint32 dimension_id = 1130;
	map<string, int32> floor_saved_data = 1313;
	uint32 game_mode_type = 9;
	// uint32 world_id = 9;
	map<uint32, DLIBJAFBHEA> fhlamihooja = 15;
	repeated uint32 lighten_section_list = 1;
	uint32 default_pos = 6;
	uint32 floor_id = 7;
	repeated ClientGroupInfo client_group_list = 1512;
	repeated uint32 mglhebhjabe = 1064;
}

message EntityMotion {
	bool kkbdjdlhmkf = 14;
	uint32 map_layer = 4;
	uint32 entity_id = 2;
	MotionInfo motion = 11;
}

// NMMHHNOMDIE (1436)
message SceneEntityMoveCsReq {
	uint32 entry_id = 8;
	uint64 dcmncgdjobj = 15;
	repeated EntityMotion entity_motion_list = 9;
}

// IKLMJGAGBFL (1495)
message SceneEntityMoveScRsp {
	repeated EntityMotion entity_motion_list = 11;
	ClientDownloadData download_data = 7;
	uint32 retcode = 8;
}

// HFOENJFJIPC (1434)
message SceneEntityMoveScNotify {
	uint32 client_pos_version = 15;
	uint32 entry_id = 2;
	uint32 entity_id = 4;
	MotionInfo motion = 1;
}

// HKLLHIDBBNH (1443)
message SceneUpdatePositionVersionNotify {
	uint32 pos_version = 6;
}

// KNNHECKKOPF (1484)
message InteractPropCsReq {
	uint32 prop_entity_id = 10;
	uint32 interact_id = 2;
}

// IHAPJHMICAH (1427)
message InteractPropScRsp {
	uint32 prop_state = 7;
	uint32 retcode = 9;
	uint32 prop_entity_id = 1;
}

// BCBNCPPLOJF (1424)
message ChangePropTimelineInfoCsReq {
	uint64 dnmmbglnjei = 8;
	uint32 prop_entity_id = 15;
	HNEBCFCDMPC hmgcoanonll = 11;
	bool is_close_map = 10;
}

// EPADAIACCOI (1493)
message ChangePropTimelineInfoScRsp {
	uint32 retcode = 11;
	uint32 prop_entity_id = 5;
}

message HitMonsterBattleInfo {
	MonsterBattleType monster_battle_type = 13;
	uint32 target_monster_entity_id = 1;
}

message DynamicValue {
	string key = 4;
	float value = 10;
}

message AssistMonsterEntityInfo {
	repeated uint32 entity_id_list = 8;
}

// IEDNBLPMKEC (1467)
message SceneCastSkillCsReq {
	uint32 attacked_group_id = 13;
	uint32 caster_id = 3;
	repeated uint32 hit_target_entity_id_list = 2;
	uint32 elooddmmnia = 14;
	uint32 skill_index = 11;
	repeated SkillExtraTag skill_extra_tags = 6;
	string maze_ability_str = 7;
	repeated uint32 assist_monster_entity_id_list = 12;
	repeated AssistMonsterEntityInfo assist_monster_entity_info = 4;
	repeated DynamicValue dynamic_values = 15;
	MotionInfo target_motion = 9;
}

// BBBJBIIBOEO (1428)
message SceneCastSkillScRsp {
	SceneBattleInfo battle_info = 5;
	uint32 attacked_group_id = 2;
	uint32 retcode = 12;
	repeated HitMonsterBattleInfo monster_battle_info = 15;
}

// CNMDEGBEPNA (1425)
message SceneCastSkillCostMpCsReq {
	uint32 skill_index = 14;
	uint32 attacked_group_id = 1;
	uint32 caster_id = 2;
}

// HNMMMODHKJP (1496)
message SceneCastSkillCostMpScRsp {
	uint32 retcode = 13;
	uint32 attacked_group_id = 1;
}

// HJAIDKGBDOO (1405)
message SceneCastSkillMpUpdateScNotify {
	uint32 attacked_group_id = 7;
	uint32 mp = 10;
}

// PNMKHIIEOBN (1459)
message SceneEnterStageCsReq {
	bool ejgpcipheed = 12;
	RebattleType rebattle_type = 14;
	uint32 event_id = 15;
}

// KNMNAPBPHDD (1412)
message SceneEnterStageScRsp {
	uint32 retcode = 7;
	SceneBattleInfo battle_info = 8;
}

// GNBOIIJIGNL (1478)
message SceneReviveAfterRebattleCsReq {
	RebattleType rebattle_type = 14;
}

// NEHPGNNNLOJ (1429)
message SceneReviveAfterRebattleScRsp {
	uint32 retcode = 14;
}

// MLMJCNAOMAH (1452)
message GetCurSceneInfoCsReq {
}

// LFIBPOJKAAF (1474)
message GetCurSceneInfoScRsp {
	SceneInfo scene = 1;
	uint32 retcode = 11;
}

message EntityBuffChangeInfo {
	oneof info_case {
		BuffInfo buff_change_info = 15;
		uint32 remove_buff_id = 5;
	}
	uint32 entity_id = 11;
	uint32 attacked_group_id = 7;
	SceneEntityBuffChangeType reason = 10;
}

// COANODDGHHE (1446)
message SyncEntityBuffChangeListScNotify {
	repeated EntityBuffChangeInfo entity_buff_change_list = 7;
}

// GAAHDNNGPAH (1419)
message SpringRefreshCsReq {
	uint32 plane_id = 5;
	uint32 floor_id = 1;
	uint32 prop_entity_id = 14;
}

// BLDFJBPCABK (1426)
message SpringRefreshScRsp {
	uint32 retcode = 10;
}

// ACNCEPGALHN (1407)
message LastSpringRefreshTimeNotify {
	int64 kkjmjjafmpd = 6;
}

// CKOFMIDJACK (1453)
message ReturnLastTownCsReq {
}

// CJLBBBJODPN (1490)
message ReturnLastTownScRsp {
	uint32 retcode = 12;
	SceneInfo scene = 9;
}

// CPKFPKMNAAL (1450)
message EnterSectionCsReq {
	uint32 section_id = 9;
}

// ICBNCNKMEPO (1448)
message EnterSectionScRsp {
	uint32 retcode = 9;
}

// CJAPGMJMPBG (1410)
message SetCurInteractEntityCsReq {
	uint32 entity_id = 9;
}

// BEINMOGHDFF (1476)
message SetCurInteractEntityScRsp {
	uint32 retcode = 9;
}

// IBLGOGEKOPN (1435)
message RecoverAllLineupCsReq {
}

// GOPEMIINNDA (1473)
message RecoverAllLineupScRsp {
	uint32 retcode = 2;
}

// SavePointsInfoNotify (1417)
message SavePointsInfoNotify {
	int64 RefreshTime = 12;
	uint32 ValidTimes = 14;
}

// BPDNOJJGKOP (1413)
message StartCocoonStageCsReq {
	uint32 prop_entity_id = 13;
	uint32 world_level = 15;
	uint32 wave = 1;
	uint32 cocoon_id = 9;
}

// StartCocoonStageScRsp (1421)
message StartCocoonStageScRsp {
	SceneBattleInfo BattleInfo = 2;
	uint32 cocoon_id = 5;
	uint32 prop_entity_id = 11;
	uint32 wave = 10;
	uint32 retcode = 6;
}

// AOPDLMINKIN (1465)
message EntityBindPropCsReq {
	bool analihkipmb = 8;
	MotionInfo motion = 9;
}

// EKKOKPJCMLA (1408)
message EntityBindPropScRsp {
	uint32 retcode = 6;
}

// NAOFAIAGEOM (1418)
message SetClientPausedCsReq {
	bool is_paused = 9;
}

// AKGFNMALEPB (1437)
message SetClientPausedScRsp {
	uint32 retcode = 6;
	bool is_paused = 4;
}

// LJCKJBAFBAA (1479)
message DeactivateFarmElementCsReq {
	uint32 entity_id = 4;
}

// GKEEDDPHNMM (1481)
message DeactivateFarmElementScRsp {
	uint32 retcode = 14;
	uint32 entity_id = 7;
}

// CBGHPJOFPJN (1439)
message ActivateFarmElementCsReq {
	uint32 entity_id = 4;
	uint32 world_level = 7;
}

// DKNCFIEGLOB (1455)
message ActivateFarmElementScRsp {
	uint32 retcode = 12;
	uint32 entity_id = 7;
	uint32 world_level = 6;
}

message AvatarPresetHp {
	uint32 fdclmiaepab = 5;
	uint32 avatar_id = 13;
}

message SpringRecoverConfig {
	repeated AvatarPresetHp avatar_preset_hp_list = 1;
	uint32 default_hp = 8;
	bool auto_recover_hp = 5;
}

// DJBGMOJKOOD (1499)
message UpdateMechanismBarScNotify {
	MechanismBarInfo gjedckbokka = 12;
	uint32 plane_id = 13;
	uint32 floor_id = 11;
}

// ELFHOHJAHPH (1403)
message SetGroupCustomSaveDataCsReq {
	uint32 group_id = 5;
	uint32 entry_id = 6;
	string save_data = 14;
}

// HINPIPPFMAE (1440)
message SetGroupCustomSaveDataScRsp {
	uint32 retcode = 2;
	uint32 group_id = 13;
	uint32 entry_id = 11;
}

// DJEIMIHPIFK (1433)
message ReEnterLastElementStageCsReq {
	uint32 stage_id = 9;
}

// MGLMFFMDFEC (1497)
message ReEnterLastElementStageScRsp {
	uint32 stage_id = 13;
	uint32 retcode = 11;
	SceneBattleInfo battle_info = 10;
}

// CEKAEMILJHN (1483)
message SceneEntityTeleportCsReq {
	EntityMotion entity_motion = 4;
	uint32 entry_id = 3;
}

// BJGEJCIOMLM (1468)
message SceneEntityTeleportScRsp {
	uint32 retcode = 2;
	EntityMotion entity_motion = 4;
	uint32 client_pos_version = 1;
}

// PEGJEKJGBCD (1457)
message EnterSceneCsReq {
	uint32 content_id = 4;
	uint32 teleport_id = 9;
	uint32 entry_id = 13;
	uint32 game_story_line_id = 15;
	bool is_close_map = 6;
}

// GJFPGKODLGO (1416)
message EnterSceneScRsp {
	uint32 retcode = 8;
	uint32 game_story_line_id = 1;
	bool is_close_map = 12;
	bool is_over_map = 13;
	uint32 content_id = 5;
}

// LMPNHAHFEKA (1447)
message EnterSceneByServerScNotify {
	SceneInfo scene = 5;
	EnterSceneReason reason = 4;
	LineupInfo lineup = 14;
}

// IIKGHPBMDJL (1449)
message ScenePlaneEventScNotify {
	ItemList get_item_list = 7;
	// ItemList ohdeanjbmdj = 10;
	// ItemList igfddmglhdg = 11;
	// ItemList get_item_list = 5;
}

// AKOMBKODCKB (1470)
message GetSceneMapInfoCsReq {
	repeated uint32 entry_id = 13;
	uint32 entry_story_line_id = 12;
	bool pnbfdkenojp = 8;
	repeated uint32 entry_id_list = 5;
	uint32 content_id = 9;
}

message MazePropState {
	uint32 config_id = 5;
	uint32 state = 10;
	uint32 group_id = 8;
}

message MazeGroup {
	repeated uint32 lfnjkjeeljg = 9;
	uint32 group_id = 6;
	bool idmjikenlbk = 13;
	int64 mdimdnebjcd = 15;
}

message ChestInfo {
	uint32 opened_num = 12;
	ChestType chest_type = 10;
	uint32 exist_num = 14;
}

message CGGFKBBKBDD {
	uint32 kodkcbemimj = 5;
	uint32 ncodllblgmm = 8;
	uint32 type = 3;
}

message SceneMapInfo {
	uint32 cur_map_entry_id = 9;
	repeated MazePropState maze_prop_list = 12;
	uint32 content_id = 13;
	repeated uint32 unlock_teleport_list = 8;
	uint32 entry_story_line_id = 10;
	repeated MazeGroup maze_group_list = 5;
	uint32 floor_id = 14;
	map<string, int32> floor_saved_data = 6;
	uint32 dimension_id = 15;
	repeated uint32 lighten_section_list = 4;
	uint32 retcode = 1;
	uint32 entry_id = 7;
	repeated CGGFKBBKBDD ekdollecggm = 11;
	repeated ChestInfo chest_list = 3;
}

// HEPLOMJCIOA (1498)
message GetSceneMapInfoScRsp {
	repeated SceneMapInfo map_info_list = 3;
	bool pnbfdkenojp = 13;
	uint32 retcode = 9;
}

// LKBEIENFBJB (1491)
message SyncServerSceneChangeNotify {
}

// NGBIHILCNJA (1409)
message GameplayCounterCountDownCsReq {
	uint32 cur_times = 4;
	uint32 ckagpdjlbga = 14;
}

// DDNFIOFCFOK (1420)
message GameplayCounterCountDownScRsp {
	uint32 retcode = 1;
}

// AEOEJFIOPLP (1401)
message GameplayCounterUpdateScNotify {
	uint32 pbiablpekob = 9;
	uint32 ckagpdjlbga = 14;
	GameplayCounterUpdateReason reason = 5;
}

// OFBCAOFGKME (1482)
message GameplayCounterRecoverCsReq {
	uint32 koiljfnccfm = 10;
	uint32 ckagpdjlbga = 3;
}

// BCPIACINAMC (1480)
message GameplayCounterRecoverScRsp {
	uint32 retcode = 13;
}

// DNGPHOMFAMB (1456)
message UpdateFloorSavedValueNotify {
	uint32 floor_id = 14;
	map<string, int32> mmaofkcabib = 2;
	uint32 dimension_id = 3;
	uint32 plane_id = 10;
}

// LEEADNPNPGI (1444)
message GetUnlockTeleportCsReq {
	repeated uint32 entry_id_list = 12;
}

// NCEHAOOMCMI (1423)
message GetUnlockTeleportScRsp {
	uint32 retcode = 12;
	repeated uint32 unlock_teleport_list = 11;
}

// GMPMCPIELEL (1469)
message OpenChestScNotify {
	uint32 ccfnindaogj = 6;
}

message SceneGroupEntityRefreshInfo {
  SceneEntityInfo refresh_entity_info = 8;
  uint32 delete_entity = 12; // KGLMIMBICIN
  uint32 melfhaojlel = 13;
}

message OGBCPDFIANF {
	int32 fcdaephkfok = 7;
	int32 nnbjmfppeai = 4;
	string hlomdjjpmep = 8;
}

message SceneGroupRefreshInfo {
	uint32 state = 15;
	repeated SceneGroupEntityRefreshInfo refresh_entity_list = 13;
	SceneGroupRefreshType refresh_type = 9;
	//repeated OGBCPDFIANF ifcbegflpgc = 12;
	uint32 group_id = 14;
}

// CGLMDPBGHCA (1432)
message SceneGroupRefreshScNotify {
	repeated SceneGroupRefreshInfo refresh_group_list = 2;
}

message GroupStateInfo {
	uint32 group_state = 15; // MIJHFMNPLIP ??
	uint32 hooiclkbeff = 14;
	uint32 entry_id = 9;
	uint32 group_id = 13;
}

// FDOLEJHGDNM (1438)
message GroupStateChangeCsReq {
	GroupStateInfo group_state_info = 10;
}

// MKLLLHMKEJC (1487)
message GroupStateChangeScRsp {
	uint32 retcode = 11;
	GroupStateInfo group_state_info = 9;
}

// GJKHOBEJMIN (1486)
message GroupStateChangeScNotify {
	GroupStateInfo group_state_info = 10;
}

message EnteredSceneInfo {
	uint32 floor_id = 12;
	uint32 plane_id = 3;
}

// NFCMFPECEBG (1466)
message GetEnteredSceneCsReq {
}

// AALOOODHCLC (1463)
message GetEnteredSceneScRsp {
	uint32 retcode = 2;
	repeated EnteredSceneInfo entered_scene_info_list = 14;
}

// GBOGACDAJNL (1489)
message EnteredSceneChangeScNotify {
	repeated EnteredSceneInfo entered_scene_info_list = 12;
}

// KFCBBFIGEOE (1415)
message RefreshTriggerByClientCsReq {
	MotionInfo trigger_motion = 6;
	repeated uint32 trigger_target_id_list = 14;
	string trigger_name = 13;
	uint32 trigger_entity_id = 5;
}

// BBEKPAAIMIO (1485)
message RefreshTriggerByClientScRsp {
	uint32 trigger_entity_id = 15;
	bool refresh_trigger = 5;
	string trigger_name = 12;
	uint32 retcode = 7;
}

// GLOIIMGIGGH (1462)
message RefreshTriggerByClientScNotify {
	uint32 trigger_entity_id = 1;
	string trigger_name = 2;
	repeated uint32 trigger_target_id_list = 3;
}

// IKDBIMPCKFH (1402)
message DeleteSummonUnitCsReq {
	repeated uint32 entity_id_list = 4;
}

// KAIILAGLEDM (1406)
message DeleteSummonUnitScRsp {
	repeated uint32 entity_id_list = 11;
	uint32 retcode = 1;
}

// IJHPIHINIFK (1471)
message UnlockedAreaMapScNotify {
	repeated uint32 entry_id_list = 15;
}

// IHFEMCMGCDP (1414)
message UnlockTeleportNotify {
	uint32 entry_id = 3;
	uint32 teleport_id = 7;
}

// LLNPAOMKKFC (1451)
message UpdateGroupPropertyCsReq {
	uint32 floor_id = 2;
	int32 lkpfmbibeen = 13;
	string hlomdjjpmep = 12;
	uint32 dimension_id = 6;
	uint32 group_id = 4;
}

// PFJALHBLFPM (1442)
message UpdateGroupPropertyScRsp {
	uint32 floor_id = 5;
	uint32 retcode = 14;
	string hlomdjjpmep = 10;
	uint32 group_id = 13;
	int32 fcdaephkfok = 11;
	uint32 dimension_id = 3;
	int32 nnbjmfppeai = 2;
}

// NMGLEBDEAEM
enum CmdServerPrefsType {
	CmdServerPrefsTypeNone = 0;
	CmdGetAllServerPrefsDataCsReq = 6136;
	CmdGetAllServerPrefsDataScRsp = 6195;
	CmdGetServerPrefsDataScRsp = 6127;
	CmdUpdateServerPrefsDataCsReq = 6167;
	CmdUpdateServerPrefsDataScRsp = 6128;
	CmdGetServerPrefsDataCsReq = 6184;
}

message ServerPrefs {
	uint32 server_prefs_id = 4;
	bytes data = 13;
}

// CDIIHHHJHJJ (6136)
message GetAllServerPrefsDataCsReq {
}

// KLKFJIKOBCJ (6195)
message GetAllServerPrefsDataScRsp {
	repeated ServerPrefs server_prefs_list = 6;
	uint32 retcode = 5;
}

// NILKDJLPGNJ (6184)
message GetServerPrefsDataCsReq {
	uint32 server_prefs_id = 6;
}

// BBAHFJEFLCH (6127)
message GetServerPrefsDataScRsp {
	uint32 retcode = 15;
	ServerPrefs server_prefs = 5;
}

// PDKFHHKNJBE (6167)
message UpdateServerPrefsDataCsReq {
	ServerPrefs server_prefs = 10;
}

// EAOHPGPFMCO (6128)
message UpdateServerPrefsDataScRsp {
	uint32 retcode = 14;
	uint32 server_prefs_id = 15;
}

// CPCJAHAJGCA
enum CmdShopType {
	CmdShopTypeNone = 0;
	CmdGetShopListCsReq = 1536;
	CmdTakeCityShopRewardCsReq = 1567;
	CmdTakeCityShopRewardScRsp = 1528;
	CmdCityShopInfoScNotify = 1552;
	CmdBuyGoodsCsReq = 1584;
	CmdBuyGoodsScRsp = 1527;
	CmdGetShopListScRsp = 1595;
}

message Shop {
	int64 EndTime = 10;
	uint32 ShopId = 14;
	uint32 CityLevel = 4;
	uint32 CityExp = 9;
	repeated Goods GoodsList = 15;
	int64 BeginTime = 7;
	uint64 CityTakenLevelReward = 2;
}

message Goods {
	uint32 BuyTimes = 11;
	int64 EndTime = 10;
	uint32 GoodsId = 9;
	int64 BeginTime = 5;
	uint32 ItemId = 8;
}

// INFBCIADHAA (1536)
message GetShopListCsReq {
	uint32 eihgflihjeo = 4;
}

// GetShopListScRsp (1595)
message GetShopListScRsp {
	uint32 ShopType = 7;
	repeated Shop ShopList = 10;
	uint32 retcode = 5;
}

// MDOEJKLOHDF (1584)
message BuyGoodsCsReq {
	uint32 shop_id = 8;
	repeated uint32 hfglhjpdbhi = 7;
	uint32 pimkbiogeek = 13;
	uint32 item_id = 4;
	uint32 goods_id = 3;
	uint32 interacted_prop_entity_id = 1;
}

// BuyGoodsScRsp (1527)
message BuyGoodsScRsp {
	uint32 retcode = 7;
	ItemList ReturnItemList = 2;
	uint32 GoodsBuyTimes = 14;
	uint32 ShopId = 4;
	uint32 GoodsId = 6;
}

// GLIEHNLKPNK (1567)
message TakeCityShopRewardCsReq {
	uint32 shop_id = 15;
	uint32 level = 9;
}

// TakeCityShopRewardScRsp (1528)
message TakeCityShopRewardScRsp {
	ItemList Reward = 8;
	uint32 ShopId = 1;
	uint32 Level = 7;
	uint32 retcode = 13;
}

// CityShopInfoScNotify (1552)
message CityShopInfoScNotify {
	uint64 TakenLevelReward = 2;
	uint32 ShopId = 1;
	uint32 Exp = 5;
	uint32 Level = 9;
}

// NCCBHADAKND
enum CmdSpaceZooType {
	CmdSpaceZooTypeNone = 0;
	CmdSpaceZooExchangeItemCsReq = 6743;
	CmdSpaceZooDeleteCatCsReq = 6724;
	CmdSpaceZooExchangeItemScRsp = 6746;
	CmdSpaceZooOpCatteryScRsp = 6774;
	CmdSpaceZooOpCatteryCsReq = 6752;
	CmdSpaceZooMutateScRsp = 6728;
	CmdSpaceZooDeleteCatScRsp = 6793;
	CmdSpaceZooCatUpdateNotify = 6734;
	CmdSpaceZooBornScRsp = 6727;
	CmdSpaceZooTakeCsReq = 6725;
	CmdSpaceZooDataScRsp = 6795;
	CmdSpaceZooBornCsReq = 6784;
	CmdSpaceZooDataCsReq = 6736;
	CmdSpaceZooMutateCsReq = 6767;
	CmdSpaceZooTakeScRsp = 6796;
}

message DGDPOCNFNBM {
	uint32 unique_id = 5;
	repeated uint32 embmpbohmgg = 13;
	uint32 lbpafkhbbbi = 10;
	uint32 ilmooinijdk = 12;
	bool nldfkohieel = 1;
	repeated uint32 item_list = 11;
}

message KJEPLFPALCB {
	uint32 kbmbakapfha = 10;
	uint32 ilmooinijdk = 2;
}

// MJBPIENEDPJ (6736)
message SpaceZooDataCsReq {
}

// KPGCMHMPJIB (6795)
message SpaceZooDataScRsp {
	repeated uint32 bplhdfjmpoa = 7;
	repeated uint32 pkhaghjonef = 9;
	repeated DGDPOCNFNBM mncjpjlpcha = 2;
	repeated uint32 lkdldpbnncm = 14;
	uint32 njfkpopaleh = 1;
	repeated KJEPLFPALCB nnmlpgmccmj = 8;
	uint32 retcode = 4;
	repeated uint32 bcajbbmbfkn = 5;
	repeated uint32 gedhaapebng = 12;
}

// ILEMKEIIECI (6784)
message SpaceZooBornCsReq {
	uint32 emljneelbff = 2;
	repeated uint32 glofajbilec = 7;
}

// FBBNKAGDEGD (6727)
message SpaceZooBornScRsp {
	repeated KJEPLFPALCB kopmcfpapel = 8;
	bool neplpodchpe = 10;
	uint32 retcode = 3;
	DGDPOCNFNBM ofeikonfeif = 1;
}

// BBDFLNKBELJ (6767)
message SpaceZooMutateCsReq {
	uint32 item_id = 4;
	uint32 unique_id = 9;
}

// NFDLCHIJMHC (6728)
message SpaceZooMutateScRsp {
	DGDPOCNFNBM ifpjoppdjga = 13;
	uint32 retcode = 15;
	repeated KJEPLFPALCB kopmcfpapel = 1;
	bool neplpodchpe = 11;
}

// PPIABGJINMH (6752)
message SpaceZooOpCatteryCsReq {
	uint32 pafacahfikj = 13;
	uint32 lkmlbdckoof = 2;
	uint32 op_type = 12;
}

// DIKABHLMGKH (6774)
message SpaceZooOpCatteryScRsp {
	uint32 retcode = 7;
	repeated uint32 lkdldpbnncm = 13;
}

// JNIHIPIDKDL (6724)
message SpaceZooDeleteCatCsReq {
	repeated uint32 kpgoiepklep = 6;
}

// JEMFCBCAJOD (6793)
message SpaceZooDeleteCatScRsp {
	repeated uint32 nobkelimkah = 6;
	uint32 retcode = 12;
}

// CFOFGKFFNHD (6734)
message SpaceZooCatUpdateNotify {
	bool dfjemmhokon = 10;
	bool neplpodchpe = 2;
	repeated DGDPOCNFNBM pajglfnjloi = 15;
}

// FDDBDKJBLMP (6743)
message SpaceZooExchangeItemCsReq {
	uint32 item_id = 4;
}

// MODPLKPLALN (6746)
message SpaceZooExchangeItemScRsp {
	uint32 item_id = 3;
	uint32 retcode = 4;
}

// EDAJLOHCFIF (6725)
message SpaceZooTakeCsReq {
	uint32 fmokhegldjg = 6;
}

// MIKLBCEGFDE (6796)
message SpaceZooTakeScRsp {
	uint32 retcode = 4;
	uint32 fmokhegldjg = 14;
	ItemList reward = 3;
}

// NJIKDINOEBG
enum CmdStarFightType {
	CmdStarFightTypeNone = 0;
	CmdGetStarFightDataCsReq = 7169;
	CmdStarFightDataChangeNotify = 7161;
	CmdStartStarFightLevelCsReq = 7163;
	CmdGetStarFightDataScRsp = 7170;
	CmdStartStarFightLevelScRsp = 7168;
}

message JJDILBLLAAB {
	uint32 gmcoefgkdmf = 9;
	uint32 fdaoflfkakc = 3;
	uint32 hiekkdonheb = 4;
	bool lkflbadkbpg = 15;
	uint32 group_id = 5;
}

// PMEONLPGGLM (7169)
message GetStarFightDataCsReq {
}

// OALPJKCDFCH (7170)
message GetStarFightDataScRsp {
	uint32 retcode = 1;
	repeated JJDILBLLAAB kobhopifcdp = 7;
}

message KBLPGMIDFEG {
	AvatarType avatar_type = 13;
	uint32 avatar_id = 5;
}

// LEKHGAMJBBB (7163)
message StartStarFightLevelCsReq {
	repeated KBLPGMIDFEG avatar_list = 6;
	uint32 ibafdobbegd = 5;
	uint32 group_id = 4;
}

// OGOMDNLMFGF (7168)
message StartStarFightLevelScRsp {
	uint32 ibafdobbegd = 8;
	uint32 group_id = 9;
	uint32 retcode = 10;
	SceneBattleInfo battle_info = 5;
}

// NKJACOBDCOA (7161)
message StarFightDataChangeNotify {
	uint32 group_id = 4;
	JJDILBLLAAB dibonjdplce = 7;
}

// MFBOEBJDJCF
enum CmdStoryLineType {
	CmdStoryLineTypeNone = 0;
	CmdGetStoryLineInfoCsReq = 6236;
	CmdStoryLineTrialAvatarChangeScNotify = 6252;
	CmdChangeStoryLineFinishScNotify = 6228;
	CmdStoryLineInfoScNotify = 6284;
	CmdGetStoryLineInfoScRsp = 6295;
}

enum ENFBNDEMAKD {
	ChangeStoryLineAction_None = 0;
	ChangeStoryLineAction_FinishAction = 1;
	ChangeStoryLineAction_Client = 2;
	ChangeStoryLineAction_CustomOP = 3;
}

// JDPBIFNHGIC (6236)
message GetStoryLineInfoCsReq {
}

// PALEACIFOAK (6295)
message GetStoryLineInfoScRsp {
	uint32 giiigplnibn = 1;
	uint32 retcode = 2;
	repeated uint32 eljinbjeael = 11;
	repeated uint32 gkmbnpafggb = 9;
}

// OLNJDBBBGKN (6284)
message StoryLineInfoScNotify {
	uint32 giiigplnibn = 11;
	repeated uint32 gkmbnpafggb = 1;
	repeated uint32 eljinbjeael = 14;
	uint32 pkpbkkbbppg = 5;
}

// CPCCMKKNJLO (6228)
message ChangeStoryLineFinishScNotify {
	bool gbnibdpfkjn = 10;
	uint32 ccchfdponnj = 4;
	ENFBNDEMAKD boamjekjjle = 13;
	uint32 giiigplnibn = 8;
}

// GCIDPAOBILH (6252)
message StoryLineTrialAvatarChangeScNotify {
	repeated uint32 aaeaaeonboe = 4;
	repeated uint32 cgkfopjcgln = 11;
	bool clgklcheoea = 9;
}

// FMFKLMHHLGN
enum CmdStrongChallengeActivityType {
	CmdStrongChallengeActivityTypeNone = 0;
	CmdGetStrongChallengeActivityDataCsReq = 6636;
	CmdEnterStrongChallengeActivityStageScRsp = 6627;
	CmdStrongChallengeActivityBattleEndScNotify = 6667;
	CmdGetStrongChallengeActivityDataScRsp = 6695;
	CmdEnterStrongChallengeActivityStageCsReq = 6684;
}

message StrongChallengeAvatar {
	AvatarType AvatarType = 4;
	uint32 AvatarId = 7;
}

message StrongChallengeAvatarData {
	repeated uint32 buff_list = 8;
	repeated StrongChallengeAvatar avatar_list = 12;
}

message StrongChallengeActivityData {
	uint32 stage_id = 4;
	StrongChallengeAvatarData fnelbpffamh = 10;
	uint32 max_score = 11;
	uint32 panel_id = 12;
	uint32 dpocofibbko = 5;
}

message StrongChallengeActivityInfo {
	map<uint32, StrongChallengeActivityData> donehdjmhad = 8;
}

// BHHJBBGDEHB (6636)
message GetStrongChallengeActivityDataCsReq {
}

// NPMMOCCMOCB (6695)
message GetStrongChallengeActivityDataScRsp {
	StrongChallengeActivityInfo akfkhfbbohd = 8;
	uint32 retcode = 6;
}

// AAAJNGLEKJG (6684)
message EnterStrongChallengeActivityStageCsReq {
	repeated uint32 buff_list = 14;
	repeated StrongChallengeAvatar avatar_list = 10;
	uint32 stage_id = 12;
}

// BDDMEABELEC (6627)
message EnterStrongChallengeActivityStageScRsp {
	SceneBattleInfo battle_info = 11;
	uint32 stage_id = 14;
	uint32 retcode = 10;
}

// LFNFCNEIHLM (6667)
message StrongChallengeActivityBattleEndScNotify {
	uint32 total_damage = 8;
	uint32 max_score = 6;
	BattleEndStatus end_status = 12;
	uint32 acnohlgebcc = 11;
	uint32 laoghkdghde = 5;
	uint32 stage_id = 3;
	uint32 score_id = 13;
	uint32 iijkgneghbo = 7;
}

// IJNLGMIKEEC
enum CmdSummonActivityType {
	CmdSummonActivityTypeNone = 0;
	CmdGetSummonActivityDataCsReq = 7569;
	CmdEnterSummonActivityStageCsReq = 7563;
	CmdSummonActivityBattleEndScNotify = 7561;
	CmdGetSummonActivityDataScRsp = 7570;
	CmdEnterSummonActivityStageScRsp = 7568;
}

message FIOMFFKFENH {
	uint32 ibafdobbegd = 10;
	uint32 group_id = 2;
	uint32 star = 13;
}

// DLOJEABONCD (7569)
message GetSummonActivityDataCsReq {
}

// BKPOEEFAIMM (7570)
message GetSummonActivityDataScRsp {
	repeated FIOMFFKFENH eedjjeiihmm = 5;
	uint32 retcode = 2;
}

message AJCMJBMFDDM {
	uint32 avatar_id = 10;
	AvatarType avatar_type = 7;
}

// ABPBOENBACO (7563)
message EnterSummonActivityStageCsReq {
	uint32 ibafdobbegd = 12;
	repeated AJCMJBMFDDM avatar_list = 3;
	uint32 group_id = 7;
	AJCMJBMFDDM gjbobbpfkmd = 4;
}

// OFCOHENEHAJ (7568)
message EnterSummonActivityStageScRsp {
	uint32 group_id = 14;
	uint32 ibafdobbegd = 10;
	SceneBattleInfo battle_info = 7;
	uint32 retcode = 3;
}

// GNDIEOEHJEL (7561)
message SummonActivityBattleEndScNotify {
	uint32 star = 4;
	uint32 dpokcfkndig = 1;
	uint32 ibafdobbegd = 8;
	uint32 group_id = 7;
}

// ICGODKOHNJC
enum CmdSwitchHandType {
	CmdSwitchHandTypeNone = 0;
	CmdSwitchHandDataCsReq = 8120;
	CmdSwitchHandFinishScRsp = 8106;
	CmdSwitchHandCoinUpdateCsReq = 8102;
	CmdSwitchHandDataScRsp = 8115;
	CmdSwitchHandFinishCsReq = 8117;
	CmdSwitchHandUpdateScRsp = 8110;
	CmdSwitchHandStartScRsp = 8103;
	CmdSwitchHandStartCsReq = 8107;
	CmdSwitchHandUpdateCsReq = 8105;
	CmdSwitchHandCoinUpdateScRsp = 8108;
}

enum BMAIEKAJJNH {
	SWITCH_HAND_OP_PROP_TYPE_NONE = 0;
	SWITCH_HAND_OP_PROP_TYPE_CATCH = 1;
	SWITCH_HAND_OP_PROP_TYPE_LIFT = 2;
}

message IDCHMMDPNOL {
	MotionInfo jnamjnfmnam = 2;
	uint32 config_id = 11;
	uint32 jeahpaaoaom = 12;
	uint32 mpohfmfdlab = 4;
	bytes joekogclfaa = 14;
}

// PPMFHOMFHJO (8120)
message SwitchHandDataCsReq {
	uint32 config_id = 8;
}

// PKDKHGHOBNE (8115)
message SwitchHandDataScRsp {
	uint32 retcode = 6;
	uint32 hngnkicjnah = 3;
	uint32 ehjedjffafa = 5;
	repeated IDCHMMDPNOL jgngcbnomnf = 8;
}

// IBPEIBKOHLG (8107)
message SwitchHandStartCsReq {
	uint32 config_id = 14;
}

// EJDEALNNEOI (8103)
message SwitchHandStartScRsp {
	uint32 retcode = 6;
	uint32 config_id = 5;
}

// EGANJGNFNNN (8117)
message SwitchHandFinishCsReq {
}

// AFJJDBIJIHM (8106)
message SwitchHandFinishScRsp {
	uint32 retcode = 5;
	IDCHMMDPNOL hjmcimglfcl = 15;
}

message FDMKBJKGGFN {
	uint32 group_id = 15;
	uint32 nponihpdbkc = 11;
	BMAIEKAJJNH op_type = 1;
	uint32 igngkbnpklg = 7;
}

// CDKBGOKMBHB (8105)
message SwitchHandUpdateCsReq {
	IDCHMMDPNOL mleooeedpeg = 2;
	FDMKBJKGGFN dcepibleipo = 5;
}

// HDBIEKKGCBD (8110)
message SwitchHandUpdateScRsp {
	IDCHMMDPNOL hjmcimglfcl = 3;
	uint32 retcode = 12;
	FDMKBJKGGFN dcepibleipo = 13;
}

// INEJBFMGAFP (8102)
message SwitchHandCoinUpdateCsReq {
	uint32 jeahpaaoaom = 14;
}

// DMDMCKEHOIG (8108)
message SwitchHandCoinUpdateScRsp {
	uint32 retcode = 14;
	uint32 jeahpaaoaom = 15;
}

// LIBMCDICKCI
enum CmdSwordTrainingType {
	CmdSwordTrainingTypeNone = 0;
	CmdSwordTrainingGiveUpGameScRsp = 7472;
	CmdEnterSwordTrainingExamScRsp = 7463;
	CmdSwordTrainingGiveUpGameCsReq = 7468;
	CmdSwordTrainingResumeGameScRsp = 7486;
	CmdSwordTrainingSelectEndingCsReq = 7479;
	CmdSwordTrainingGameSyncChangeScNotify = 7462;
	CmdSwordTrainingDialogueSelectOptionScRsp = 7497;
	CmdSwordTrainingStoryBattleScRsp = 7451;
	CmdSwordTrainingStoryConfirmCsReq = 7456;
	CmdSwordTrainingGameSettleScNotify = 7492;
	CmdSwordTrainingDailyPhaseConfirmScRsp = 7459;
	CmdSwordTrainingDailyPhaseConfirmCsReq = 7499;
	CmdSwordTrainingExamResultConfirmCsReq = 7488;
	CmdSwordTrainingTurnActionCsReq = 7473;
	CmdSwordTrainingMarkEndingViewedCsReq = 7457;
	CmdSwordTrainingStoryBattleCsReq = 7481;
	CmdSwordTrainingStartGameScRsp = 7461;
	CmdSwordTrainingRestoreGameCsReq = 7484;
	CmdSwordTrainingExamResultConfirmScRsp = 7483;
	CmdSwordTrainingSetSkillTraceCsReq = 7489;
	CmdEnterSwordTrainingExamCsReq = 7498;
	CmdSwordTrainingActionTurnSettleScNotify = 7487;
	CmdGetSwordTrainingDataCsReq = 7500;
	CmdGetSwordTrainingDataScRsp = 7480;
	CmdSwordTrainingLearnSkillCsReq = 7467;
	CmdSwordTrainingTurnActionScRsp = 7465;
	CmdSwordTrainingLearnSkillScRsp = 7454;
	CmdSwordTrainingStartGameCsReq = 7490;
	CmdSwordTrainingDialogueSelectOptionCsReq = 7493;
	CmdSwordTrainingSelectEndingScRsp = 7475;
	CmdSwordTrainingUnlockSyncScNotify = 7455;
	CmdSwordTrainingStoryConfirmScRsp = 7485;
	CmdSwordTrainingMarkEndingViewedScRsp = 7476;
	CmdSwordTrainingSetSkillTraceScRsp = 7477;
	CmdSwordTrainingResumeGameCsReq = 7453;
	CmdSwordTrainingRestoreGameScRsp = 7469;
}

enum DIADJINAGGA {
	SWORD_TRAIN_GAME_SOURCE_TYPE_NONE = 0;
	SWORD_TRAIN_GAME_SOURCE_TYPE_TURN_SETTLE = 1;
	SWORD_TRAIN_GAME_SOURCE_TYPE_STATUS_UPGRADE = 2;
	SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION = 3;
	SWORD_TRAIN_GAME_SOURCE_TYPE_ACTION_HINT = 4;
	SWORD_TRAIN_GAME_SOURCE_TYPE_STORY = 5;
	SWORD_TRAIN_GAME_SOURCE_TYPE_EXAM_BONUS = 6;
	SWORD_TRAIN_GAME_SOURCE_TYPE_DIALOGUE = 7;
}

enum GLHFKNDLMMF {
	SWORD_TRAINING_DAILY_PHASE_TYPE_NONE = 0;
	SWORD_TRAINING_DAILY_PHASE_TYPE_MORNING = 1;
	SWORD_TRAINING_DAILY_PHASE_TYPE_NOON = 2;
	SWORD_TRAINING_DAILY_PHASE_TYPE_AFTERNOON = 3;
	SWORD_TRAINING_DAILY_PHASE_TYPE_EVENING = 4;
}

enum IDHKDDDCMCA {
	SWORD_TRAINING_STATUS_TYPE_NONE = 0;
	SWORD_TRAINING_STATUS_TYPE_POWER = 1;
	SWORD_TRAINING_STATUS_TYPE_AGILITY = 2;
	SWORD_TRAINING_STATUS_TYPE_TOUGHNESS = 3;
	SWORD_TRAINING_STATUS_TYPE_PERCEPTION = 4;
	_SWORD_TRAINING_STATUS_TYPE_MAX = 5;
}

enum BOEHDKFADAH {
	SWORD_TRAINING_GAME_SETTLE_NONE = 0;
	SWORD_TRAINING_GAME_SETTLE_FINISH = 1;
	SWORD_TRAINING_GAME_SETTLE_GIVE_UP = 2;
	SWORD_TRAINING_GAME_SETTLE_BATTLE_FAILED = 3;
	SWORD_TRAINING_GAME_SETTLE_FORCE = 4;
	SWORD_TRAINING_GAME_SETTLE_BY_RESTORE = 5;
}

message GIBGFEMMKAA {
	EBJNAEAMCMN innjeiheiop = 11;
	ADKIDBBBHNC aflbinkajne = 9;
	repeated uint32 elalcfplbnc = 7;
	IJONOLHFNEI skill_info = 13;
	OGBEGNBIALI ebamonbjkbn = 6;
	JOHIKGBGJBD pplcegekmkc = 8;
	IJKIMBLIPID lcfanolipij = 4;
	uint32 lmbpkeobmhk = 15;
}

message IJONOLHFNEI {
	uint32 noejnpahdek = 11;
	uint32 ljeoilpllpm = 1;
	repeated uint32 jmmaoemlddl = 9;
}

message OGBEGNBIALI {
	uint32 game_story_line_id = 8;
	repeated uint32 lnobdacilgg = 14;
}

message IHEBMKFIOEP {
	uint32 value = 6;
	IDHKDDDCMCA hmoomiicofi = 1;
}

message EBJNAEAMCMN {
	uint32 mlfononeoab = 5;
	uint32 jfcgoddabia = 2;
	repeated IHEBMKFIOEP hnoflcabpei = 6;
}

message LFIBNPHANIL {
	uint32 fhopjnkmnpb = 15;
	uint32 level = 10;
}

message JOHIKGBGJBD {
	repeated LFIBNPHANIL cicjfabhhce = 2;
}

message ADKIDBBBHNC {
	oneof info_case {
		HNIBJCGHCAN jnkcjgmoofk = 15;
		KPCEFHJBOPF fllmjkiefdm = 13;
	}
	uint32 PFEKOEIHBIJ = 1819;
}

message FCDJFINDMAA {
	uint32 dnnhnhabfio = 11;
	uint32 dpcncebmeke = 3;
}

message HNIBJCGHCAN {
	GLHFKNDLMMF bhfbjkigkec = 10;
	repeated FCDJFINDMAA nljgghpehoe = 8;
	repeated uint32 nildbiglcef = 14;
}

message KPCEFHJBOPF {
	uint32 imkbnkdcpcf = 10;
}

message IJKIMBLIPID {
	oneof info_case {
		OKGIBEBKJLJ pbnakgpgbin = 7;
		OFOAGEOMFCN acfkgonedkj = 3;
		ODHKOKKCDME gfhgobjmhla = 6;
		BLNHPKHDACH ipdajegehkc = 2;
		PHFDOEOEGBL kmcdonbpdob = 8;
		AGIOJLEAMKK ecinhifeeee = 12;
		ECFOMPDNODB clobnpjpglb = 11;
		DKLPPHOPHFA eadmhphkfmk = 14;
	}
}

message OKGIBEBKJLJ {
}

message OFOAGEOMFCN {
}

message ODHKOKKCDME {
	uint32 lmjaeipjaom = 3;
}

message BLNHPKHDACH {
}

message PHFDOEOEGBL {
	bool hlnfgidkfjd = 12;
	uint32 jnolagajcle = 7;
}

message AGIOJLEAMKK {
}

message ECFOMPDNODB {
}

message DKLPPHOPHFA {
	bool cnhimgpfnlh = 3;
	uint32 jnolagajcle = 9;
}

message KCCLLEODAPA {
	DIADJINAGGA source = 4;
	EIFLAIKEPDH jgmnmdafjke = 9;
}

message EIFLAIKEPDH {
	oneof info_case {
		BIBHGKHBPKI dibmghfdhjb = 11;
		MPGLNOEOCIF jllpdpfogdn = 6;
		MPGLNOEOCIF hbfmochinai = 2;
		HGJFIONFMBG ncdgidpmnal = 1;
		FCFPNMGMLEB lpkocebhbgd = 8;
		PHFDOEOEGBL njdbgkbjmmh = 7;
		EIKNBAHBBDF nammecpaodb = 4;
		uint32 fegbalaapdc = 10;
		uint32 jfcgoddabia = 1109;
		DKLPPHOPHFA ccombdffeke = 1852;
		AGIOJLEAMKK gjdlhhkepoh = 2026;
		uint32 cekibmfccbb = 185;
	}
}

message EIKNBAHBBDF {
	uint32 lmjaeipjaom = 7;
}

message BIBHGKHBPKI {
	uint32 kikmlgbccae = 4;
	IDHKDDDCMCA hmoomiicofi = 1;
	uint32 jcecgjoapmm = 13;
}

message MPGLNOEOCIF {
	uint32 kikmlgbccae = 2;
	uint32 jcecgjoapmm = 1;
}

message HGJFIONFMBG {
	uint32 fhopjnkmnpb = 14;
	uint32 bkoliaijjgi = 11;
	uint32 level = 1;
}

message FCFPNMGMLEB {
	ADKIDBBBHNC mkmeaenlame = 13;
	uint32 lmbpkeobmhk = 15;
}

message EFJAJPKDCEI {
	uint32 jnolagajcle = 4;
	bool hlnfgidkfjd = 12;
}

// BDANACMNEND (7462)
message SwordTrainingGameSyncChangeScNotify {
	repeated KCCLLEODAPA npfkmgonkfk = 15;
}

message JMHJFJBEODK {
	uint32 id = 4;
	uint32 progress = 14;
}

message FNAHNBKPHAO {
	repeated JMHJFJBEODK bhbipplfhof = 2;
	repeated uint32 aahbgeamdhn = 9;
}

// GCHGAHGCEGB (7500)
message GetSwordTrainingDataCsReq {
}

// EEDBPHJECAG (7480)
message GetSwordTrainingDataScRsp {
	FNAHNBKPHAO pajlkkdofme = 14;
	repeated uint32 gcbojnckmhj = 15;
	bool dkbilmapakf = 1;
	repeated uint32 amkdgphbgib = 12;
	uint32 retcode = 13;
	uint32 bgjmlklkapn = 11;
	GIBGFEMMKAA dcfncdeieom = 7;
	repeated uint32 lnobdacilgg = 9;
}

// NEDHBBDEEPK (7473)
message SwordTrainingTurnActionCsReq {
	repeated uint32 pdncnmkoodc = 14;
	repeated uint32 molfkgikbch = 13;
}

// IPIPNGILPLD (7465)
message SwordTrainingTurnActionScRsp {
	repeated uint32 molfkgikbch = 15;
	uint32 retcode = 11;
}

// PIBEPJDLDFB (7499)
message SwordTrainingDailyPhaseConfirmCsReq {
	GLHFKNDLMMF jdhniknfcba = 2;
}

// NPKCFJHCNLL (7459)
message SwordTrainingDailyPhaseConfirmScRsp {
	uint32 retcode = 1;
	bool ocnklcijjkb = 6;
}

// IEMJGDPKEMJ (7493)
message SwordTrainingDialogueSelectOptionCsReq {
	uint32 cjbdahmahkn = 3;
}

// DBBCOAMCLOL (7497)
message SwordTrainingDialogueSelectOptionScRsp {
	uint32 retcode = 5;
}

// JPJDCMNHGHI (7488)
message SwordTrainingExamResultConfirmCsReq {
}

// MDHDNMNMMLH (7483)
message SwordTrainingExamResultConfirmScRsp {
	uint32 retcode = 9;
}

// PHMANBMFNBN (7498)
message EnterSwordTrainingExamCsReq {
}

// MCOBAGJNALJ (7463)
message EnterSwordTrainingExamScRsp {
	SceneBattleInfo battle_info = 6;
	uint32 retcode = 9;
}

// DFMALKNFJJC (7467)
message SwordTrainingLearnSkillCsReq {
	uint32 skill_id = 9;
}

// EALGEEJKIMM (7454)
message SwordTrainingLearnSkillScRsp {
	uint32 retcode = 8;
	uint32 skill_id = 2;
}

// CFMPHLFHKNG (7490)
message SwordTrainingStartGameCsReq {
	uint32 game_story_line_id = 13;
}

// NEPJHHCNJNG (7461)
message SwordTrainingStartGameScRsp {
	uint32 retcode = 5;
	GIBGFEMMKAA dcfncdeieom = 6;
}

// EOEAKMMHMII (7456)
message SwordTrainingStoryConfirmCsReq {
	uint32 jnolagajcle = 6;
}

// OFBINACAHCO (7485)
message SwordTrainingStoryConfirmScRsp {
	uint32 jnolagajcle = 11;
	uint32 retcode = 10;
}

// AGOOICALBFM (7468)
message SwordTrainingGiveUpGameCsReq {
}

// CHDLEBOMENN (7472)
message SwordTrainingGiveUpGameScRsp {
	uint32 retcode = 7;
}

// INIPHLIAKEN (7492)
message SwordTrainingGameSettleScNotify {
	uint32 game_story_line_id = 14;
	BOEHDKFADAH reason = 10;
	repeated uint32 eifbkojdedh = 1;
	uint32 mkmeaenlame = 9;
	ItemList reward = 4;
	uint32 leknepcgoog = 2;
	uint32 dkhgchahomk = 8;
	repeated uint32 fbajgaioife = 3;
}

// CBFDPOIDJOK (7455)
message SwordTrainingUnlockSyncScNotify {
	repeated JMHJFJBEODK bhbipplfhof = 10;
	repeated uint32 aahbgeamdhn = 1;
}

// ABLGEODEIND (7479)
message SwordTrainingSelectEndingCsReq {
	uint32 apbnekcjhep = 3;
}

// KOFHIIPNIOJ (7475)
message SwordTrainingSelectEndingScRsp {
	uint32 retcode = 10;
	uint32 apbnekcjhep = 6;
}

// EBMCCLOEIAD (7484)
message SwordTrainingRestoreGameCsReq {
}

// OIAOMJHPEAK (7469)
message SwordTrainingRestoreGameScRsp {
	uint32 retcode = 13;
	GIBGFEMMKAA dcfncdeieom = 14;
}

// BMEDMDJOJGL (7481)
message SwordTrainingStoryBattleCsReq {
}

// IBBDNAAGACD (7451)
message SwordTrainingStoryBattleScRsp {
	uint32 retcode = 2;
	SceneBattleInfo battle_info = 7;
}

// ECLNDLDHLCO (7487)
message SwordTrainingActionTurnSettleScNotify {
	repeated IHEBMKFIOEP kgfgbjcecmm = 8;
	uint32 dbfgeiaddnf = 3;
}

// KCBIEODKPCK (7453)
message SwordTrainingResumeGameCsReq {
	uint32 game_story_line_id = 3;
}

// FEAGGNEEMBG (7486)
message SwordTrainingResumeGameScRsp {
	uint32 retcode = 4;
	GIBGFEMMKAA dcfncdeieom = 15;
}

// OMNDAMJKEHI (7489)
message SwordTrainingSetSkillTraceCsReq {
	uint32 skill_id = 9;
}

// GAMDKCOKMJH (7477)
message SwordTrainingSetSkillTraceScRsp {
	uint32 skill_id = 15;
	uint32 retcode = 11;
}

// BIHLMMCEAOP (7457)
message SwordTrainingMarkEndingViewedCsReq {
}

// HOADDFPGNNM (7476)
message SwordTrainingMarkEndingViewedScRsp {
	uint32 retcode = 3;
}

// DNEGDBKLKOL
enum CmdPlayerSync {
	CmdPlayerSyncNone = 0;
	CmdPlayerSyncScNotify = 636;
}

message BasicModuleSync {
	uint32 week_cocoon_finished_count = 6;
	uint32 stamina = 3;
}

message PlayerBoardModuleSync {
	string signature = 2;
	bool bholgefccmd = 7;
	repeated HeadIconData unlocked_head_icon_list = 11;
}

message AvatarSync {
	repeated Avatar avatar_list = 1;
}

message MissionSync {
	repeated Mission mission_list = 2;
	repeated uint32 pbcognhgnof = 6;
	repeated IBFFCOFEENL mbcniljghnc = 7;
	repeated uint32 ibmmiglmagc = 15;
	repeated uint32 ahklpjbhpei = 9;
	repeated BMHINPIMHAH goehhmldicl = 8;
	repeated uint32 finished_main_mission_id_list = 13;
}

message MissionEventSync {
	repeated uint32 noininchjkj = 1;
	repeated uint32 pimoniabiko = 10;
	repeated Mission mission_event_list = 5;
}

message ONHBBEPDFNH {
	repeated uint32 pbnilkighnl = 4;
	repeated uint32 enbpahdfepl = 11;
}

message CHAJMFIJFAH {
	repeated SectionStatus phbkmofpldn = 4;
	repeated GroupStatus pblgijjggll = 14;
	repeated uint32 apoipdhempn = 10;
	repeated uint32 jdgdoeldhpe = 15;
}

// EMMGLJEHEFA (636)
message PlayerSyncScNotify {
	uint32 total_achievement_exp = 1884;
	MissionEventSync mission_event_sync = 4;
	PlayerBoardModuleSync playerboard_module_sync = 1345;
	repeated WaitDelResource wait_del_resource_list = 1;
	MissionSync mission_sync = 15;
	repeated Quest quest_list = 2;
	BasicModuleSync basic_module_sync = 12;
	repeated Relic relic_list = 8;
	repeated OHELKHBEJKD pkolhmanhgc = 925;
	repeated Material material_list = 6;
	repeated uint32 pepifccpcck = 964;
	repeated Material bplaencojnn = 276;
	PlayerBasicInfo basic_info = 13;
	ONHBBEPDFNH fmdddbenglk = 1335;
	AvatarSync avatar_sync = 14;
	repeated uint32 molahmdfelj = 5;
	repeated MultiPathAvatarInfo multi_path_avatar_info_list = 1403;
	CHAJMFIJFAH mkecdpdbjln = 562;
	ItemList pijojmkggfm = 370;
	repeated uint32 idkihljccmc = 7;
	repeated Equipment equipment_list = 10;
}

// LJBBLEAFJFI
enum CmdTalkRewardType {
	CmdTalkRewardTypeNone = 0;
	CmdTakeTalkRewardScRsp = 2127;
	CmdFinishFirstTalkNpcScRsp = 2174;
	CmdGetNpcTakenRewardScRsp = 2195;
	CmdSelectInclinationTextScRsp = 2193;
	CmdTakeTalkRewardCsReq = 2184;
	CmdGetFirstTalkNpcScRsp = 2128;
	CmdGetFirstTalkByPerformanceNpcScRsp = 2143;
	CmdGetFirstTalkByPerformanceNpcCsReq = 2134;
	CmdFinishFirstTalkByPerformanceNpcScRsp = 2125;
	CmdGetFirstTalkNpcCsReq = 2167;
	CmdSelectInclinationTextCsReq = 2124;
	CmdFinishFirstTalkNpcCsReq = 2152;
	CmdFinishFirstTalkByPerformanceNpcCsReq = 2146;
	CmdGetNpcTakenRewardCsReq = 2136;
}

// JFKCEFLMLOF (2136)
message GetNpcTakenRewardCsReq {
	uint32 npc_id = 3;
}

// BDIALKFJGMC (2195)
message GetNpcTakenRewardScRsp {
	uint32 retcode = 9;
	repeated uint32 talk_event_list = 15;
	uint32 npc_id = 3;
}

// BOJDPOAMEKE (2184)
message TakeTalkRewardCsReq {
	uint32 kpmhfbkekdg = 11;
	Vector adielmgnmma = 4;
}

// BDNLEDNFHIF (2127)
message TakeTalkRewardScRsp {
	uint32 retcode = 3;
	uint32 kpmhfbkekdg = 6;
	ItemList reward = 12;
}

// CDEGJOCLNKG (2167)
message GetFirstTalkNpcCsReq {
	repeated uint32 npc_id_list = 11;
}

message FirstNpcTalkInfo {
	bool is_meet = 6;
	uint32 first_npc_id = 15;
}

// JFKPJGCDGIA (2128)
message GetFirstTalkNpcScRsp {
	uint32 retcode = 10;
	repeated FirstNpcTalkInfo npc_talk_info_list = 7;
}

// LFDABIAAAPE (2152)
message FinishFirstTalkNpcCsReq {
	uint32 npc_id = 10;
}

// ABEFGLMNCAA (2174)
message FinishFirstTalkNpcScRsp {
	uint32 npc_id = 3;
	uint32 retcode = 4;
}

// NLMDNMAFBPK (2124)
message SelectInclinationTextCsReq {
	uint32 talk_sentence_id = 14;
}

// NAPNNGIMIIL (2193)
message SelectInclinationTextScRsp {
	uint32 retcode = 4;
	uint32 talk_sentence_id = 15;
}

message NpcTalkInfo {
	uint32 npc_talk_id = 1;
	bool is_meet = 4;
}

// OHEPNACAMNH (2134)
message GetFirstTalkByPerformanceNpcCsReq {
	repeated uint32 npc_talk_list = 3;
}

// JFOCOIKADNH (2143)
message GetFirstTalkByPerformanceNpcScRsp {
	repeated NpcTalkInfo npc_talk_info_list = 6;
	uint32 retcode = 12;
}

// EAEKAIOILII (2146)
message FinishFirstTalkByPerformanceNpcCsReq {
	uint32 npc_talk_id = 6;
}

// BMODNMNCINP (2125)
message FinishFirstTalkByPerformanceNpcScRsp {
	uint32 retcode = 5;
	ItemList reward = 9;
	uint32 npc_talk_id = 10;
}

// GONFIIKDJLL
enum CmdTarotBookType {
	CmdTarotBookTypeNone = 0;
	CmdTarotBookModifyEnergyScNotify = 8142;
	CmdTarotBookFinishInteractionCsReq = 8148;
	CmdTarotBookFinishInteractionScRsp = 8152;
	CmdTarotBookGetDataScRsp = 8155;
	CmdTarotBookOpenPackScRsp = 8143;
	CmdTarotBookGetDataCsReq = 8160;
	CmdTarotBookUnlockStoryCsReq = 8157;
	CmdTarotBookFinishStoryCsReq = 8145;
	CmdTarotBookOpenPackCsReq = 8147;
	CmdTarotBookUnlockStoryScRsp = 8146;
	CmdTarotBookFinishStoryScRsp = 8150;
}

message MJDIGONKLMF {
	uint32 id = 9;
	uint32 level = 5;
}

message GEFLMMAMJCD {
	bool belfjpefdnn = 7;
	uint32 id = 4;
}

message ECDLNCAGMGK {
	repeated MJDIGONKLMF lapjjnlljkf = 12;
	repeated GEFLMMAMJCD kneeoonbhkd = 10;
}

message AGGANCCNCKG {
	repeated uint32 cpnnimpcnii = 12;
}

// EMKMMLJHFDF (8160)
message TarotBookGetDataCsReq {
}

// KGCENJOGGPF (8155)
message TarotBookGetDataScRsp {
	uint32 hmndpgpbdfi = 8;
	uint32 kbmflpnpkoj = 13;
	ECDLNCAGMGK nphibjehjam = 2;
	AGGANCCNCKG aclofaogbpa = 3;
	map<uint32, uint32> dfbiedhmnkf = 9;
	map<uint32, uint32> abjjiahiagc = 12;
	uint32 retcode = 7;
}

// CIGCMCMFKKJ (8147)
message TarotBookOpenPackCsReq {
}

// DKEDIBBDOGD (8143)
message TarotBookOpenPackScRsp {
	map<uint32, uint32> kklaodfjopf = 12;
	map<uint32, uint32> dibcebopmbc = 7;
	uint32 hmndpgpbdfi = 6;
	uint32 retcode = 13;
	uint32 kbmflpnpkoj = 4;
}

// EANFGAKDIPC (8157)
message TarotBookUnlockStoryCsReq {
	repeated uint32 eifbkojdedh = 12;
}

// PGKDPKCOOBF (8146)
message TarotBookUnlockStoryScRsp {
	MJDIGONKLMF nkcicdedhoe = 5;
	uint32 retcode = 4;
	repeated uint32 eifbkojdedh = 6;
	map<uint32, uint32> abjjiahiagc = 10;
	map<uint32, uint32> dfbiedhmnkf = 8;
}

// OPKLFGIDBKJ (8145)
message TarotBookFinishStoryCsReq {
	uint32 jnolagajcle = 9;
}

// KOCGIKCOOGF (8150)
message TarotBookFinishStoryScRsp {
	uint32 retcode = 12;
	ECDLNCAGMGK nphibjehjam = 4;
	uint32 jnolagajcle = 6;
}

// CFDFGCGCKGC (8142)
message TarotBookModifyEnergyScNotify {
	uint32 kbmflpnpkoj = 12;
	bool dffnaelfgdd = 8;
}

// LOLLGFMACPJ (8148)
message TarotBookFinishInteractionCsReq {
	uint32 hfciaffpapm = 10;
}

// DGJMJFLCAKC (8152)
message TarotBookFinishInteractionScRsp {
	uint32 hfciaffpapm = 2;
	uint32 retcode = 10;
}

// NIDIJMIFHNM
enum CmdTelevisionActivityType {
	CmdTelevisionActivityTypeNone = 0;
	CmdTelevisionActivityBattleEndScNotify = 6966;
	CmdGetTelevisionActivityDataCsReq = 6980;
	CmdGetTelevisionActivityDataScRsp = 6975;
	CmdTelevisionActivityDataChangeScNotify = 6967;
	CmdEnterTelevisionActivityStageScRsp = 6977;
	CmdEnterTelevisionActivityStageCsReq = 6963;
}

message DHFCCBNANKI {
	uint32 max_score = 11;
	uint32 mnfmngjnfoh = 12;
	uint32 ajebbclphah = 6;
}

// NINNMIGOPNG (6980)
message GetTelevisionActivityDataCsReq {
}

// NJMDNMFNOEN (6975)
message GetTelevisionActivityDataScRsp {
	repeated DHFCCBNANKI nhlnneogceb = 1;
	uint32 retcode = 10;
}

// BPPLCMBENFH (6967)
message TelevisionActivityDataChangeScNotify {
	repeated DHFCCBNANKI nhlnneogceb = 6;
}

// HBJEGACPICM (6966)
message TelevisionActivityBattleEndScNotify {
	uint32 bfjaifdedbe = 11;
	uint32 flhcoopgdkk = 1;
	DHFCCBNANKI jcciillcaap = 6;
	uint32 aaijabgnada = 13;
	uint32 okcolklicca = 10;
}

message CPHNOOOKLCL {
	AvatarType avatar_type = 13;
	uint32 avatar_id = 4;
}

// MILIJMPGBNA (6963)
message EnterTelevisionActivityStageCsReq {
	repeated CPHNOOOKLCL avatar_list = 13;
	repeated uint32 buff_list = 8;
	uint32 ajebbclphah = 10;
}

// FBHNAGIKENL (6977)
message EnterTelevisionActivityStageScRsp {
	uint32 ajebbclphah = 5;
	uint32 retcode = 8;
	SceneBattleInfo battle_info = 9;
}

// DPAGHHBGNKB
enum CmdTextJoinType {
	CmdTextJoinTypeNone = 0;
	CmdTextJoinBatchSaveCsReq = 3867;
	CmdTextJoinQueryScRsp = 3827;
	CmdTextJoinSaveCsReq = 3836;
	CmdTextJoinSaveScRsp = 3895;
	CmdTextJoinBatchSaveScRsp = 3828;
	CmdTextJoinQueryCsReq = 3884;
}

message CLFPEEGOKOO {
	uint32 jbcpnnengdb = 11;
	string gmeiabhhgjh = 10;
	uint32 ldhimdpkbjj = 7;
	string fmgpdfpmcml = 13;
	uint32 bdoniiomcdh = 15;
}

// OBPJEBBEIDE (3836)
message TextJoinSaveCsReq {
	uint32 ldhimdpkbjj = 4;
	string gmeiabhhgjh = 11;
	uint32 bdoniiomcdh = 14;
}

// KIFBBNHOOAI (3895)
message TextJoinSaveScRsp {
	uint32 bdoniiomcdh = 7;
	string gmeiabhhgjh = 6;
	uint32 retcode = 3;
	uint32 ldhimdpkbjj = 5;
}

// CGPNGNPAMEL (3884)
message TextJoinQueryCsReq {
	repeated uint32 cpkdndffhem = 11;
}

// MCEBGKLAGIM (3827)
message TextJoinQueryScRsp {
	repeated CLFPEEGOKOO oedppbfghbk = 12;
	uint32 retcode = 1;
}

// KJJDGCEMGCD (3867)
message TextJoinBatchSaveCsReq {
	repeated CLFPEEGOKOO oedppbfghbk = 6;
}

// ANGJPBCPMDN (3828)
message TextJoinBatchSaveScRsp {
	repeated CLFPEEGOKOO oedppbfghbk = 6;
	uint32 retcode = 15;
}

// JNBFDANEPBG
enum CmdTrackPhotoActivityType {
	CmdTrackPhotoActivityTypeNone = 0;
	CmdGetTrackPhotoActivityDataCsReq = 7559;
	CmdGetTrackPhotoActivityDataScRsp = 7560;
	CmdQuitTrackPhotoStageScRsp = 7552;
	CmdStartTrackPhotoStageCsReq = 7551;
	CmdSettleTrackPhotoStageCsReq = 7553;
	CmdSettleTrackPhotoStageScRsp = 7558;
	CmdQuitTrackPhotoStageCsReq = 7554;
	CmdStartTrackPhotoStageScRsp = 7555;
}

message JMMGIDDNIHN {
	uint32 max_score = 8;
	uint32 stage_id = 12;
}

// JJEILCGMCCO (7559)
message GetTrackPhotoActivityDataCsReq {
}

// ENMJELNPFHB (7560)
message GetTrackPhotoActivityDataScRsp {
	uint32 retcode = 2;
	repeated JMMGIDDNIHN oohneioimlk = 11;
}

message HLCCNEHFDBA {
	uint32 entity_id = 11;
	bool pkfakhdpied = 10;
}

// LKPAHMELFAH (7553)
message SettleTrackPhotoStageCsReq {
	repeated HLCCNEHFDBA kcnnkniaeka = 8;
	uint32 cost_time = 14;
	uint32 stage_id = 3;
}

// GDLCLGHLAJB (7558)
message SettleTrackPhotoStageScRsp {
	uint32 retcode = 12;
	repeated HLCCNEHFDBA kcnnkniaeka = 4;
	uint32 score_id = 2;
	uint32 stage_id = 5;
}

// GGKDAFJCDJO (7551)
message StartTrackPhotoStageCsReq {
	uint32 stage_id = 12;
	bool fcggbomjjoa = 9;
}

// ABLMFAKNJLN (7555)
message StartTrackPhotoStageScRsp {
	uint32 retcode = 13;
	uint32 kbeadblmilm = 12;
}

// KGIEEPDMOPH (7554)
message QuitTrackPhotoStageCsReq {
	uint32 stage_id = 7;
}

// NJHPDEGPGAP (7552)
message QuitTrackPhotoStageScRsp {
	uint32 retcode = 13;
}

// HPDEMOKOFNG
enum CmdTrainPartyType {
	CmdTrainPartyTypeNone = 0;
	CmdTrainPartyBuildStartStepScRsp = 8025;
	CmdTrainPartyGamePlayStartCsReq = 8050;
	CmdTrainPartyAddBuildDynamicBuffScRsp = 8013;
	CmdTrainPartyTakeBuildLevelAwardScRsp = 8073;
	CmdTrainPartyBuildStartStepCsReq = 8046;
	CmdTrainPartyUpdatePosEnvCsReq = 8010;
	CmdTrainPartyGetDataCsReq = 8036;
	CmdTrainPartyBuildingUpdateNotify = 8075;
	CmdTrainPartyBuildDiyScRsp = 8005;
	CmdTrainPartyEnterCsReq = 8026;
	CmdTrainPartyUseCardCsReq = 8084;
	CmdTrainPartyMoveScNotify = 8067;
	CmdTrainPartySettleNotify = 8052;
	CmdTrainPartyEnterScRsp = 8007;
	CmdTrainPartyTakeBuildLevelAwardCsReq = 8035;
	CmdTrainPartySyncUpdateScNotify = 8024;
	CmdTrainPartyLeaveCsReq = 8053;
	CmdTrainPartyGamePlayStartScRsp = 8048;
	CmdTrainPartyBuildDiyCsReq = 8096;
	CmdTrainPartyUseCardScRsp = 8027;
	CmdTrainPartyHandlePendingActionScRsp = 8043;
	CmdTrainPartyGamePlaySettleNotify = 8088;
	CmdTrainPartyUpdatePosEnvScRsp = 8076;
	CmdTrainPartyHandlePendingActionCsReq = 8034;
	CmdTrainPartyAddBuildDynamicBuffCsReq = 8017;
	CmdTrainPartyLeaveScRsp = 8090;
	CmdTrainPartyGetDataScRsp = 8095;
}

enum BuildGoalStep {
	BuildGoalStepNone = 0;
	BuildGoalStepIdle = 1;
	BuildGoalStepStart = 2;
	BuildGoalStepFinish = 3;
}

enum TrainPartySrc {
	kTrainPartySrcNone = 0;
	kTrainPartySrcCard = 1;
	kTrainPartySrcGrid = 2;
	kTrainPartySrcPam = 3;
	kTrainPartySrcPassenger = 4;
	kTrainPartySrcBuilding = 5;
}

enum TrainPartyEventType {
	kDialogueEventNone = 0;
	kGamePlayStartDialogueEvent = 1;
	kGridDialogueEvent = 2;
	kAfterMeetingDialogueEvent = 3;
}

enum TrainPartyMtSkillBriefType {
	kMtSkillNone = 0;
	kMtSkillModifyBase = 1;
	kMtSkillModifyRatio = 2;
	kMtSkillMultiplyRatio = 3;
	kMtSkillSelfDestroy = 4;
}

enum OMNIKCCCOPN {
	TRAIN_PARTY_MT_CATEGORY_NONE = 0;
	TRAIN_PARTY_MT_CATEGORY_S = 1;
	TRAIN_PARTY_MT_CATEGORY_A = 2;
	TRAIN_PARTY_MT_CATEGORY_B = 3;
	TRAIN_PARTY_MT_CATEGORY_C = 4;
	TRAIN_PARTY_MT_CATEGORY_D = 5;
	TRAIN_PARTY_MT_CATEGORY_E = 6;
	TRAIN_PARTY_MT_CATEGORY_F = 7;
	TRAIN_PARTY_MT_CATEGORY_G = 8;
}

message TrainPartyGameCard {
	uint32 unique_id = 6;
	uint32 lhflcfnaopb = 15;
	uint32 card_id = 3;
	repeated uint32 mcbcbmpddbl = 1;
}

message BNKEFBKDJKP {
	repeated TrainPartyGameCard train_party_card_info = 15;
}

message DOKJKIMMFHG {
	bool nefolhonilj = 8;
	BNKEFBKDJKP train_party_card_info = 10;
	uint32 keblgellmed = 14;
}

message INDPHBNNDKK {
	uint32 cgnkhekhiml = 9;
	uint32 unique_id = 4;
	uint32 hpiocdknhpg = 13;
	uint32 ilofimodien = 7;
}

message BIGHEDAMILL {
	repeated uint32 ojgkckefdld = 1;
	uint32 odfemleemcl = 9;
	uint32 eklcihafnii = 2;
	uint32 hjgjbknjfjm = 13;
	uint32 kolefifdfhl = 4;
	uint32 jjodfdmfclb = 10;
}

message MNLNOCKOHGL {
	uint32 abkejmfcddc = 2;
	repeated INDPHBNNDKK faemamoaafd = 10;
	BIGHEDAMILL mhlbckdcboc = 8;
	uint32 hnekcaojdna = 12;
}

message DIDGDCPGLDG {
	uint32 oljdnhjipmi = 8;
	uint32 kecgeocbdej = 13;
}

message KMFBLAGAOEE {
	uint32 skill_level = 2;
	uint32 eecemipjjgh = 12;
	uint32 skill_id = 14;
}

message INLEODPFKHB {
	uint32 bndmgiojoan = 5;
	DIDGDCPGLDG cffmojghjlm = 4;
	uint32 efccjkghjdk = 13;
}

message KIMKOBLKDFJ {
	uint32 record_id = 1;
	bool cdklekcjbej = 8;
	repeated uint32 bikcdadjijj = 3;
	uint32 efccjkghjdk = 7;
}

message NCENDKFCHKJ {
	repeated uint32 loogcpgbepe = 3;
	uint32 ncfahilolgj = 7;
	uint32 lhflcfnaopb = 11;
	uint32 khnkielhnpp = 15;
	repeated INLEODPFKHB pepagojdnho = 8;
	repeated KMFBLAGAOEE skill_list = 12;
}

message KOOLHIMDCDF {
	repeated KIMKOBLKDFJ cgojjljkbmb = 12;
	repeated uint32 bikcdadjijj = 1;
}

message PEOCNLLHONM {
	repeated uint32 loifbgpgbhj = 14;
	repeated uint32 eobhghdnedo = 6;
	repeated ADCGGKAPKFK gdebgnkhjki = 7;
	CNNDHOLOJDM lhljhdglnoo = 3;
	uint32 kjkpmffamfk = 4;
	uint32 progress = 9;
	repeated uint32 ikmoiphhfob = 15;
}

message PMEDJIKIJMJ {
	uint32 kjkpmffamfk = 11;
	repeated uint32 loifbgpgbhj = 7;
}

message CJEAKJMAOME {
	uint32 meakdnhibgk = 10;
	BuildGoalStep status = 1;
	uint32 kebekmgdjke = 4;
}

message CNNDHOLOJDM {
	uint32 mfajcodjpln = 3;
	repeated CJEAKJMAOME ipkkeeekkpb = 7;
}

message ADCGGKAPKFK {
	uint32 dice_slot_id = 14;
	uint32 kkdpmhfibkh = 2;
}

message LCEELLAFEIN {
	uint32 cdcnhleaale = 14;
	repeated PEOCNLLHONM hnhclcbjaim = 12;
	uint32 ljacopfiadn = 6;
	repeated uint32 jgjhodghejj = 8;
	uint32 pehehboafjf = 3;
	uint32 mpgchejlfeg = 13;
	uint32 apapipmoggc = 10;
	uint32 coin_cost = 7;
	repeated uint32 gafnmahjnbp = 9;
	repeated PMEDJIKIJMJ eppofnbmoho = 5;
}

message FHICEEHBBLN {
	KOOLHIMDCDF pngjlpjhncg = 2;
	AMNHLKNIGPJ opcdbeojmhg = 3;
	uint32 laghapikbid = 6;
	LCEELLAFEIN fahiincjgoj = 8;
	uint32 cmgmgnomjfn = 4;
	uint32 record_id = 9;
}

message AMNHLKNIGPJ {
	DOKJKIMMFHG kbfnonokdlp = 14;
	NCENDKFCHKJ egpajjpkfhm = 13;
	uint32 dahdhmfleff = 12;
	JGBJBDGOHGP mpecoobeokd = 6;
	MNLNOCKOHGL mmogcpnhjhm = 4;
}

// BHNEOGOELBM (8036)
message TrainPartyGetDataCsReq {
}

// LJIMOCMNCCG (8095)
message TrainPartyGetDataScRsp {
	uint32 retcode = 13;
	FHICEEHBBLN cjecleigjcc = 10;
}

// KBEDFCGDKLH (8084)
message TrainPartyUseCardCsReq {
	uint32 ocidfbobheh = 14;
}

// EMJDPIBHOOI (8027)
message TrainPartyUseCardScRsp {
	uint32 ocidfbobheh = 5;
	uint32 retcode = 9;
}

// MMGLFEKLLME (8067)
message TrainPartyMoveScNotify {
	repeated INDPHBNNDKK icgjklohjfa = 2;
	uint32 fkajlmedhjn = 11;
}

// NNOHGEPGGBN (8052)
message TrainPartySettleNotify {
	uint32 ocidfbobheh = 14;
	LDPBKMPNJFG cbioemaopnc = 9;
}

message LDPBKMPNJFG {
	repeated INLEODPFKHB pepagojdnho = 8;
	repeated IAAOPDNACNB klhommbkljl = 4;
	uint32 dkihhamkahk = 9;
}

message IAAOPDNACNB {
	uint32 igjhooklmjl = 7;
	repeated uint32 switch_list = 14;
}

message OJLMBEOHIOH {
	TrainPartyGameCard pjhblimejof = 2;
}

message EJKPOPPNAOM {
	uint32 efccjkghjdk = 11;
	DIDGDCPGLDG cffmojghjlm = 15;
}

message CKDHFNDDEAF {
	repeated EJKPOPPNAOM lbldilmnghc = 9;
}

message KKBBOHLOGHN {
	JGBJBDGOHGP lcfanolipij = 13;
}

message DPOKFMOALKE {
	uint32 lhflcfnaopb = 14;
}

message FOHPEOLHHME {
	KMFBLAGAOEE njfjlpnocaf = 3;
}

message FNBMAMMBKJJ {
	repeated KMFBLAGAOEE skill_list = 6;
}

message NJOPBMFEEPJ {
	KIMKOBLKDFJ pgpkplgbgae = 1;
}

message HOMBELLNGMA {
	repeated uint32 bikcdadjijj = 6;
}

message GFPCBHIHDNN {
	repeated INDPHBNNDKK faemamoaafd = 1;
}

message GDHBAIHFKBG {
	BIGHEDAMILL mhlbckdcboc = 2;
	BNKEFBKDJKP jjnlkbfgicm = 8;
	uint32 keblgellmed = 5;
	bool nefolhonilj = 15;
}

message LOBBLPHFBEA {
	oneof NKBFMHDHJGJ {
		BNKEFBKDJKP jjnlkbfgicm = 164;
		CKDHFNDDEAF ppoffaffbde = 463;
		KKBBOHLOGHN mhpakbafjpb = 140;
		DPOKFMOALKE kdmhkmkkpin = 1135;
		GFPCBHIHDNN johknhlbpop = 784;
		FOHPEOLHHME ifiiodejcbh = 1913;
		GDHBAIHFKBG jkemhlopcao = 44;
		FNBMAMMBKJJ ajoonnaehme = 1535;
		NJOPBMFEEPJ kokeloccepp = 492;
		HOMBELLNGMA jjfeabigbnc = 337;
	}
	TrainPartySrc src = 2;
}

// AMKAPEPMAON (8024)
message TrainPartySyncUpdateScNotify {
	repeated LOBBLPHFBEA nkcomphijfi = 9;
}

message JGBJBDGOHGP {
	oneof NIHAJMJHIJD {
		AEGLHHPPMLF iipmkidinnd = 674;
		NNNIBNPEEJN acdnknbflin = 41;
		IIOIOMAIOAG jomngpjkokj = 140;
		MNFFJHFPKPJ ikgajbjejma = 124;
	}
	uint32 FHOPJNKMNPB = 15;
}

message ELBHMFKPEEM {
	uint32 cjbdahmahkn = 8;
	bool confirm = 11;
}

message AEGLHHPPMLF {
	uint32 event_id = 4;
	TrainPartyEventType agkecjommdh = 3;
	repeated ELBHMFKPEEM mchonaccdme = 9;
}

message LAEAKBCBKII {
	uint32 cjbdahmahkn = 1;
	uint32 event_id = 8;
}

message FPFAFNFPJDK {
	LDPBKMPNJFG cbioemaopnc = 11;
}

message GAEFMFJLHOL {
	uint32 eecemipjjgh = 5;
	uint32 skill_id = 14;
	uint32 level = 1;
}

message NNNIBNPEEJN {
	uint32 efccjkghjdk = 7;
	repeated GAEFMFJLHOL dkcofennlhm = 15;
}

message MNFFJHFPKPJ {
	repeated KMFBLAGAOEE jehopbnjppl = 5;
	uint32 loiamejhcil = 7;
}

message IKHPGFPBCKK {
	uint32 jcekehmdfbh = 9;
}

message AKFEELJJOCI {
	repeated KMFBLAGAOEE skill_list = 6;
}

message AKLFLFOPLFK {
	uint32 kecgeocbdej = 14;
	uint32 efccjkghjdk = 5;
	uint32 unique_id = 10;
}

message DDOLOAHPEGO {
	uint32 efccjkghjdk = 10;
	uint32 num = 12;
}

message IIOIOMAIOAG {
	repeated AKLFLFOPLFK hgmdjhlbigo = 2;
	uint32 hiadgilpoam = 12;
	repeated DDOLOAHPEGO eobjcdfpeao = 7;
	repeated CKFCKACNHBL alaebjjigpi = 4;
	uint32 ebnfoelmjml = 5;
	uint32 enflaimgban = 9;
	uint32 mjfkfeicala = 1;
	uint32 aaijabgnada = 15;
}

message PlaySkillBrief {
	uint32 SkillParam = 13;
	TrainPartyMtSkillBriefType SkillType = 3;
	uint32 SkillId = 10;
}

message PlayCardBrief {
	uint32 BaseValue = 12;
	repeated PlaySkillBrief SkillBriefList = 7;
	uint32 UniqueId = 15;
}

message PIHEPMKCGCI {
	repeated uint32 gkhfknjfkpg = 11;
	ItemList cggmdohbeea = 5;
	uint32 cogpehincha = 15;
}

message AMKGBLJKFKC {
	repeated uint32 kdmdmeofpfo = 12;
}

message HCOHPHFOHAE {
	uint32 mjfkfeicala = 1;
	BIGHEDAMILL mhlbckdcboc = 8;
	uint32 score_id = 7;
	repeated PlaySkillBrief hdmldohacdj = 13;
	uint32 aaijabgnada = 5;
	PIHEPMKCGCI ajlgifphccb = 11;
	repeated DDOLOAHPEGO eobjcdfpeao = 10;
	repeated AKLFLFOPLFK hgmdjhlbigo = 12;
	repeated PlayCardBrief figiabjfgcm = 14;
	OMNIKCCCOPN ioohligkajc = 6;
}

message FOOCFODNFHF {
	repeated uint32 kdmdmeofpfo = 1;
}

message NGBCAJHPIGK {
	repeated AKLFLFOPLFK hgmdjhlbigo = 11;
	uint32 hiadgilpoam = 1;
	repeated DDOLOAHPEGO eobjcdfpeao = 10;
	repeated PlaySkillBrief kleimkmaomd = 12;
}

// NINFKCDLDMD (8034)
message TrainPartyHandlePendingActionCsReq {
	oneof DDPCPDKGMFM {
		LAEAKBCBKII iipmkidinnd = 1025;
		IKHPGFPBCKK ikgajbjejma = 395;
		AMKGBLJKFKC ljemhhcekoj = 272;
		FOOCFODNFHF kdmemgmahcg = 289;
	}
	uint32 FHOPJNKMNPB = 4;
}

// GNJLOLNHBCE (8043)
message TrainPartyHandlePendingActionScRsp {
	oneof DDPCPDKGMFM {
		FPFAFNFPJDK pppbldkjhbg = 158;
		AKFEELJJOCI mpgfegdiddc = 1236;
		HCOHPHFOHAE nnamfmipnkn = 1980;
		NGBCAJHPIGK dhmjfkppogi = 337;
	}
	uint32 FHOPJNKMNPB = 3;
	bool KLDKOBLFAAC = 6;
	uint32 retcode = 11;
	LDPBKMPNJFG CBIOEMAOPNC = 15;
}

// KJEJDILFIOD (8046)
message TrainPartyBuildStartStepCsReq {
	uint32 meakdnhibgk = 6;
	uint32 kjkpmffamfk = 10;
	uint32 mfajcodjpln = 9;
	ADCGGKAPKFK pcpigbnbioe = 5;
}

// FCIDPDDMMJH (8025)
message TrainPartyBuildStartStepScRsp {
	uint32 retcode = 8;
	uint32 coin_cost = 11;
}

message AEMKLEGNHIA {
	ADCGGKAPKFK lebokoapooa = 3;
	uint32 kjkpmffamfk = 6;
}

// AIMIGBGNENB (8096)
message TrainPartyBuildDiyCsReq {
	uint32 kkdpmhfibkh = 15;
	uint32 dice_slot_id = 14;
	bool plgibhocdgp = 7;
	uint32 kjkpmffamfk = 3;
}

// NLPHJLGAKEI (8005)
message TrainPartyBuildDiyScRsp {
	repeated AEMKLEGNHIA nkcomphijfi = 3;
	uint32 retcode = 4;
	uint32 kjkpmffamfk = 14;
	bool plgibhocdgp = 12;
	repeated ADCGGKAPKFK gdebgnkhjki = 1;
}

message OCEPLKHBNHD {
	uint32 ppcebbcdnaf = 13;
	repeated CJEAKJMAOME nbggjlaakjh = 10;
}

message ANONOHDDPLD {
	uint32 progress = 6;
	repeated CJEAKJMAOME nbggjlaakjh = 12;
	uint32 kjkpmffamfk = 7;
	uint32 mfajcodjpln = 5;
}

message MFOLMDABICO {
	uint32 apapipmoggc = 9;
	uint32 cdcnhleaale = 6;
}

message FLAOMFJKDEG {
	uint32 jdphjegldja = 1;
}

message MPDPCAMINOF {
	uint32 ljacopfiadn = 4;
}

message GIPALOPPJHG {
	uint32 kjkpmffamfk = 2;
	uint32 ljnaihgebjl = 13;
}

message OMKEKLEIJFH {
	uint32 kkdpmhfibkh = 15;
}

message DJCIBGLGPCN {
	uint32 fmojnnohhkn = 12;
}

message NHIGENBGIBD {
	uint32 pehehboafjf = 10;
}

message EDCHLFMBLFE {
	uint32 kjkpmffamfk = 13;
	repeated uint32 nbggjlaakjh = 10;
}

message FMLLCMPHMKH {
	repeated EDCHLFMBLFE hnhclcbjaim = 13;
}

message CDMPMJNJBNH {
	oneof NKBFMHDHJGJ {
		DJCIBGLGPCN iknkgfjihbc = 1262;
		OCEPLKHBNHD djljgppllli = 286;
		ANONOHDDPLD elaonlmkmlg = 1181;
		MFOLMDABICO bmjhndkcajd = 1738;
		FLAOMFJKDEG dndaljailfa = 1315;
		GIPALOPPJHG mpelidefnae = 562;
		OMKEKLEIJFH icjmljeidie = 1484;
		MPDPCAMINOF hpapojmfokh = 202;
		NHIGENBGIBD ajeklkmmech = 245;
		FMLLCMPHMKH hnilffkmkmi = 450;
	}
}

// DDFONIAPODA (8075)
message TrainPartyBuildingUpdateNotify {
	repeated CDMPMJNJBNH blipifcpicd = 1;
}

// MNAEMHIABLK (8026)
message TrainPartyEnterCsReq {
}

// FOKCEDIKPNC (8007)
message TrainPartyEnterScRsp {
	uint32 retcode = 6;
}

// CODAAPFPJAH (8053)
message TrainPartyLeaveCsReq {
}

// ODGFBKOEAJO (8090)
message TrainPartyLeaveScRsp {
	uint32 retcode = 13;
}

message CKFCKACNHBL {
	OMNIKCCCOPN lgmepmnlnfj = 1;
	uint32 level = 15;
}

// BJBFKJBDBPN (8088)
message TrainPartyGamePlaySettleNotify {
	uint32 cmgmgnomjfn = 5;
	repeated uint32 mmabifchjng = 1;
	uint32 record_id = 9;
	KOOLHIMDCDF nlmmbgkbkje = 14;
}

// FCHDKADEDBO (8050)
message TrainPartyGamePlayStartCsReq {
	repeated uint32 pepagojdnho = 5;
	uint32 dahdhmfleff = 9;
}

// LBIIDAECJBN (8048)
message TrainPartyGamePlayStartScRsp {
	AMNHLKNIGPJ amaenphggfb = 11;
	uint32 retcode = 9;
}

// ODNCAJANLLL (8017)
message TrainPartyAddBuildDynamicBuffCsReq {
}

// CFOGLGJHNFC (8013)
message TrainPartyAddBuildDynamicBuffScRsp {
	uint32 buff_id = 8;
	uint32 retcode = 4;
}

// MFKCEIMPGDE (8035)
message TrainPartyTakeBuildLevelAwardCsReq {
	uint32 epeiiaggffm = 3;
}

// GBAKAKEHOJI (8073)
message TrainPartyTakeBuildLevelAwardScRsp {
	ItemList item_list = 13;
	uint32 epeiiaggffm = 12;
	uint32 retcode = 6;
}

// DGNBPIDKIML
enum CmdTrainVisitorType {
	CmdTrainVisitorTypeNone = 0;
	CmdTrainVisitorRewardSendNotify = 3728;
	CmdTrainVisitorBehaviorFinishCsReq = 3736;
	CmdShowNewSupplementVisitorCsReq = 3734;
	CmdGetTrainVisitorRegisterScRsp = 3774;
	CmdTrainVisitorBehaviorFinishScRsp = 3795;
	CmdGetTrainVisitorRegisterCsReq = 3752;
	CmdTrainRefreshTimeNotify = 3767;
	CmdGetTrainVisitorBehaviorCsReq = 3784;
	CmdGetTrainVisitorBehaviorScRsp = 3727;
	CmdShowNewSupplementVisitorScRsp = 3743;
	CmdTakeTrainVisitorUntakenBehaviorRewardCsReq = 3724;
	CmdTakeTrainVisitorUntakenBehaviorRewardScRsp = 3793;
}

enum CJMPOJOIJCB {
	TRAIN_VISITOR_REWARD_SEND_NONE = 0;
	TRAIN_VISITOR_REWARD_SEND_REGISTER = 1;
	TRAIN_VISITOR_REWARD_SEND_MISSION = 2;
}

enum OJGOLPCJIJB {
	TRAIN_VISITOR_STATUS_NONE = 0;
	TRAIN_VISITOR_STATUS_INIT = 1;
	TRAIN_VISITOR_STATUS_GET_ON = 2;
	TRAIN_VISITOR_STATUS_GET_OFF = 3;
	TRAIN_VISITOR_STATUS_BE_TRAIN_MEMBER = 4;
}

enum IPAGOPIEEJP {
	TRAIN_VISITOR_REGISTER_GET_TYPE_NONE = 0;
	TRAIN_VISITOR_REGISTER_GET_TYPE_AUTO = 1;
	TRAIN_VISITOR_REGISTER_GET_TYPE_MANUAL = 2;
}

message CIMIIIEIEIP {
	bool is_meet = 13;
	uint32 dmmelmgmhlo = 5;
}

// GAMGPNEKAPD (3736)
message TrainVisitorBehaviorFinishCsReq {
	uint32 dmmelmgmhlo = 13;
}

// CCDCBMGMIGL (3795)
message TrainVisitorBehaviorFinishScRsp {
	uint32 dmmelmgmhlo = 7;
	ItemList reward = 10;
	uint32 retcode = 5;
}

// GPKBPNFFHNG (3784)
message GetTrainVisitorBehaviorCsReq {
	repeated uint32 dlohaigoigm = 11;
}

// GDNMCCLFBKI (3727)
message GetTrainVisitorBehaviorScRsp {
	uint32 retcode = 1;
	repeated CIMIIIEIEIP ilegicnajel = 2;
}

// DANODNEECOA (3767)
message TrainRefreshTimeNotify {
	uint64 cbbpildpejn = 4;
}

// NMOOFHBNJOG (3728)
message TrainVisitorRewardSendNotify {
	uint32 dmmelmgmhlo = 10;
	CJMPOJOIJCB type = 5;
	ItemList reward = 7;
}

message BBKJDDFHPAH {
	repeated uint32 hhhlohfnnhg = 11;
	OJGOLPCJIJB status = 1;
	uint32 olopddjgafc = 12;
	uint32 dmmelmgmhlo = 6;
	bool gpkiekapdgb = 5;
}

// OBICLPABBAD (3752)
message GetTrainVisitorRegisterCsReq {
	IPAGOPIEEJP type = 2;
}

// DGKMBCCKMGM (3774)
message GetTrainVisitorRegisterScRsp {
	uint32 retcode = 13;
	repeated uint32 cckinklhgfd = 15;
	repeated BBKJDDFHPAH cfpndniofda = 8;
}

// OFHNIJAJPMA (3724)
message TakeTrainVisitorUntakenBehaviorRewardCsReq {
	uint32 dmmelmgmhlo = 12;
}

// KFLLMHOCAKD (3793)
message TakeTrainVisitorUntakenBehaviorRewardScRsp {
	uint32 retcode = 15;
	repeated uint32 hhhlohfnnhg = 9;
	uint32 dmmelmgmhlo = 13;
}

// AIIDMHHAPEJ (3734)
message ShowNewSupplementVisitorCsReq {
	repeated uint32 cckinklhgfd = 7;
}

// FLDICEICCFA (3743)
message ShowNewSupplementVisitorScRsp {
	uint32 retcode = 4;
}

// OMNAGABAIOJ
enum CmdTravelBrochureType {
	CmdTravelBrochureNone = 0;
	CmdTravelBrochureSetPageDescStatusCsReq = 6475;
	CmdTravelBrochureSetCustomValueCsReq = 6496;
	CmdTravelBrochureGetDataCsReq = 6436;
	CmdTravelBrochurePageResetScRsp = 6407;
	CmdTravelBrochureApplyPasterScRsp = 6474;
	CmdTravelBrochureSetPageDescStatusScRsp = 6419;
	CmdTravelBrochureApplyPasterListScRsp = 6490;
	CmdTravelBrochurePageResetCsReq = 6426;
	CmdTravelBrochurePageUnlockScNotify = 6484;
	CmdTravelBrochureApplyPasterListCsReq = 6453;
	CmdTravelBrochureSelectMessageCsReq = 6467;
	CmdTravelBrochureUpdatePasterPosCsReq = 6434;
	CmdTravelBrochureSelectMessageScRsp = 6428;
	CmdTravelBrochureSetCustomValueScRsp = 6405;
	CmdTravelBrochureRemovePasterCsReq = 6424;
	CmdTravelBrochureGetPasterScNotify = 6446;
	CmdTravelBrochureUpdatePasterPosScRsp = 6443;
	CmdTravelBrochureGetDataScRsp = 6495;
	CmdTravelBrochureApplyPasterCsReq = 6452;
	CmdTravelBrochureRemovePasterScRsp = 6493;
}

enum LHCNBPHNPHC {
	PAGE_NONE = 0;
	PAGE_UNLOCKED = 1;
	PAGE_INTERACTED = 2;
}

enum DIDEIODAEMB {
	PAGE_DESC_NONE = 0;
	PAGE_DESC_SHOW_DETAIL = 1;
	PAGE_DESC_COLLAPSE = 2;
}

message FDCJHAPADAN {
	uint32 item_id = 12;
	uint64 unique_id = 11;
	uint32 kmdnpchkgkn = 13;
	int32 hjikkgeejbi = 14;
	int32 ebjjbbamkdp = 10;
	uint32 gcfehgmgodk = 6;
}

message BCENNALFCCO {
	repeated FDCJHAPADAN fbhfcalgglj = 7;
	uint32 cjaebolpifp = 15;
	LHCNBPHNPHC lpeckgniodi = 11;
	DIDEIODAEMB hjhapennfhe = 1;
	uint32 bdoenbifbcb = 8;
}

// JMHLFMGEMBH (6436)
message TravelBrochureGetDataCsReq {
}

// OFBELFEEBKK (6495)
message TravelBrochureGetDataScRsp {
	map<uint32, uint32> podbfamohgc = 7;
	uint32 custom_value = 1;
	uint32 retcode = 4;
	map<uint32, BCENNALFCCO> fjlnjjgdhlk = 15;
}

// MABGEHIPBPK (6484)
message TravelBrochurePageUnlockScNotify {
	uint32 cjaebolpifp = 9;
}

// MBMMBJPMAPG (6467)
message TravelBrochureSelectMessageCsReq {
	uint32 bdoenbifbcb = 8;
	uint32 cjaebolpifp = 15;
}

// KHCAPKMGKLH (6428)
message TravelBrochureSelectMessageScRsp {
	ItemList reward = 9;
	uint32 retcode = 15;
	BCENNALFCCO gccfcjikolm = 5;
}

// ENPLKMGDCHP (6452)
message TravelBrochureApplyPasterCsReq {
	uint32 cjaebolpifp = 10;
	uint32 kmdnpchkgkn = 4;
	int32 hjikkgeejbi = 8;
	uint32 item_id = 1;
	uint32 gcfehgmgodk = 11;
	int32 ebjjbbamkdp = 12;
}

// HOOPBPGHOGA (6474)
message TravelBrochureApplyPasterScRsp {
	BCENNALFCCO gccfcjikolm = 4;
	uint32 retcode = 3;
}

// DAFCBEHLGHE (6424)
message TravelBrochureRemovePasterCsReq {
	uint64 unique_id = 9;
	uint32 cjaebolpifp = 7;
	uint32 item_id = 2;
}

// BPJDDAHFJPF (6493)
message TravelBrochureRemovePasterScRsp {
	uint32 retcode = 3;
	BCENNALFCCO gccfcjikolm = 9;
}

// BACMJANLKJO (6434)
message TravelBrochureUpdatePasterPosCsReq {
	uint32 cjaebolpifp = 7;
	uint32 item_id = 13;
	int32 ebjjbbamkdp = 5;
	int32 hjikkgeejbi = 1;
	uint32 kmdnpchkgkn = 8;
	uint32 gcfehgmgodk = 11;
	uint64 unique_id = 10;
}

// GMNIPMBOJOF (6443)
message TravelBrochureUpdatePasterPosScRsp {
	BCENNALFCCO gccfcjikolm = 5;
	uint32 retcode = 6;
}

// HLCAKCANCGF (6446)
message TravelBrochureGetPasterScNotify {
	uint32 cagplapdgbi = 5;
	uint32 num = 2;
}

message OHELKHBEJKD {
	uint32 cagplapdgbi = 5;
	uint32 num = 15;
}

// FNGGDHHOMDG (6496)
message TravelBrochureSetCustomValueCsReq {
	uint32 value = 11;
}

// GNHDKMHPPAB (6405)
message TravelBrochureSetCustomValueScRsp {
	uint32 retcode = 15;
}

// NJJKECDFBKH (6475)
message TravelBrochureSetPageDescStatusCsReq {
	uint32 cjaebolpifp = 9;
	DIDEIODAEMB dmeampcilln = 10;
}

// LHBCMJEPCEF (6419)
message TravelBrochureSetPageDescStatusScRsp {
	uint32 retcode = 13;
}

// CNFJFJPIPOJ (6426)
message TravelBrochurePageResetCsReq {
	uint32 cjaebolpifp = 9;
}

// BGFMFMMCDJJ (6407)
message TravelBrochurePageResetScRsp {
	uint32 retcode = 7;
	BCENNALFCCO gccfcjikolm = 14;
}

message OBGHKLANOGB {
	int32 ebjjbbamkdp = 14;
	uint32 item_id = 1;
	uint32 gcfehgmgodk = 7;
	int32 hjikkgeejbi = 13;
	uint32 kmdnpchkgkn = 3;
}

// IANBCHFEGIC (6453)
message TravelBrochureApplyPasterListCsReq {
	repeated OBGHKLANOGB migfdmjpihi = 13;
	uint32 cjaebolpifp = 5;
}

// GNNNCEMHPAJ (6490)
message TravelBrochureApplyPasterListScRsp {
	BCENNALFCCO gccfcjikolm = 5;
	uint32 retcode = 8;
}

// GPEFHIDELCP
enum CmdTreasureDungeonType {
	CmdTreasureDungeonTypeNone = 0;
	CmdGetTreasureDungeonActivityDataCsReq = 4434;
	CmdUseTreasureDungeonItemScRsp = 4490;
	CmdEnterTreasureDungeonScRsp = 4425;
	CmdFightTreasureDungeonMonsterCsReq = 4475;
	CmdUseTreasureDungeonItemCsReq = 4453;
	CmdQuitTreasureDungeonScRsp = 4412;
	CmdQuitTreasureDungeonCsReq = 4459;
	CmdOpenTreasureDungeonGridCsReq = 4496;
	CmdGetTreasureDungeonActivityDataScRsp = 4443;
	CmdInteractTreasureDungeonGridScRsp = 4407;
	CmdFightTreasureDungeonMonsterScRsp = 4419;
	CmdTreasureDungeonFinishScNotify = 4495;
	CmdOpenTreasureDungeonGridScRsp = 4405;
	CmdInteractTreasureDungeonGridCsReq = 4426;
	CmdTreasureDungeonDataScNotify = 4436;
	CmdEnterTreasureDungeonCsReq = 4446;
}

enum MGGEMNJKHCF {
	TREASURE_DUNGEON_RECORD_NONE = 0;
	TREASURE_DUNGEON_RECORD_ADD_HP = 1;
	TREASURE_DUNGEON_RECORD_SUB_HP = 2;
	TREASURE_DUNGEON_RECORD_SUB_HP_NO_EXPLORE = 3;
	TREASURE_DUNGEON_RECORD_ADD_ATTACK = 5;
	TREASURE_DUNGEON_RECORD_ADD_DEFENCE = 6;
	TREASURE_DUNGEON_RECORD_ADD_EXPLORE = 9;
	TREASURE_DUNGEON_RECORD_SUB_EXPLORE = 10;
	TREASURE_DUNGEON_RECORD_ADD_EXPLORE_OVERFLOW = 11;
	TREASURE_DUNGEON_RECORD_SUMMON = 15;
	TREASURE_DUNGEON_RECORD_KILL = 16;
	TREASURE_DUNGEON_RECORD_ADD_TRIAL_AVATAR = 20;
	TREASURE_DUNGEON_RECORD_ADD_BUFF = 24;
	TREASURE_DUNGEON_RECORD_UNLOCK_DOOR = 25;
	TREASURE_DUNGEON_RECORD_ENEMY_ENHANCE = 27;
	TREASURE_DUNGEON_RECORD_ENEMY_WEAKEN = 28;
	TREASURE_DUNGEON_RECORD_ENEMY_AURA_REMOVE = 29;
	TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_RUN = 30;
	TREASURE_DUNGEON_RECORD_SPECIAL_MONSTER_KILL = 31;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_SUCCESS = 33;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_TRIGGER_FAIL = 34;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_EXPLORE = 35;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_OPEN_GRID = 36;
	TREASURE_DUNGEON_RECORD_BATTLE_BUFF_ADD_ITEM = 37;
	TREASURE_DUNGEON_RECORD_AVATAR_DEAD = 40;
	TREASURE_DUNGEON_RECORD_TRIAL_AVATAR_DEAD = 41;
	TREASURE_DUNGEON_RECORD_ALL_AVATAR_DEAD = 42;
	TREASURE_DUNGEON_RECORD_OPEN_ITEM_CHEST = 43;
}

message TreasureDungeonRecordData {
	uint32 TargetGridId = 8;
	uint32 SourceGridId = 13;
	uint32 Param1 = 14;
	uint32 Param2 = 15;
	MGGEMNJKHCF Type = 6;
}

// CNHOAHKEIHD (4436)
message TreasureDungeonDataScNotify {
	GOPDMKGLFGO jbhmijinepf = 4;
}

// AGOGLIBAEFC (4495)
message TreasureDungeonFinishScNotify {
	uint32 odkmailjhkd = 6;
	uint32 ecgklkhkfab = 1;
	bool is_win = 15;
	map<uint32, uint32> mjhfmknegfd = 14;
	map<uint32, uint32> nokmnnbknjb = 2;
	uint32 dleejgfablc = 5;
	uint32 cgecjipkocd = 11;
}

message GOPDMKGLFGO {
	repeated EDBLNCMJOHJ avatar_list = 615;
	uint32 odkmailjhkd = 14;
	repeated EDBLNCMJOHJ kjllppciceo = 1087;
	uint32 map_id = 12;
	uint32 dleejgfablc = 10;
	repeated ELCMMOPPIJC item_list = 825;
	uint32 bdjnieloecj = 7;
	uint32 lampjfohjda = 1750;
	bool ogeodoiggjg = 368;
	repeated TreasureDungeonRecordData iihoaofhkoc = 3;
	bool oamfcjmmpei = 341;
	repeated DFNAPNFOIIF lkcamblneca = 191;
	repeated HHFLEHNGIGB buff_list = 347;
	uint32 ppenlimjkoe = 5;
	uint32 dmfkegchddn = 6;
	repeated JIAFNGIBBGH faemamoaafd = 2;
	bool bacilfnangb = 1240;
	uint32 hlajenagdde = 8;
}

message ELCMMOPPIJC {
	uint32 item_id = 11;
	uint32 item_count = 2;
}

message EDBLNCMJOHJ {
	AmountInfo sp_bar = 2;
	uint32 avatar_type = 15;
	uint32 hp = 11;
	uint32 avatar_id = 7;
	uint32 icnfamafenl = 9;
}

message DFNAPNFOIIF {
	uint32 avatar_id = 10;
	uint32 avatar_type = 3;
}

message HHFLEHNGIGB {
	uint32 buff_id = 8;
	uint32 gebopcgdajm = 9;
}

message JIAFNGIBBGH {
	uint32 ilofimodien = 12;
	bool khknacfljnf = 4;
	uint32 magemnhpnen = 9;
	bool ddeimmkhmna = 2;
	bool epdalegaefp = 11;
	repeated DNEKJKACNJM buff_list = 1615;
	bool idgfpjaiblj = 5;
	uint32 obhilfaeclk = 8;
}

message DNEKJKACNJM {
	uint32 jnmigpelkib = 4;
	uint32 pmhpllpnoec = 5;
	uint32 ilofimodien = 7;
	uint32 pfoajgeplhe = 1;
	uint32 buff_id = 14;
}

message LCGBKIABPLN {
	bool ploeejcpknj = 1;
	bool belfjpefdnn = 2;
	uint32 hhcfffkpnbi = 14;
	uint32 dleejgfablc = 10;
	uint32 ppenlimjkoe = 8;
	uint32 dmfkegchddn = 15;
	uint32 odkmailjhkd = 9;
}

// PHLNHEFIKNI (4434)
message GetTreasureDungeonActivityDataCsReq {
}

// ADJKAOPOOFA (4443)
message GetTreasureDungeonActivityDataScRsp {
	uint32 retcode = 8;
	repeated LCGBKIABPLN bfmlghfigim = 14;
}

// GKAGCMDOPGE (4446)
message EnterTreasureDungeonCsReq {
	repeated HCEAIHGHBPM avatar_list = 1;
	uint32 dleejgfablc = 6;
}

// GPNCBHKPELD (4425)
message EnterTreasureDungeonScRsp {
	uint32 retcode = 9;
	GOPDMKGLFGO jbhmijinepf = 15;
}

// EDOLBCECJMJ (4496)
message OpenTreasureDungeonGridCsReq {
	uint32 ilofimodien = 8;
	uint32 dleejgfablc = 7;
}

// DCCPOJAPPLI (4405)
message OpenTreasureDungeonGridScRsp {
	GOPDMKGLFGO jbhmijinepf = 4;
	uint32 retcode = 6;
}

// ELCLENCCCLL (4426)
message InteractTreasureDungeonGridCsReq {
	uint32 dleejgfablc = 14;
	uint32 cgnkhekhiml = 6;
	uint32 ilofimodien = 4;
}

// FHFJPHALNFA (4407)
message InteractTreasureDungeonGridScRsp {
	uint32 retcode = 10;
	GOPDMKGLFGO jbhmijinepf = 15;
}

// JPOGMNIIHIF (4453)
message UseTreasureDungeonItemCsReq {
	uint32 ilofimodien = 9;
	uint32 item_id = 6;
	uint32 dleejgfablc = 4;
}

// GMFLAALEILB (4490)
message UseTreasureDungeonItemScRsp {
	uint32 retcode = 15;
	GOPDMKGLFGO jbhmijinepf = 11;
}

message HCEAIHGHBPM {
	AvatarType avatar_type = 9;
	uint32 avatar_id = 7;
}

// HEONGNIIKAH (4475)
message FightTreasureDungeonMonsterCsReq {
	uint32 dleejgfablc = 12;
	repeated HCEAIHGHBPM avatar_list = 3;
	uint32 ilofimodien = 2;
}

// NBEFDNCBDHA (4419)
message FightTreasureDungeonMonsterScRsp {
	uint32 retcode = 8;
	SceneBattleInfo battle_info = 15;
}

// BKBJHBKMAEH (4459)
message QuitTreasureDungeonCsReq {
	bool lnfbmlncehm = 5;
	uint32 dleejgfablc = 13;
}

// LMKDMEPMAOC (4412)
message QuitTreasureDungeonScRsp {
	uint32 retcode = 4;
}

// MJDBCBMABGP
enum CmdTutorialType {
	CmdTutorialTypeNone = 0;
	CmdUnlockTutorialGuideScRsp = 1674;
	CmdUnlockTutorialCsReq = 1667;
	CmdFinishTutorialCsReq = 1624;
	CmdUnlockTutorialGuideCsReq = 1652;
	CmdGetTutorialCsReq = 1636;
	CmdGetTutorialGuideScRsp = 1627;
	CmdGetTutorialGuideCsReq = 1684;
	CmdFinishTutorialScRsp = 1693;
	CmdFinishTutorialGuideCsReq = 1634;
	CmdUnlockTutorialScRsp = 1628;
	CmdGetTutorialScRsp = 1695;
	CmdFinishTutorialGuideScRsp = 1643;
}

enum TutorialStatus {
	TUTORIAL_NONE = 0;
	TUTORIAL_UNLOCK = 1;
	TUTORIAL_FINISH = 2;
}

message Tutorial {
	uint32 Id = 6;
	TutorialStatus Status = 7;
}

message TutorialGuide {
	TutorialStatus Status = 2;
	uint32 Id = 3;
}

// JHPFFKOGIGO (1636)
message GetTutorialCsReq {
}

// GetTutorialScRsp (1695)
message GetTutorialScRsp {
	repeated Tutorial TutorialList = 14;
	uint32 retcode = 12;
}

// ILNJFFIBNFN (1684)
message GetTutorialGuideCsReq {
}

// GetTutorialGuideScRsp (1627)
message GetTutorialGuideScRsp {
	uint32 retcode = 2;
	repeated TutorialGuide TutorialGuideList = 5;
}

// OAHMDPENDEP (1667)
message UnlockTutorialCsReq {
	uint32 plpmnflkebo = 13;
}

// UnlockTutorialScRsp (1628)
message UnlockTutorialScRsp {
	Tutorial Tutorial = 4;
	uint32 retcode = 13;
}

// NAFBLABNLBM (1652)
message UnlockTutorialGuideCsReq {
	uint32 group_id = 2;
}

// UnlockTutorialGuideScRsp (1674)
message UnlockTutorialGuideScRsp {
	uint32 retcode = 3;
	TutorialGuide TutorialGuide = 10;
}

// CJLPOHDDAKE (1624)
message FinishTutorialCsReq {
	uint32 plpmnflkebo = 2;
}

// FinishTutorialScRsp (1693)
message FinishTutorialScRsp {
	Tutorial Tutorial = 3;
	uint32 retcode = 6;
}

// EPKNHKHIBLP (1634)
message FinishTutorialGuideCsReq {
	uint32 group_id = 6;
}

// FinishTutorialGuideScRsp (1643)
message FinishTutorialGuideScRsp {
	ItemList Reward = 12;
	TutorialGuide TutorialGuide = 10;
	uint32 retcode = 9;
}

// LCEPODNFIKC
enum CmdWaypointType {
	CmdWaypointTypeNone = 0;
	CmdTakeChapterRewardScRsp = 424;
	CmdGetChapterScRsp = 428;
	CmdSetCurWaypointCsReq = 484;
	CmdGetWaypointCsReq = 436;
	CmdGetWaypointScRsp = 495;
	CmdTakeChapterRewardCsReq = 474;
	CmdWaypointShowNewCsNotify = 452;
	CmdSetCurWaypointScRsp = 427;
	CmdGetChapterCsReq = 467;
}

enum NHFLDKBOPLA {
	WAYPOINT_TYPE_NONE = 0;
	WAYPOINT_TYPE_STAGE = 1;
	WAYPOINT_TYPE_PLOT = 2;
}

enum LABCKCCJBGA {
	WAYPOINT_UNLOCK_NONE = 0;
	WAYPOINT_UNLOCK_PRE = 1;
	WAYPOINT_UNLOCK_LEVEL = 2;
}

message Waypoint {
	bool is_new = 15;
	uint32 id = 5;
	uint32 doocpdbnkmb = 4;
}

message EJHEFDNAIEI {
	uint32 id = 10;
	bool is_new = 8;
	repeated uint32 oknnlacihpf = 3;
	uint32 ecdphnnohpm = 1;
}

message NHLNGJIHMAC {
	repeated Waypoint khddfjjiiap = 15;
	EJHEFDNAIEI lpgfoplikih = 8;
}

// PPKCMGHNHLE (436)
message GetWaypointCsReq {
	uint32 ambcbclhihj = 12;
}

// NOIMALKNDBF (495)
message GetWaypointScRsp {
	uint32 retcode = 11;
	NHLNGJIHMAC ankdjjldeii = 3;
	uint32 pjgihhnckdp = 1;
}

// MKJFCBHKIDH (484)
message SetCurWaypointCsReq {
	uint32 kmaagdfakni = 12;
}

// MLMKPIFIFIB (427)
message SetCurWaypointScRsp {
	uint32 retcode = 4;
	uint32 pjgihhnckdp = 2;
}

// DLCNPIDIJIJ (467)
message GetChapterCsReq {
}

// GAJIFNLKOMF (428)
message GetChapterScRsp {
	uint32 pjgihhnckdp = 11;
	repeated EJHEFDNAIEI hebbmdiflfk = 3;
	uint32 retcode = 15;
}

// IAOEJJICILB (452)
message WaypointShowNewCsNotify {
	uint32 ambcbclhihj = 12;
	uint32 kmaagdfakni = 1;
}

// FIIFELEACEL (474)
message TakeChapterRewardCsReq {
	uint32 ambcbclhihj = 9;
	uint32 imkigfmnnmd = 6;
}

// BEBMIBPNJDN (424)
message TakeChapterRewardScRsp {
	uint32 retcode = 14;
	uint32 imkigfmnnmd = 15;
	uint32 ambcbclhihj = 12;
}

// BGEEFCHMBCD
enum CmdWolfBroType {
	CmdWolfBroTypeNone = 0;
	CmdGetWolfBroGameDataScRsp = 6546;
	CmdWolfBroGameUseBulletCsReq = 6528;
	CmdWolfBroGameActivateBulletScRsp = 6504;
	CmdQuitWolfBroGameScRsp = 6543;
	CmdStartWolfBroGameScRsp = 6550;
	CmdWolfBroGamePickupBulletScRsp = 6513;
	CmdWolfBroGameUseBulletScRsp = 6510;
	CmdArchiveWolfBroGameScRsp = 6523;
	CmdWolfBroGameActivateBulletCsReq = 6517;
	CmdWolfBroGameExplodeMonsterCsReq = 6540;
	CmdWolfBroGameDataChangeScNotify = 6545;
	CmdWolfBroGameExplodeMonsterScRsp = 6511;
	CmdArchiveWolfBroGameCsReq = 6530;
	CmdStartWolfBroGameCsReq = 6512;
	CmdGetWolfBroGameDataCsReq = 6547;
	CmdRestoreWolfBroGameArchiveScRsp = 6549;
	CmdWolfBroGamePickupBulletCsReq = 6548;
	CmdRestoreWolfBroGameArchiveCsReq = 6515;
	CmdQuitWolfBroGameCsReq = 6509;
}

message JAKJIDDBFDO {
	repeated Vector ehopedafjmm = 10;
	bool ooibegpcfbm = 1;
	MotionInfo motion = 2;
	uint32 ifmaeikdhie = 15;
}

message AIOABIIGFKO {
	repeated Vector ehopedafjmm = 13;
	string dnmmbglnjei = 6;
	uint32 id = 10;
	JAKJIDDBFDO nphibjehjam = 4;
	bool ooibegpcfbm = 15;
	uint32 ifmaeikdhie = 11;
}

// ACJLPNNNBKK (6512)
message StartWolfBroGameCsReq {
	MotionInfo motion = 3;
	bool fcggbomjjoa = 15;
	GroupStateInfo group_state_info = 5;
	uint32 id = 10;
}

// BBGBCFHOOCK (6550)
message StartWolfBroGameScRsp {
	uint32 retcode = 13;
	AIOABIIGFKO lkhdjhfpnlh = 7;
}

// MEBEFPGLCDE (6530)
message ArchiveWolfBroGameCsReq {
	uint32 id = 7;
	MotionInfo motion = 12;
}

// EGKGHPOOKKG (6523)
message ArchiveWolfBroGameScRsp {
	AIOABIIGFKO lkhdjhfpnlh = 15;
	uint32 retcode = 4;
}

// NHIDNHNKBPO (6515)
message RestoreWolfBroGameArchiveCsReq {
	uint32 id = 5;
}

// JAIHLHHAIKC (6549)
message RestoreWolfBroGameArchiveScRsp {
	AIOABIIGFKO lkhdjhfpnlh = 6;
	uint32 retcode = 2;
}

// KPAGODHBKGJ (6509)
message QuitWolfBroGameCsReq {
	uint32 id = 8;
}

// KCACLHIALHD (6543)
message QuitWolfBroGameScRsp {
	uint32 retcode = 1;
	AIOABIIGFKO lkhdjhfpnlh = 3;
}

// EGHDOLHEOHM (6547)
message GetWolfBroGameDataCsReq {
	uint32 id = 13;
}

// LJLNDLOINON (6546)
message GetWolfBroGameDataScRsp {
	AIOABIIGFKO lkhdjhfpnlh = 10;
	uint32 retcode = 12;
}

// KEEMMFNGBGG (6545)
message WolfBroGameDataChangeScNotify {
	AIOABIIGFKO lkhdjhfpnlh = 14;
}

// GEKHFPIGFBI (6528)
message WolfBroGameUseBulletCsReq {
	repeated uint32 assist_monster_entity_id_list = 14;
	Vector iikmhchcoge = 8;
}

// IGCICMBFGCG (6510)
message WolfBroGameUseBulletScRsp {
	uint32 retcode = 10;
	AIOABIIGFKO lkhdjhfpnlh = 14;
}

// GGKLPKINKOL (6548)
message WolfBroGamePickupBulletCsReq {
	Vector iikmhchcoge = 6;
}

// JIKCLEMLIGP (6513)
message WolfBroGamePickupBulletScRsp {
	AIOABIIGFKO lkhdjhfpnlh = 15;
	uint32 retcode = 7;
}

// HMOBDDGEOGI (6517)
message WolfBroGameActivateBulletCsReq {
	uint32 group_id = 13;
	uint32 config_id = 15;
}

// LKNKDPNOFHA (6504)
message WolfBroGameActivateBulletScRsp {
	uint32 retcode = 12;
}

// ODHCECCPMBF (6540)
message WolfBroGameExplodeMonsterCsReq {
	repeated uint32 assist_monster_entity_id_list = 6;
}

// HMHJNIDBIED (6511)
message WolfBroGameExplodeMonsterScRsp {
	uint32 retcode = 14;
}

// AJAALFIABEN
enum CmdWorldUnlockType {
	CmdWorldUnlockTypeNone = 0;
	CmdWorldUnlockScRsp = 7627;
	CmdWorldUnlockCsReq = 7626;
}

// BMAIPDMECPA (7626)
message WorldUnlockCsReq {
	uint32 amobpgcpfkk = 6;
}

// DMPNIIMLENE (7627)
message WorldUnlockScRsp {
	uint32 amobpgcpfkk = 9;
	uint32 retcode = 7;
}

enum AANMKONAGPG {
	DISPATCH_TYPE_NONE = 0;
	DISPATCH_TYPE_BY_ADDR = 1;
	DISPATCH_TYPE_BY_MOD = 2;
	DISPATCH_TYPE_BY_RAND = 3;
	DISPATCH_TYPE_BY_CHASH = 4;
	DISPATCH_TYPE_BY_STICKY_SESSION = 5;
	DISPATCH_TYPE_BY_OBJECT = 6;
}

message BCPGKOJGALH {
	uint32 obbcmjfanio = 1;
	uint32 dlphkdbopej = 2;
	uint32 lmdcfekccgm = 3;
	uint32 modapkfghfm = 4;
	uint32 aklikcffbbb = 5;
	uint32 dknnnphgcjk = 6;
	uint32 oaackhacnba = 7;
	uint32 ffaehlflppn = 8;
	uint32 jiainhjcbjf = 9;
	uint32 klfakfgcgfg = 10;
	uint32 id = 11;
	uint32 cfkiamfjpkb = 12;
	uint32 jakniekoncd = 13;
}
